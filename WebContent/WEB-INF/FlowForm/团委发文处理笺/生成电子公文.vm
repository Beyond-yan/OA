TWSentArchiveDepCheck = Ext.extend(Ext.Panel, {
	taskId : null,
	setTaskId : function(vId) {
		this.taskId = vId;
	},
	getTaskId : function() {
		return this.taskId;
	},
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		TWSentArchiveDepCheck.superclass.constructor.call(this, {
					id:'TWDZGWTWSentArchiveDepCheck',
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					modal : true,
					height : 625,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : this.buttons
				});
	},
	initUIComponents : function() {

		this.displayPanel = new Ext.Panel({
			id :'TWFFTWSentArchiveDepCheck.displayPanel',
			autoScroll : true,
			autoHeight : true,
			border : false,
			autoLoad : {
				url : __ctxPath
				+ '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=${fileIds}&defId=${defId}&sentPanelId=TWFFTWSentArchiveDepCheck',
				nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			url : __ctxPath + '/archive/saveDepLeaderRead.do',
			id : 'TWSentArchiveDepCheckForm',
			defaults : {
				anchor : '98%,98%'
			},
			items : [new ArchivesUtil({
						panelId : 'TWDZGWTWSentArchiveDepCheck',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),{
						name : 'archives.archivesId',
						xtype : 'hidden',
						value : '${archivesId}'
					}, {
						layout:'column',
					   border:false,
					   style:'padding-top:10px;',
					   items:[{
					   		layout:'form',
					   		border:false,
					   		items:[ {fieldLabel : '备注',
										name : 'leaderRead.leaderOpinion',
										id:'SentArchiveDepCheckForm.leaderOpinion',
										autoScroll:true,
										maxLength:500,
										allowBlank:true,
										xtype:'textarea',
										width:466,
										height:40
									}]
					      }/*,{
					   		layout:'form',
					   		style:'padding-top:10px;padding-left:5px;',
					   		border:false,
					   		items:[{
									xtype : 'button',
									text : '常用批示语',
									iconCls :  'menu-new-document',
									handler : function() {
										OdCommentsSelector.getView(
											function(id, name) {
											var fm = Ext
												.getCmp('TWSentArchiveDepCheckForm');
												fm
												.getCmpByName('leaderRead.leaderOpinion')
												.setValue(name);
												}, true).show();
										}
									}]
					   }*/]
					},{
						id : 'TWSentArchiveDepCheck.reFileId',
						xtype : 'hidden'
					}]
		});
		this.buttons = [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-ok',
								   text:'完成排版',
								   handler:this.completeSetting
								}),
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								}),
								new Ext.Button({
								   iconCls:'btn-changeTask',
								   text:'退回',
								   handler:this.backsetp.createCallback(this.formPanel,this,'${v.source}')
								})
								#set ($count=$count+1)
						#end];
	},
	completeSetting:function(){
		Ext.MessageBox.confirm('信息确认','请确认是否完成排版',function(btn){
		   if(btn=='yes'){
		     Ext.Ajax.request({
			    url:__ctxPath+'/archive/updateIsComSettingArchives.do?archivesId=${archivesId}',
			    method:'post',
			    success:function(response,options){
			      Ext.ux.Toast.msg('操作信息','排版成功！');
			    
			    },
			    failure:function(response,options){
			      Ext.ux.Toast.msg('操作信息','排版失败！');
			    
			    }
	  });
		   }
		});
	  
	},
	backsetp:function(formPanel,panel,activityName){
//		if (panel.store.getCount() == 0) {
//			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
//			return false;
//		}
		if (!formPanel.getForm().isValid()){return false;}
		 Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : panel.taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				var prevFlowAssignId =  processForm[0].creatorId;
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
				formPanel.getForm().submit({
						url:__ctxPath+ "/flow/nextForSyncProcessActivity.do",
						method:'post',
						timeout:120000,
						waitMsg:'正在提交处理，请稍等',
						scope:this,
						params:{
								taskId : panel.taskId,
								signalName : prevSignalName,
								activityName : activityName,
								comments : '退回',
								destName : prevDestName,
								status : '已办理',
								sendMail : sendMail,
								sendMsg : sendMsg,
								sendInfo : sendInfo,
								flowAssignId : prevFlowAssignId
						},
						success : function(fp, action) {
                            // --无后续的错误友好提示开始
                            var jsonResult = action.result;
                            if (jsonResult) {
                                if (jsonResult && jsonResult.success == "true") {
                                    Ext.ux.Toast.msg("操作信息", "操作成功！");
                                } else {
                                    var resultMsg = "信息保存出错，请联系管理员！";
                                    var resuIcon = Ext.MessageBox.ERROR;
                                    if (jsonResult.message && jsonResult.message != null) {
                                        resultMsg = jsonResult.message;
                                        if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
                                            resuIcon= Ext.MessageBox.WARNING;
                                        }
                                    }
                                    Ext.MessageBox.show({
                                        title : '操作信息',
                                        msg : resultMsg,
                                        buttons : Ext.MessageBox.OK,
                                        icon : resuIcon
                                    });
                                }
                            }
                            // --无后续的错误友好提示结束
						 	AppUtil.removeTab('ProcessForm' + panel.taskId);
						 	refreshTaskPanelView();
						},
						failure : function(fp, action) {
                            Ext.MessageBox.show({
                                title : '操作信息',
                                msg : '当前系统繁忙，请稍后再处理！',
                                buttons : Ext.MessageBox.OK,
                                icon : Ext.MessageBox.WARNING
                            });
						}
					}
				
				);},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
//		if (panel.store.getCount() == 0) {
//			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
//			return false;
//		}
		if (formPanel.getForm().isValid()) {
			var sendMail = msgPanel.getCmpByName('sendMail').getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			var depLeaderOption = 'sent';
			var params = {
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					depLeaderOption : depLeaderOption,
					sendMail : sendMail,
					//status : result,
					sendMsg : sendMsg,
					sendInfo:sendInfo,
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue(),
					flowAssignId:'${sendUserId}'
				};
			var docParams=Ext.getCmp("TWSentArchiveDepCheck.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}
			//alert(Ext.util.JSON.encode(params));
		formPanel.getForm().submit({
				url : __ctxPath + '/archive/updateElecArchStatusArchives.do',
				method:'post',
				waitMsg : '正在提交数据...',
				params : {
						'archivesId' : '${archivesId}'
				},
				success : function(response, options) {
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
				method : 'post',
				timeout:120000,
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {
					// --无后续的错误友好提示开始
					var jsonResult = action.result;
					if (jsonResult) {
						if (jsonResult && jsonResult.success == "true") {
							Ext.ux.Toast.msg("操作信息", "操作成功！");
						} else {
							var resultMsg = "信息保存出错，请联系管理员！";
							var resuIcon = Ext.MessageBox.ERROR;
							if (jsonResult.message && jsonResult.message != null) {
								resultMsg = jsonResult.message;
								if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
									resuIcon= Ext.MessageBox.WARNING;
								}
							}
							Ext.MessageBox.show({
								title : '操作信息',
								msg : resultMsg,
								buttons : Ext.MessageBox.OK,
								icon : resuIcon
							});
						}
					}
					// --无后续的错误友好提示结束
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
						title : '操作信息',
						msg : '当前系统繁忙，请稍后再处理！',
						buttons : Ext.MessageBox.OK,
						icon : Ext.MessageBox.WARNING
					});
				}
			});}});
		}
	}// end of save
})