SentArchiveDepCheck = Ext.extend(Ext.Panel, {
    taskId : null,
    setTaskId : function(vId) {
        this.taskId = vId;
    },
    getTaskId : function() {
        return this.taskId;
    },
    formPanel : null,
    displayPanel : null,
    constructor : function(_cfg) {
        Ext.applyIf(this, _cfg);
        this.initUIComponents();
        SentArchiveDepCheck.superclass.constructor.call(this, {
            layout : 'form',
            items : [this.displayPanel, this.formPanel],
            id : 'SentArchiveDepCheckWin',
            modal : true,
            height : 620,
            width : 700,
            autoHeight : true,
            maximizable : true,
            buttonAlign : 'center',
            buttons : this.buttons
        });
    },
    initUIComponents : function() {

        this.displayPanel = new Ext.Panel({
            id : 'SentArchiveDepCheckPanel',
            autoScroll : true,
            autoHeight : true,
            id :'XZSentArchiveDepCheck.displayPanel',
            border : false,
            autoLoad : {
                url : __ctxPath
                + '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=${fileIds}&defId=${defId}&sentPanelId=XZSentArchiveDepCheck',
                nocache : true
            }
        });
        this.formPanel = new Ext.FormPanel({
            layout : 'form',
            bodyStyle : 'padding:10px 10px 10px 10px',
            border : false,
            url : __ctxPath + '/archive/saveDepLeaderRead.do',
            id : 'SentArchiveDepCheckForm',
            defaults : {
                anchor : '98%,98%'
            },
            items : [new ArchivesUtil({
                panelId : 'SentArchiveDepCheckWin',
                archivesId : '${archivesId}'
            }).getGridPanelWithFullTools(),{
                name : 'archives.archivesId',
                id: 'archives.archivesId',
                xtype : 'hidden',
                value : '${archivesId}'
            }, {
                xtype : 'radiogroup',
                allowBlank : false,
                items : [{
                    boxLabel : '分发',
                    name : 'depOption',
                    checked : true,
                    inputValue : 2,
                    listeners : {
                        'check' : function(checkbox, checked) {
                            if (checked) {
                                Ext.getCmp('SentArchiveDepCheck.Leaders').hide();
                                Ext.getCmp('SentArchiveDepCheck.LeaderNames').allowBlank = true;
                            }
                        }
                    }
                }, {
                    boxLabel : '签发',
                    name : 'depOption',
                    inputValue : 1,
                    listeners : {
                        'check' : function(checkbox, checked) {
                            if (checked) {
                                Ext.getCmp('SentArchiveDepCheck.Leaders').show();
                                Ext.getCmp('SentArchiveDepCheck.LeaderNames').allowBlank = false;
                            }
                        }
                    }
                }, {
                    boxLabel : '领导会签',
                    name : 'depOption',
                    inputValue : 3,
                    listeners : {
                        'check' : function(checkbox, checked) {
                            if (checked) {
                                Ext.getCmp('SentArchiveDepCheck.Leaders').show();
                                Ext.getCmp('SentArchiveDepCheck.LeaderNames').allowBlank = false;
                            }
                        }
                    }
                }],
                fieldLabel : '审批步骤'
            }, {
                id : 'SentArchiveDepCheck.Leaders',
                xtype : 'container',
                layout : 'column',
                style : 'padding-bottom:5px;',
                hidden : true,
                defaults : {
                    border : false
                },
                items : [{
                    xtype : 'label',
                    text : '选择人员：',
                    width : 105
                }, {
                    xtype : 'textfield',
                    width : 445,
                    readOnly : true,
//									allowBlank : false,
                    id : 'SentArchiveDepCheck.LeaderNames'
                }, {
                    xtype : 'hidden',
                    id : 'SentArchiveDepCheck.viceLeaderIds'
                }, {
                    xtype : 'button',
                    iconCls : 'menu-department',
                    text : '选择人员',
                    handler : function() {
                        var option = formPanel.getCmpByName('depOption').getGroupValue();
                        var url = __ctxPath + '/system/depLeadersTreeDepartment.do?roles='+roleMap.get('leaderRoleId');
                        DepLeaders.getView(
                            function(userIds, userNames) {
                                Ext.getCmp('SentArchiveDepCheck.viceLeaderIds').setValue(userIds);
                                Ext.getCmp('SentArchiveDepCheck.LeaderNames')
                                    .setValue(userNames);
                            }, option==1, null,url).show();
                    }
                }]
            }, {
                xtype : 'container',
                layout : 'column',
                defaults : {
                    border : false
                },
                items : [{
                    xtype : 'label',
                    text : '备注：',
                    width : 105
                }, {
                    name : 'leaderRead.leaderOpinion',
                    xtype : 'textarea',
                    maxLength :500,
                    width : 440,
                    height:40
                }/*,{
									xtype : 'button',
									text : '常用批示语',
									style:'padding-top:10px;',
									iconCls : 'menu-new-document',
									handler : function() {
										OdCommentsSelector.getView(
											function(id, name) {
												Ext.getCmp('SentArchiveDepCheckForm')
													.getCmpByName('leaderRead.leaderOpinion')
													.setValue(name);
											}, true).show();
										}
								}*/]

            }]
        });
        this.buttons = [ #set ($count=0)
			#foreach ($v in $nextTrans)
				#if($count>0)
                    ,
				#end
                new Ext.Button({
                    iconCls:'btn-ok',
                    text:'完成排版',
                    handler:this.completeSetting
                }),
                new Ext.Button({
                    iconCls:'btn-transition',
                    text:'确认',
                    handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
                }),
                new Ext.Button({
                    iconCls:'btn-changeTask',
                    text:'退回',
                    handler:this.backsetp.createCallback(this.formPanel,this,'${v.source}')
                })
				#set ($count=$count+1)
			#end];
    },
    completeSetting:function(){
        Ext.MessageBox.confirm('信息确认','请确认是否完成排版',function(btn){
            if(btn=='yes'){
                Ext.Ajax.request({
                    url:__ctxPath+'/archive/updateIsComSettingArchives.do?archivesId=${archivesId}',
                    method:'post',
                    success:function(response,options){
                        Ext.ux.Toast.msg('操作信息','排版成功！');

                    },
                    failure:function(response,options){
                        Ext.ux.Toast.msg('操作信息','排版失败！');

                    }
                });
            }
        });

    },
    backsetp:function(formPanel,panel,activityName){
        Ext.getCmp('SentArchiveDepCheck.LeaderNames').allowBlank=true;
        if (!formPanel.getForm().isValid()){return false;}
        Ext.Ajax.request({
            url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
            params : {
                'taskId' : panel.taskId
            },
            method:'post',
            success : function(response, options) {
                var processForm = Ext.util.JSON.decode(response.responseText).data;
                var prevSignalName  = processForm[0].signalName;
                var prevDestName  = processForm[0].activityName;
                var prevFlowAssignId =  processForm[0].creatorId;
                var sendMail = msgPanel.getCmpByName('sendMail').getValue();
                var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
                var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
                //alert(processForm[0].activityName + " " + processForm[0].creatorId  +" " + activityName + " " + "to"+processForm[0].activityName);
                formPanel.getForm().submit({
                        url:__ctxPath+ "/flow/nextForSyncProcessActivity.do",
                        method:'post',
                        waitMsg:'正在提交处理，请稍等',
                    timeout:120000,
                        scope:this,
                        params:{
                            taskId : panel.taskId,
                            signalName : prevSignalName,
                            activityName : activityName,
                            comments : '退回',
                            destName : prevDestName,
                            status : '已办理',
                            sendMail : sendMail,
                            sendMsg : sendMsg,
                            sendInfo : sendInfo,
                            //看是否指定了执行人员
                            flowAssignId : prevFlowAssignId
                        },
                        success : function(fp, action) {
                            // --无后续的错误友好提示开始
                            var jsonResult = action.result;
                            if (jsonResult) {
                                if (jsonResult && jsonResult.success == "true") {
                                    Ext.ux.Toast.msg("操作信息", "操作成功！");
                                } else {
                                    var resultMsg = "信息保存出错，请联系管理员！";
                                    var resuIcon = Ext.MessageBox.ERROR;
                                    if (jsonResult.message && jsonResult.message != null) {
                                        resultMsg = jsonResult.message;
                                        if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
                                            resuIcon= Ext.MessageBox.WARNING;
                                        }
                                    }
                                    Ext.MessageBox.show({
                                        title : '操作信息',
                                        msg : resultMsg,
                                        buttons : Ext.MessageBox.OK,
                                        icon : resuIcon
                                    });
                                }
                            }
                            // --无后续的错误友好提示结束
                            AppUtil.removeTab('ProcessForm' + panel.taskId);
                            refreshTaskPanelView();},
                        failure : function(fp, action) {
                            Ext.MessageBox.show({
                                title : '操作信息',
                                msg : '当前系统繁忙，请稍后再处理！',
                                buttons : Ext.MessageBox.OK,
                                icon : Ext.MessageBox.WARNING
                            });
                        }
                    }

                );},
            failure : function(response, options) {
                Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
            }
        });
    },
    save : function(formPanel, panel, signalName, activityName, destination) {
        /*		if (panel.store.getCount() == 0) {
                    Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
                    return false;
                }*/
        if (formPanel.getForm().isValid()) {
            var option = formPanel.getCmpByName('depOption').getGroupValue();
            var sendMail = msgPanel.getCmpByName('sendMail').getValue();
            var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
            var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
            var depLeaderOption = 'sent';
            var params = {
                createNext : option,
                taskId : panel.taskId,
                signalName : signalName,
                activityName : activityName,
                depLeaderOption : depLeaderOption,
                sendMail : sendMail,
                sendMsg : sendMsg,
                sendInfo : sendInfo,
                comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
            };
            if (1 == option ) {	//fenda
                Ext.apply(params,{
                    depLeaderOption : '签发',
                    status : '呈签发',
                    flowAssignId : Ext.getCmp('SentArchiveDepCheck.viceLeaderIds').getValue()
                });
            }else if(3 == option ){
                Ext.apply(params,{
                    destName : '领导会签',
                    signUserIds : Ext.getCmp('SentArchiveDepCheck.viceLeaderIds').getValue()
                });
            }
            //alert(Ext.util.JSON.encode(params));
            formPanel.getForm().submit({
                url : __ctxPath + '/archive/updateElecArchStatusArchives.do',
                method:'post',
                params : {
                    'archivesId' : Ext.getCmp("archives.archivesId").getValue()
                },
                success : function(response, options) {
                    formPanel.getForm().submit({
                        url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
                        method : 'post',
                        waitMsg : '正在提交数据...',
                        timeout:120000,
                        params : params,
                        success : function(fp, action) {
                            // --无后续的错误友好提示开始
                            var jsonResult = action.result;
                            if (jsonResult) {
                                if (jsonResult && jsonResult.success == "true") {
                                    Ext.ux.Toast.msg("操作信息", "操作成功！");
                                } else {
                                    var resultMsg = "信息保存出错，请联系管理员！";
                                    var resuIcon = Ext.MessageBox.ERROR;
                                    if (jsonResult.message && jsonResult.message != null) {
                                        resultMsg = jsonResult.message;
                                        if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
                                            resuIcon= Ext.MessageBox.WARNING;
                                        }
                                    }
                                    Ext.MessageBox.show({
                                        title : '操作信息',
                                        msg : resultMsg,
                                        buttons : Ext.MessageBox.OK,
                                        icon : resuIcon
                                    });
                                }
                            }
                            // --无后续的错误友好提示结束
                            AppUtil.removeTab('ProcessForm' + panel.taskId);
                            refreshTaskPanelView();
                        },
                        failure : function(fp, action) {
                            Ext.MessageBox.show({
                                title : '操作信息',
                                msg : '当前系统繁忙，请稍后再处理！',
                                buttons : Ext.MessageBox.OK,
                                icon : Ext.MessageBox.WARNING
                            });
                        }
                    });
                }
            });
        }
    }// end of save
})