ZGSentArchiveDepCheck = Ext.extend(Ext.Panel, {
	taskId : null,
	setTaskId : function(vId) {
		this.taskId = vId;
	},
	getTaskId : function() {
		return this.taskId;
	},
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		ZGSentArchiveDepCheck.superclass.constructor.call(this, {
			        id:'JTWEHBGSZGSentArchiveDepCheck',
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					modal : true,
					height : 680,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : this.buttons
				});
	},
	initUIComponents : function() {

		this.displayPanel = new Ext.Panel({
			id : 'SentArchiveDepCheckPanel',
			autoScroll : true,
			autoHeight : true,
			id :'JTWYHSentArchiveDepCheck.displayPanel',
			border : false,
			autoLoad : {
				url : __ctxPath
				+ '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=${fileIds}&defId=${defId}&sentPanelId=JTWYHSentArchiveDepCheck',
				nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			url : __ctxPath + '/archive/saveDepLeaderRead.do',
			id : 'SentArchiveDepCheckForm',
			defaults : {
				anchor : '98%,98%'
			},
			items : [new ArchivesUtil({
						panelId : 'JTWEHBGSZGSentArchiveDepCheck',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),{
						name : 'archives.archivesId',
						xtype : 'hidden',
						value : '${archivesId}'
					}, {
						xtype : 'radiogroup',
						allowBlank : false,
						columns :[.3,.3,.4],
						defaults:{
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('viceLeaderIds').setValue('');
										Ext.getCmp('SentArchiveDepCheck.LeaderNames').setValue('');
									}
								}
							}
						},
						items : [{
							boxLabel : '签发',
							name : 'depOption',
							inputValue : 4,
							checked : true
						}, {
							boxLabel : '领导会签',
							name : 'depOption',
							inputValue : 1
							
						}, {
							boxLabel : '处室会签（办公室发起）',
							name : 'depOption',
							inputValue : 2
						}],
						fieldLabel : '会签步骤'
					}, {
						xtype : 'container',
						id : 'SentArchiveDepCheck.signDep',
						layout : 'column',
						height : 30,
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '选择人员:',
									width : 104
								}, {
									id : 'SentArchiveDepCheck.LeaderNames',
									xtype : 'textfield',
									width : '70%',
									allowBlank : false,
									readOnly : true
								},{
									xtype : 'hidden',
									id : 'viceLeaderIds'
								},
								{
									xtype : 'button',
									iconCls : 'menu-department',
									style : 'padding-left:5px;',
									text : '选择领导',
									handler : function() {
									var option = formPanel.getCmpByName('depOption').getGroupValue();
									var roles ='';
									var url = __ctxPath + '/system/depLeadersTreeDepartment.do';
									switch(option){
										case '1':
											roles = roleMap.get('leaderRoleId');
											url  =  __ctxPath + '/system/depLeadersTreeDepartment.do?roles=' + roles;
											break;
										case '2':
											roles = roleMap.get('officeDirectorRoleID')+','+roleMap.get('officeDeputyDirectorRoleID');//'100152,100156';
											url  =  __ctxPath + '/system/depLeadersTreeDepartment.do?roles=' + roles ;
											break;
										case '4':
											roles = roleMap.get('leaderRoleId');//'100175';
											url  =  __ctxPath + '/system/depLeadersTreeDepartment.do?roles=' + roles;
											break;
										default:
											roles = '';
									}
									DepLeaders.getView(
											function(userIds, fullnames) {
												Ext.getCmp('viceLeaderIds').setValue(userIds);
												Ext.getCmp('SentArchiveDepCheck.LeaderNames')
														.setValue(fullnames);
											}, option==4, null,url).show();
									}
									
								}]
					},{
					   layout:'column',
					   border:false,
					   items:[{
					   		layout:'form',
					   		border:false,
					   		items:[ {fieldLabel : '审批意见',
										name : 'leaderRead.leaderOpinion',
										id:'SentArchiveDepCheckForm.leaderOpinion',
										autoScroll:true,
										maxLength:500,
										allowBlank:true,
										xtype:'textarea',
										width:466,
										height:40
									}]
					      },{
					   		layout:'form',
					   		style:'padding-top:10px;padding-left:5px;',
					   		border:false,
					   		items:[{
									xtype : 'button',
									text : '常用批示语',
									iconCls : 'menu-new-document',
									handler : function() {
										OdCommentsSelector.getView(
											function(id, name) {
											var fm = Ext
												.getCmp('SentArchiveDepCheckForm');
												fm
												.getCmpByName('leaderRead.leaderOpinion')
												.setValue(name);
												}, true).show();
										}
									}]
					   }]
					}, {
						name : 'leaderRead.checkName',
						xtype : 'hidden',
						value : #foreach ($v in $nextTrans)
								'${v.source}'
							#end
					}, {
						name : 'leaderRead.depName',
						xtype : 'hidden',
						value : curUserInfo.depName
					}]
		});
		this.buttons = [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								}),
								new Ext.Button({
								   iconCls:'btn-changeTask',
								   text:'退回',
								   handler:this.backsetp.createCallback(this.formPanel,this,'${v.source}')
								})
								#set ($count=$count+1)
						#end];
	},
	backsetp:function(formPanel,panel,activityName){
		/*if (panel.store.getCount() == 0) {
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}*/
		Ext.getCmp('SentArchiveDepCheck.LeaderNames').allowBlank = true;
		if (!formPanel.getForm().isValid()){return false;}
		 Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : panel.taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				var prevFlowAssignId =  processForm[0].creatorId;
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();

				// alert(processForm[0].activityName + " " +
				// processForm[0].creatorId +" " + activityName + " " +
				// "to"+processForm[0].activityName);
				formPanel.getForm().submit({
						url:__ctxPath+ "/flow/nextForSyncProcessActivity.do",
						method:'post',
						timeout:120000,
						waitMsg:'正在提交处理，请稍等',
						scope:this,
						params:{
								taskId : panel.taskId,
								signalName : prevSignalName,
								activityName : activityName,
								comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue(),
								destName : prevDestName,
								status : '退回',
								sendMail : sendMail,
								sendMsg : sendMsg,
								sendInfo:sendInfo,
								// 看是否指定了执行人员
								flowAssignId : prevFlowAssignId
						},
						success : function(fp, action) {
							// --无后续的错误友好提示开始
							var jsonResult = action.result;
                            if (jsonResult) {
                                if (jsonResult && jsonResult.success == "true") {
                                    Ext.ux.Toast.msg("操作信息", "操作成功！");
                                } else {
                                    var resultMsg = "信息保存出错，请联系管理员！";
                                    var resuIcon = Ext.MessageBox.ERROR;
                                    if (jsonResult.message && jsonResult.message != null) {
                                        resultMsg = jsonResult.message;
                                        if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
                                            resuIcon= Ext.MessageBox.WARNING;
                                        }
                                    }
                                    Ext.MessageBox.show({
                                        title : '操作信息',
                                        msg : resultMsg,
                                        buttons : Ext.MessageBox.OK,
                                        icon : resuIcon
                                    });
                                }
                            }
                            // --无后续的错误友好提示结束
							AppUtil.removeTab('ProcessForm' + panel.taskId);
							refreshTaskPanelView();
						},
						failure : function(fp, action) {
							Ext.MessageBox.show({
                                title : '操作信息',
                                msg : '当前系统繁忙，请稍后再处理！',
                                buttons : Ext.MessageBox.OK,
                                icon : Ext.MessageBox.WARNING
                            });
						}
					}
				
				);},
				failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
		/*if (panel.store.getCount() == 0) {
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}*/
		if (formPanel.getForm().isValid()) {
			var option = formPanel.getCmpByName('depOption').getGroupValue();
			var sendMail = msgPanel.getCmpByName('sendMail')
					.getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg')
					.getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			var result = '';
			var params = {
					officeNext:option,// 部门下一步审核人
					officeExerId:curUserInfo.userId,
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					ccUserIds : ccPanel.getCmpByName('ccIds').getValue(),
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo:sendInfo,
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
				};
			var leaderIds = Ext.getCmp('viceLeaderIds').getValue();
			if (1 == option ) {	// 会签
				result = '呈领导会签';
				Ext.apply(params,{
					destName : '领导会签',
					status : result,
					signUserIds : leaderIds
				});
			} else if (2 == option ) { // 处室
				result = '呈处室会签(办公室发起)';
				Ext.apply(params,{
					destName : '处室会签(办公室发起)',
//					status : result,
					signUserIds : leaderIds
				});
			}else {		// 签发
				result = '呈签发',
				Ext.apply(params,{
					status : result,
					flowAssignId : leaderIds
				});
			}
			// alert(Ext.util.JSON.encode(params)); return false;
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
				method : 'post',
				timeout:120000,
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {
					// --无后续的错误友好提示开始
					var jsonResult = action.result;
					if (jsonResult) {
						if (jsonResult && jsonResult.success == "true") {
							Ext.ux.Toast.msg("操作信息", "操作成功！");
						} else {
							var resultMsg = "信息保存出错，请联系管理员！";
							var resuIcon = Ext.MessageBox.ERROR;
							if (jsonResult.message && jsonResult.message != null) {
								resultMsg = jsonResult.message;
								if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
									resuIcon= Ext.MessageBox.WARNING;
								}
							}
							Ext.MessageBox.show({
								title : '操作信息',
								msg : resultMsg,
								buttons : Ext.MessageBox.OK,
								icon : resuIcon
							});
						}
					}
					// --无后续的错误友好提示结束
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
						title : '操作信息',
						msg : '当前系统繁忙，请稍后再处理！',
						buttons : Ext.MessageBox.OK,
						icon : Ext.MessageBox.WARNING
					});
				}
			});
		}
	}// end of save
})