TrafficBoardLawsReceivePanel = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		// 必须先初始化组件  
			function createFileUpdateCmp(id_pre, label) {
			return [{
						columnWidth : .85,
						items : [{
									fieldLabel : label,
									xtype : 'panel',
									id : id_pre + '.personFilePanel',
									frame : false,
									border : true,
									bodyStyle : 'padding:4px 4px 4px 4px;',
									height : 80,
									autoScroll : true,
									html : ''
								}]
					}, {
						columnWidth : .14,
						items : [{
							border : false,
							xtype : 'button',
							text : '添加文件',
							iconCls : 'menu-attachment',
							handler : function() {
								var dialog = App.createUploadDialog({
									file_cat : 'document',
									judge_size : 'no',
									upload_autostart : true,
									callback : function(data) {
										var fileIds = Ext.getCmp(id_pre
												+ '.fileIds');
										var filePanel = Ext.getCmp(id_pre
												+ '.personFilePanel');

										for (var i = 0; i < data.length; i++) {
											if (fileIds.getValue() != '') {
												fileIds.setValue(fileIds
														.getValue()
														+ ',');
											}
											fileIds.setValue(fileIds.getValue()
													+ data[i].fileId);

											Ext.DomHelper
													.append(
															filePanel.body,
															'<span><a href="#" onclick="FileAttachDetail.show('
																	+ data[i].fileId
																	+ ')">'
																	+ data[i].filename
																	+ '</a> <img class="img-delete" src="'
																	+ __ctxPath
																	+ '/images/system/delete.gif" onclick="removeFile(this,\''+id_pre+'.fileIds\','
																	+ data[i].fileId
																	+ ')"/>&nbsp;|&nbsp;</span>');

										}
									}
								});
								dialog.show(this);
							}
						}, {
							xtype : 'button',
							text : '清除文件',
							iconCls : 'reset',
							handler : function() {
								var fileAttaches = Ext.getCmp(id_pre
										+ '.fileIds');
								var filePanel = Ext.getCmp(id_pre
										+ '.personFilePanel');

								filePanel.body.update('');
								fileAttaches.setValue('');
							}
						}, {
							xtype : 'hidden',
							id : id_pre + '.fileIds',
							name : 'fileIds'
						}]
					}];
		}
		this.archivesId=archivesId;
		// 初始化附件文档
		this.docGridPanel = new ArchivesUtil({
			panelId : 'TrafficBoardLawsReceivePanel',
			isStart : true,
			archivesId : this.archivesId
			}).getGridPanelWithFullTools();
		var initStore=new Ext.data.SimpleStore({
								url : __ctxPath
										+ '/system/getInnersByDepIdsAppUser.do',
								autoLoad : false,
								fields : ['userId', 'fullname']
							});
		
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			id : 'TrafficBoardLawsReceiveForm',
			url : __ctxPath + '/archive/saveNormalArchives.do',
			frame : false,
			border : false,
			labelWidth:70,
			width : 800,
			padding : '5px',
			reader : new Ext.data.JsonReader({
						root : 'data'
			}, [ {
					name : 'archives.archivesId',
					mapping : 'archivesId'
				}, {
					name : 'archives.issueDate',
					mapping : 'issueDate'
				}, {
					name : 'archives.depSignNo',
					mapping : 'depSignNo'
				}, {
					name : 'archives.writtenDate',
					mapping : 'writtenDate'
				}, {
					name : 'archives.issueDep',
					mapping : 'issueDep'
				}, {
				    name:'archives.status',
				    mapping:'status'
				}, {
					name : 'archives.subject',
					mapping : 'subject'
				}, {
					name : 'archives.fileCounts',
					mapping : 'fileCounts'
				}, {
					name : 'archives.privacyLevel',
					mapping : 'privacyLevel'
				}, {
					name : 'archives.urgentLevel',
					mapping : 'urgentLevel'
				}, {
					name : 'archives.issuer',
					mapping : 'issuer'
				}, {
					name : 'archives.issuerId',
					mapping : 'issuerId'
				}, {
					name:'archives.orgDepName',
					mapping:'orgDepName'
				}, {
					name:'archives.archType',
					mapping:'archType'
				}, {
					name:'archives.orgDepId',
					mapping:'orgDepId'
				}, {
					name:'archives.archivesFiles',
					mapping:'archivesFiles'
				}, {
					name:'archives.limitedDate',
					mapping:'limitedDate'
				}]),
			items : [{
						border : false,
						layout : 'column',
						defaults : {
							border : false,
							columnWidth : .33,
							layout : 'form',
							defaults : {
								width : 150,
								xtype : 'textfield',
								allowBlank : true
							}
						},
						items:[{
								items:[
							{
								xtype : 'hidden',
								id : 'TrafficBoardLawsReceiveForm.snId',
								name : 'archives.snConfigId'
							}, {
								xtype : 'hidden',
								id : 'TrafficBoardLawsReceiveForm.snName'
								/*fieldLabel : '编号名称',
								xtype : "combo",
								valueField : 'snId',
								displayField : 'snName',
								editable : false,
								allowBlank : false,
								triggerAction : 'all',
								forceSelection : true,
								width : 150,
								store : new Ext.data.SimpleStore({
									url :__ctxPath + '/snconfig/getReceiveSignsFlowSnConfig.do?archType=1',
									autoLoad : true,
									fields : ['snId', 'snName']
								}),
								listeners : {
									'select' : function(cbo, record, index) {
										Ext.getCmp('TrafficBoardLawsReceiveForm.snId')
												.setValue(cbo.getValue());
										//alert(Ext.get('TrafficBoardLawsReceiveForm.snName').getValue());
										if (Ext.get('TrafficBoardLawsReceiveForm.snName').dom.value != '督办件') {
											Ext.getCmp('archivesArchType').setValue('1');
											Ext.getCmp('TrafficBoardLawsReceiveFormlimitedDate').hide();
											Ext.getCmp('TrafficBoardLawsReceiveFormlimitedDate').allowBlank = true;
										} else {
											Ext.getCmp('archivesArchType').setValue('2');
											Ext.getCmp('TrafficBoardLawsReceiveFormlimitedDate').show();
											Ext.getCmp('TrafficBoardLawsReceiveFormlimitedDate').allowBlank = false;
										}
									}
								}*/
							},{
								xtype:'hidden',
								id:'TrafficBoardLawsReceiveForm.snId'
							},{
								xtype : "hidden",
								name : "archives.recDepIds",
								value:defId
							},{
								xtype : "hidden",
								name : "archives.recDepNames",
								id : "TrafficBoardLawsReceiveForm.recDepNames"
							},{
								xtype : 'combo',
								fieldLabel : '密級',
								name : 'archives.privacyLevel',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								store : ['一般', '秘密', '机密','绝密'],
								listeners: {
									'select':function(combo){
										if(combo.getValue()!='一般'){
											/*Ext.get('officeReceiveRecordFormView.isPublic').dom.disabled=true;
											Ext.getCmp('officeReceiveRecordFormView.isPublic').allowBlank=true;
											Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').allowBlank=true,
											Ext.get('officeReceiveRecordFormView.unPublicReasons').dom.disabled=true;*/
											
											Ext.getCmp('TrafficBoardLawsReceivePanelCounts').show();
											Ext.getCmp('PanelCount').allowBlank = false;
										}else{
											/*Ext.get('officeReceiveRecordFormView.isPublic').dom.disabled=false;
											Ext.getCmp('officeReceiveRecordFormView.isPublic').allowBlank=false;
											Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').allowBlank=false,
											Ext.get('officeReceiveRecordFormView.unPublicReasons').dom.disabled=false;*/
											
											Ext.getCmp('TrafficBoardLawsReceivePanelCounts').hide();
											Ext.getCmp('PanelCount').allowBlank = true;
										}
									}
								}
							},{
								xtype : 'combo',
								width : 150,
								fieldLabel : '文种',
								id: 'TrafficBoardLawsReceiveForm.archivesType',
								hiddenName : "archives.archivesType.typeId",
								valueField : 'typeId',
								displayField : 'typeName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/archive/comboArchivesType.do',
											autoLoad : true,
											fields : ['typeId', 'typeName']
										})
							}, {
								xtype : 'container',
								id : 'TrafficBoardLawsReceivePanelCounts',
								style : 'padding:0px 0px 5px 0px;',
								layout : 'column',
								width : 260,
								hidden : true,
								items : [
									{
										xtype : 'label',
										text : '份号：',
										width : 75
									},{
										xtype : 'numberfield',
										editable : false,
										id : 'PanelCount',
										mode : 'local',
										name : 'archives.fileCounts',
										width : 155,
										value : 000001
								}]
							}]
						},{
							items:[{
								fieldLabel : '收文日期',
								xtype : 'datefield',
								format : 'Y-m-d',
								editable : false,
								allowBlank : false,
								name : 'archives.issueDate',
								value:new Date()
							},{
								xtype : 'combo',
								fieldLabel : '缓急',
								name : 'archives.urgentLevel',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								store : ['特急', '急件', '加急','平急']
							},{
								xtype : 'container',
								id:'TrafficBoardLawsReceiveFormlimitedDate',
								style : 'padding:0px 0px 5px 0px;',
								layout : 'column',
								width : 260,
								hidden : true,
								items : [{
										xtype : 'label',
										text : '限办日期',
										width : 75
									}, {
									name : 'archives.limitedDate',
									id : 'TBLRFDateValue',
									xtype : 'datefield',
									format : 'Y-m-d',
									mode : 'local',
									editable : false,
									value: new Date().add(Date.MONTH,1),
									width : 150
								}]
										}]
						},{
							items:[{
								xtype : 'textfield',
								fieldLabel : '来文号',
								name : 'archives.depSignNo',
								allowBlank : true
							},{ 
							    fieldLabel : '成文日期',
							    name : 'archives.writtenDate',
								xtype : 'datefield',
								format : 'Y-m-d',
								editable : false,
								allowBlank : true	
						}]
					}]
					},/*{
						xtype : 'container',
						layout : 'column',
						defaults : {
							border : false
						},
						items:[{
					   		layout:'form',
					   		border:false,
							items : [{
										fieldLabel : '公文编号',
										name : 'archives.archivesNo',
										id:'archivesReceiveForm.archivesNo',
										xtype : 'textfield',
										allowBlank : false,
										readOnly :true,
										width : 590
									}]
							},{
								xtype : 'button',
								style:'padding-left:5px;',
								iconCls : 'menu-flowWait',
								text : '生成编号',
								handler : function() {
									if(Ext.getCmp('archivesReceiveForm.snName').isValid()){
										Ext.Ajax.request({
											url : __ctxPath + '/snconfig/getSnNoFileSnConfig.do',
											params : {
												defId :0,
												snConfigId:Ext.getCmp("archivesReceiveForm.snName").getValue()
											},
											method : 'POST',
											waitMsg : "正在生成编号，请稍等",
											success : function(response, options) {
												 var archivesNo = Ext.util.JSON.decode(response.responseText).data;
												 Ext.getCmp('archivesReceiveForm.archivesNo').setValue(archivesNo);
											},
											failure : function(response, options) {
												Ext.ux.Toast.msg('操作信息', '生成编号出错，请联系管理员！');
											}
										});
									}
								}
							}]
				},*/{
						xtype : 'textfield',
						fieldLabel : '来文单位',
						name : 'archives.issueDep',
						id:'TrafficBoardLawsReceiveFormView.issueDep',
						width:670,
						allowBlank : false
					},{
						xtype : 'textfield',
						fieldLabel : '标   题',
						name : 'archives.subject',
						id:'TrafficBoardLawsReceiveFormView.subject',
						width:670,
						allowBlank : false
					}, {
						xtype:'hidden',
						id:'TrafficBoardLawsReceiveForm.departmentId',
						name:'archives.orgDepId'
					},{
						xtype : 'container',
						layout : 'hbox',
						style : 'padding-left:0px;margin-bottom:4px;margin-top:4px;',
						layoutConfigs : {
							align : 'middle'
						},
						defaults : {
							margins : '0 2 0 0'
						},
						height : 26,
						items:[{
							xtype : 'label',
							text : '主办部门:',
							style:'padding-top:4px;',
							width : 73
						}, {
							xtype : 'textfield',
							name : 'archives.orgDepName',
							id : 'publicApplyView.department',
							allowBlank : false,
							editable : false,
							readOnly : true,
							width : 595
						},{
							xtype : 'button',
							iconCls : 'btn-dep-sel',
							text : '选择部门',
							handler : function() {
								var url = __ctxPath +"/system/select3Department.do?depId=100130";
								DepSelector3.getView(function(id, name) {
									Ext
											.getCmp('publicApplyView.department')
											.setValue(name);
//									Ext
//											.getCmp('departmentId')
//											.setValue(id);
									Ext
											 .getCmp('TrafficBoardLawsReceiveForm.departmentId')
											 .setValue(id);
									Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore().removeAll();
									Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').clearValue();
									fId=Ext.getCmp('TrafficBoardLawsReceiveForm.departmentId').getValue();
									Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore().load({params:{depIds:fId}});
								}, false,null,url).show();
							}
						}]
					},{
						name : 'userId',
						id : 'TrafficBoardLawsReceiveFormView.userId',
						xtype : 'hidden'
					},{
						name : 'archives.reviewUserName',
						id : 'TrafficBoardLawsReceiveFormView.reviewUserName',
						xtype : 'hidden'
					},{
			    id : 'TrafficBoardLawsReceiveFormView.viceLeaders',
			    //hidden:true,
			    hideMode :'offsets',
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					border : false
				},
				items : [{
							xtype : 'label',
							style:'padding-top:4px;',
							text : '负责人:',
							width : 73
						}, {
						xtype : "combo",
						id : "TrafficBoardLawsReceiveFormView.leaderName",
						hiddenName : 'archives.reviewUser',
						valueField : 'userId',
						displayField : 'fullname',
						editable : false,
						allowBlank : false,
						triggerAction : 'all',
						forceSelection : true,
						width : 675,
						store : new Ext.data.SimpleStore({
								url : __ctxPath
										+ '/system/searchByTwoRoleIdAppUser.do?role1Id='+roleMap.get('officeDeputyDirectorRoleID')+'&role2Id='+roleMap.get('officeDirectorRoleID'),
								autoLoad : true,
								fields : ['userId', 'fullname']
							}),
						listeners : {
							select : function(cbo, record, index) {
								Ext.getCmp('TrafficBoardLawsReceiveFormView.userId')
												.setValue(cbo.getValue());
									},
							'beforequery':function(c){
					                        delete c.combo.lastQuery;//用来过滤store的匹配字符串值。 删除此参数以强制执行一次重新查询                        
					                        var selectNode = Ext.getCmp('TrafficBoardLawsReceiveForm.departmentId');
					                        if(selectNode!=null ){
					                            Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore().setBaseParam('depIds',selectNode.getValue());
					                        }
					                    }
								}
							}]
					},{
						name : 'archives.status',
						xtype : 'hidden',
						value :  1
					},{
					    name : "archives.issuer",
						value : curUserInfo.fullname,
						xtype : 'hidden'
					}, {
						name : 'archives.archivesId',
						xtype : 'hidden'
					}, {
						name : 'archives.issuerId',
						value : curUserInfo.userId,
						xtype : 'hidden'
					},{
						name : 'archives.archType',
						id : 'archivesArchType',
						value : 1,
						xtype : 'hidden'
					},{
						xtype : 'fieldset',
						border : false,
						defaults : {
							anchor : '96.3%,96%'
						},
						items : [this.docGridPanel]
					}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:2px;',
				defaults : {
					allowBlank : true,
					border : false
				},
				items : [{
							xtype : 'label',
							text : '附件：',
							width : 74
						}, {
							xtype : 'textfield',
							name : 'archives.enclosure',
							width : '85%',
							id : 'JTWYHfileAttachments.enclosure'
						}]
			},{
						layout : 'column',
						border : false,
						defaults : {
							layout : 'form',
							border : false
						},
						items : createFileUpdateCmp('JTWYHfileAttachments', '公文附件')
					}/*,{
						xtype : 'radiogroup',
						allowBlank: false,
						fieldLabel : '是否规范性',
						items : [{
									boxLabel : '是',
									name : 'archives.isStandard',
									inputValue : 1
								}, {
									boxLabel : '否',
									name : 'archives.isStandard',
									inputValue : 0
								}]
					}, {
						xtype : 'radiogroup',
						id:'officeReceiveRecordFormView.isPublic',
						fieldLabel : '是否公开',
						items : [{
							boxLabel : '是',
							name : 'archives.isPublic',
							inputValue : 1,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').allowBlank = true;
										Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').hide();
										Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').el
												.parent().parent().hide();
									}
								}
							}
						},{
							boxLabel : '否',
							name : 'archives.isPublic',
							inputValue : 0,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').allowBlank = false;
										Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').show();
										Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').el
												.parent().parent().show();
										
									}
								}
							}
						}]
				}, {
					fieldLabel : '不公开原因',
					xtype : 'textfield',
					name : 'archives.unPublicReasons',
					id : 'officeReceiveRecordFormView.unPublicReasons',
					width : '93%'
				}*/]
			
		});
		/**
		 * 获取编号办法ID、名称并进行判断
		 * 二次修改，改办法比较好用，以前写在保存时，不能动态改变限办时间（黄鹏飞）
		 */
		Ext.Ajax.request({
			url :__ctxPath + '/snconfig/getSigIdFlowSnConfig.do?flowId='+defId,
			method : 'POST',
			success : function(response, options) {
						var signId = Ext.util.JSON.decode(response.responseText).data;
						var signName = Ext.util.JSON.decode(response.responseText).dataName;
						Ext.getCmp('TrafficBoardLawsReceiveForm.snId').setValue(signId);
						Ext.getCmp('TrafficBoardLawsReceiveForm.snName').setValue(signName);
						if(signName != '督办件'){
							Ext.getCmp('archivesArchType').setValue('1');
							Ext.getCmp('TrafficBoardLawsReceiveFormlimitedDate').hide();
							Ext.getCmp('TrafficBoardLawsReceiveFormlimitedDate').allowBlank = true;
						}else{
							Ext.getCmp('archivesArchType').setValue('2');
							Ext.getCmp('TrafficBoardLawsReceiveFormlimitedDate').show();
							Ext.getCmp('TrafficBoardLawsReceiveFormlimitedDate').allowBlank = false;
						}
			}
		});
				Ext.Ajax.request({
								url : __ctxPath + '/archive/getdefnameArchives.do',
								params : {
									'defId' : defId
								},
								method:'post',
								success : function(response, options) {
									var data=Ext.util.JSON.decode(response.responseText);
									Ext.getCmp('TrafficBoardLawsReceiveForm.recDepNames').setValue(data.name);
								}
							});
		if (archivesId) {
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ archivesId,
				waitMsg : '正在载入数据...',
				method:'post',
				success : function(form, action) {
					var fileAttach=new Array();
					var af=action.result.data['archives.archivesFiles'];
					var filePanel = Ext.getCmp('JTWYHfileAttachments.personFilePanel');
				    var fileIds = Ext.getCmp("JTWYHfileAttachments.fileIds");
				         Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore().load({
				    	callback : function () {
				    		Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').setValue(Ext.decode(action.response.responseText).data[0].reviewUserName);
				    	},
				    	scope : Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore(),
				    	add : false
				    });
					Ext.getCmp('TrafficBoardLawsReceiveForm.archivesType').getStore().load({ 
					callback: function () { 
					//等待数据加载完成才进行赋值，不然由于异步会出现先赋值后加载完成。 
					Ext.getCmp('TrafficBoardLawsReceiveForm.archivesType').setValue(Ext.decode(action.response.responseText).data[0].parentArchId);
					}, 
					scope: Ext.getCmp('TrafficBoardLawsReceiveForm.archivesType').getStore(),//表示作用范围 
					add: false //为false表示数据不累加 
					});
					if(af!=null){
							for (var i = 0; i < af.length; i++) {
								if (fileIds.getValue() != '') {
									fileIds.setValue(fileIds.getValue() + ',');
								}
								fileIds.setValue(fileIds.getValue() + af[i].fileId);
								Ext.DomHelper
										.append(
												filePanel.body,
												'<span><a href="#" onclick="FileAttachDetail.show('
														+ af[i].fileId
														+ ')">'
														+ af[i].fileName
														+ '</a><img class="img-delete" src="'
														+ __ctxPath
														+ '/images/system/delete.gif" onclick="removeFile(this,\'JTWYHfileAttachments.fileIds\','
														+ af[i].fileId
														+ ')"/>&nbsp;|&nbsp;</span>');
							  }
				    }
					var privacyLevel=action.result.data['archives.privacyLevel'];
					if(privacyLevel!='一般'&&privacyLevel!=null&&privacyLevel!=''){
						Ext.getCmp('TrafficBoardLawsReceivePanelCounts').show();
						Ext.getCmp('PanelCount').allowBlank = false;
					}
					if(privacyLevel=='一般'){
						Ext.getCmp('TrafficBoardLawsReceivePanelCounts').hide();
						Ext.getCmp('PanelCount').allowBlank = true;
					}
					Ext.getCmp('JTWYHfileAttachments.enclosure').setValue(Ext.decode(action.response.responseText).data[0].enclosure);
					/*var data = Ext.decode(action.response.responseText).data[0];
					alert(data.parentArchId);
					Ext.getCmp('TrafficBoardLawsReceiveForm.archivesType').setValue(data.parentArchId);*/
				},
				failure : function(form, action) {
				}
			});
		}
		
		TrafficBoardLawsReceivePanel.superclass.constructor.call(this, {
			id : 'TrafficBoardLawsReceivePanel',
			layout : 'form',
			items : [this.formPanel],
			modal : true,
			maximizable : true,
			autoHeight : true,
			width : 800,
			bodyStyle : "center",
			iconCls : 'menu-archive-draft',
			title : '重庆市交通委员会法规处收文处理笺 ',
			buttonAlign : 'center',
			buttons : [{
				text : '启动流程',
				id : 'archivesReceiveButtonSave',
				iconCls : 'btn-save',
				scope : this,
				handler : this.save
			},{
								text :'保存草稿',
								iconCls : 'btn-beready-save',
								scope : this,
								handler : this.savedraft
							}]
		});
		var jsArr = [__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocHistoryWin.js',
				__ctxPath + '/js/archive/ArchiveTypeTempView.js',
				__ctxPath + '/js/archive/ArchTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateForm.js',
				__ctxPath + '/js/archive/OfficeTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateSelector.js'];
		$ImportSimpleJs(jsArr, null);
	},
	
	save : function() {
		/*来文单位*/Ext.getCmp('TrafficBoardLawsReceiveFormView.issueDep').allowBlank = false;
		/*标题*/Ext.getCmp('TrafficBoardLawsReceiveFormView.subject').allowBlank = false;
		/*审批负责人*/Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').allowBlank = false;
		if(archivesId){
			Ext.Ajax.request({
						url : __ctxPath + '/archive/updateIsReceiveArchives.do',
						params : {
							'archivesId' : archivesId
						},
						method:'post',
						success : function(response, options) {
						}
			});
		}
		var docCount = this.store.getCount();
/*		if (docCount == 0) {
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}  */
			var defId = this.defId;
			// 获取要提交的表单
			var formPanel = Ext.getCmp('TrafficBoardLawsReceiveForm');
			if (formPanel.getForm().isValid()) {
				// 发文的文档附件
				var docParams = [];

				for (var i = 0; i < docCount; i++) {
					docParams.push(this.store.getAt(i).data);
				}
//				var option = formPanel.getCmpByName('directionOption').getGroupValue();
				var userId = formPanel.getCmpByName('userId').getValue();
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var param = {
					defId : defId,
					startFlow : true,
					sendMail : sendMail,
					sendMsg : sendMsg,
					nextuserId : Ext.getCmp('TrafficBoardLawsReceiveFormView.userId').getValue(),
					depIds:Ext.getCmp('TrafficBoardLawsReceiveForm.departmentId').getValue(),
					flowAssignId : userId,
					userId:curUserInfo.userId
				};
				//alert(Ext.util.JSON.encode(param));return false;
/*				Ext.Ajax.request({
					url : __ctxPath + '/snconfig/getSnNoFileSnConfig.do',
								params : {
									defId : defId,
									snConfigId : Ext.getCmp("TrafficBoardLawsReceiveForm.snId")
											.getValue()
								},
								method : 'POST',
								waitMsg : "正在生成编号，请稍等",
								success : function(response, options) {
									var archivesNo = Ext.util.JSON.decode(response.responseText).data;*/
									var url1=__ctxPath + '/archive/saveNormalArchives.do';
									var url2=__ctxPath + '/archive/saveArchives.do';
					formPanel.getForm().submit({
						method : 'POST',
						url:archivesId?url2:url1,
						waitMsg : '正在提交表单数据...',
						params : {
							'archives.isdraft' : 0,
							'archives.isArchive' : 1,
						/*	'archives.archivesNo' : archivesNo,*/
							docs : Ext.encode(docParams)
						},
						success : function(fp, action) {
							var archivesId = action.result.archivesId;
							var fileIds = Ext.getCmp('JTWYHfileAttachments.fileIds').getValue();
							if(fileIds=="")fileIds=0;
							Ext.apply(param,{
								fileIds:fileIds,
								archivesId: archivesId
							});
							//启动流程
							formPanel.getForm().submit({
								url : __ctxPath + '/flow/saveProcessActivity.do',
								waitMsg : '正在发起流程...',
								method : 'post',
								params : param,
								success :  function(response,options) {
									var processInsId = options.result.runId;
									Ext.Ajax.request({
											url : __ctxPath + '/archive/updateRunIdArchives.do',
											params : {
												'archivesId' : archivesId,
												'runId' : processInsId
											},
											method:'post',
											success : function(response, options) {
												Ext.ux.Toast.msg('操作信息', '登记成功！');
												Ext.getCmp('centerTabPanel').remove(Ext
														.getCmp('ProcessRunStart' + defId));
												refreshTaskPanelView();
																var IncomingGrid = Ext.getCmp('IncomingGrid');
									if (IncomingGrid != null) {
										IncomingGrid.getStore().reload();
									}
											}
										});
								}
							});
						},
						failure : function(fp, action) {
							Ext.MessageBox.show({
								title : '操作信息',
								msg : '提交表单出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
						}
					});/*},
					failure : function(response, options) {
						Ext.ux.Toast.msg('操作信息', '生成编号出错，请联系管理员！');
					}
				});*/
				
			}
//		}
	},
		savedraft : function() {
		/*来文单位*/Ext.getCmp('TrafficBoardLawsReceiveFormView.issueDep').allowBlank = true;
		/*标题*/Ext.getCmp('TrafficBoardLawsReceiveFormView.subject').allowBlank = true;
		/*审批负责人*/Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').allowBlank = true;
			var reviewUserName = Ext.get("TrafficBoardLawsReceiveFormView.leaderName").dom.value;
			Ext.getCmp('TrafficBoardLawsReceiveFormView.reviewUserName')
					.setValue(reviewUserName);
		if(archivesId){
			Ext.Ajax.request({
						url : __ctxPath + '/archive/updateIsReceiveArchives.do',
						params : {
							'archivesId' : archivesId
						},
						method:'post',
						success : function(response, options) {
						}
			});
		}
		var docCount = this.store.getCount();
/*		if (docCount == 0) {
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}  */
			var defId = this.defId;
			// 获取要提交的表单
			var formPanel = Ext.getCmp('TrafficBoardLawsReceiveForm');
			if (formPanel.getForm().isValid()) {
				// 发文的文档附件
				var docParams = [];

				for (var i = 0; i < docCount; i++) {
					docParams.push(this.store.getAt(i).data);
				}
//				var option = formPanel.getCmpByName('directionOption').getGroupValue();
				var userId = formPanel.getCmpByName('userId').getValue();
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var param = {
					defId : defId,
					startFlow : true,
					sendMail : sendMail,
					sendMsg : sendMsg,
					nextuserId : Ext.getCmp('TrafficBoardLawsReceiveFormView.userId').getValue(),
					depIds:Ext.getCmp('TrafficBoardLawsReceiveForm.departmentId').getValue(),
					flowAssignId : userId,
					userId:curUserInfo.userId
				};
				//alert(Ext.util.JSON.encode(param));return false;
/*				Ext.Ajax.request({
					url : __ctxPath + '/snconfig/getSnNoFileSnConfig.do',
								params : {
									defId : defId,
									snConfigId : Ext.getCmp("TrafficBoardLawsReceiveForm.snId")
											.getValue()
								},
								method : 'POST',
								waitMsg : "正在生成编号，请稍等",
								success : function(response, options) {
									var archivesNo = Ext.util.JSON.decode(response.responseText).data;*/
									var url1=__ctxPath + '/archive/saveNormalArchives.do';
									var url2=__ctxPath + '/archive/saveArchives.do';
					formPanel.getForm().submit({
						method : 'POST',
						url:archivesId?url2:url1,
						waitMsg : '正在提交表单数据...',
						params : {
							'archives.isArchive' : 1,
							'archives.isdraft':1,
							//'archives.archivesNo' : archivesNo,
							docs : Ext.encode(docParams)
						},
						success : function(fp, action) {
							var archivesId = action.result.archivesId;
							var fileIds = Ext.getCmp('JTWYHfileAttachments.fileIds').getValue();
							if(fileIds=="")fileIds=0;
							Ext.apply(param,{
								fileIds:fileIds,
								archivesId: archivesId
							});
							Ext.ux.Toast.msg('操作信息', '登记成功！');
								var IncomingGrid = Ext.getCmp('IncomingGrid');
									if (IncomingGrid != null) {
										IncomingGrid.getStore().reload();
									}
										Ext.getCmp('centerTabPanel').remove(Ext
												.getCmp('ProcessRunStart'
														+ defId));
										refreshTaskPanelView();
/*							//启动流程
							formPanel.getForm().submit({
								url : __ctxPath + '/flow/saveProcessActivity.do',
								waitMsg : '正在发起流程...',
								method : 'post',
								params : param,
								success :  function(response,options) {
									var processInsId = options.result.runId;
									Ext.Ajax.request({
											url : __ctxPath + '/archive/updateRunIdArchives.do',
											params : {
												'archivesId' : archivesId,
												'runId' : processInsId
											},
											method:'post',
											success : function(response, options) {
												Ext.ux.Toast.msg('操作信息', '登记成功！');
												Ext.getCmp('centerTabPanel').remove(Ext
														.getCmp('ProcessRunStart' + defId));
												refreshTaskPanelView();
											}
										});
								}
							});*/
						},
						failure : function(fp, action) {
							Ext.MessageBox.show({
								title : '操作信息',
								msg : '提交表单出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
						}
					});/*},
					failure : function(response, options) {
						Ext.ux.Toast.msg('操作信息', '生成编号出错，请联系管理员！');
					}
				});*/
				
			}
//		}
	}
})