TrafficBoardDistributeView = Ext.extend(Ext.Panel, {
	setTaskId : function(tId) {
		this.taskId = tId;
	},
	getTaskId : function() {
		return this.taskId;
	},
	formPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.init();
		TrafficBoardDistributeView.superclass.constructor.call(this, {
					id : 'TrafficBoardDistributeViewWin',
					defaults : {
						border : false,
						autoScroll : true
					},
					width : 700,
					height : 570,
					autoHeight : true,
					buttons : [
								#set ($count=0)
								#foreach ($v in $nextTrans)
									#if($count>0)
								,
									#end
									new Ext.Button({
									   iconCls:'btn-transition',
									   text:'确认',
									   handler:this.onSave.createCallback(this.formPanel,this,'${v.name}','${v.source}')
									}),
									new Ext.Button({
									   iconCls:'btn-changeTask',
									   text:'退回',
									   handler:this.backsetp.createCallback(this.formPanel,this,'${v.source}')
									})
									#set ($count=$count+1)
								#end
								],
					buttonAlign : 'center',
					items : [this.detailPanel, this.formPanel]
				});
	},
	backsetp:function(formPanel,panel,activityName){
//		Ext.getCmp('TrafficOfficeReceiveFormView.leaderName').allowBlank=true;
		if (!formPanel.getForm().isValid()){return false;}
		var docParams=Ext.getCmp("DBNQFFSentArchiveDepCheckForm.reFileId");
		 Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : panel.taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				var prevFlowAssignId =  processForm[0].creatorId;
				var params={
					taskId : panel.taskId,
					signalName : prevSignalName,
					activityName : activityName,
					comments : formPanel.getCmpByName('leaderOpinion').getValue(),
					destName : prevDestName,
					status : '退回',
					//看是否指定了执行人员
					flowAssignId : prevFlowAssignId
				};
				formPanel.getForm().submit({
					url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
					method : 'post',
					timeout:120000,
					waitMsg : '正在提交数据...',
					params : params,
					success : function(fp, action) {
						// --无后续的错误友好提示开始
						var jsonResult = action.result;
						if (jsonResult) {
							if (jsonResult && jsonResult.success == "true") {
								Ext.ux.Toast.msg("操作信息", "操作成功！");
							} else {
								var resultMsg = "信息保存出错，请联系管理员！";
								var resuIcon = Ext.MessageBox.ERROR;
								if (jsonResult.message && jsonResult.message != null) {
									resultMsg = jsonResult.message;
									if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
										resuIcon= Ext.MessageBox.WARNING;
									}
								}
								Ext.MessageBox.show({
									title : '操作信息',
									msg : resultMsg,
									buttons : Ext.MessageBox.OK,
									icon : resuIcon
								});
							}
						}
						// --无后续的错误友好提示结束
						AppUtil.removeTab('ProcessForm' + panel.taskId);
						refreshTaskPanelView();
					},
					failure : function(fp, action) {
						Ext.MessageBox.show({
							title : '操作信息',
							msg : '当前系统繁忙，请稍后再处理！',
							buttons : Ext.MessageBox.OK,
							icon : Ext.MessageBox.WARNING
						});
					}
				});
			},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
	},
	/**
	 * 保存公文的方法,传入公文状态作为参数
	 */
	onSave : function(formPanel, panel, signalName, activityName) {
		Ext.Msg.confirm('信息确认', '请确认是否已办结', function(btn) {
			if (btn == 'yes') {
				var result='完成';
				var comments=formPanel.getCmpByName('leaderOpinion').getValue();
				Ext.Ajax.request({
				url :__ctxPath + '/system/saveDocFromArchivesDocFiles.do?archivesId='+ '${archivesId}',
				method : 'POST',
				success : function(response, options) {
				if (formPanel.getForm().isValid()) {
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					var params = {
						taskId : taskId,
						signalName : signalName,
						activityName : activityName,
						sendMail : sendMail,
						sendMsg : sendMsg,
						sendInfo : sendInfo,
						status:result,
						comments:comments
					};
					formPanel.getForm().submit({
						url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
						method : 'post',
						timeout:120000,
						waitMsg : '正在提交数据...',
						params : params,
						success : function(fp, action) {
							// --无后续的错误友好提示开始
							var jsonResult = action.result;
							if (jsonResult) {
								if (jsonResult && jsonResult.success == "true") {
									Ext.ux.Toast.msg("操作信息", "操作成功！");
								} else {
									var resultMsg = "信息保存出错，请联系管理员！";
									var resuIcon = Ext.MessageBox.ERROR;
									if (jsonResult.message && jsonResult.message != null) {
										resultMsg = jsonResult.message;
										if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
											resuIcon= Ext.MessageBox.WARNING;
										}
									}
									Ext.MessageBox.show({
										title : '操作信息',
										msg : resultMsg,
										buttons : Ext.MessageBox.OK,
										icon : resuIcon
									});
								}
							}
							// --无后续的错误友好提示结束
							AppUtil.removeTab('ProcessForm' + panel.taskId);
							refreshTaskPanelView();
						},
						failure : function(fp, action) {
							Ext.MessageBox.show({
								title : '操作信息',
								msg : '当前系统繁忙，请稍后再处理！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.WARNING
							});
						}
					});
				}
			}
		});}
		});
	},

	/**
	 * init the components
	 */
	init : function() {
		// 显示公文详细信息
		this.detailPanel = new Ext.Panel({
					autoHeight : true,
					columnWidth : 1,
					autoScroll : true,
					id:'JTWYHFGCTrafficBoardDistributeView',
					autoLoad : {
						url : __ctxPath+'/pages/flowPath/receiveFlow.jsp?archiveId=${archivesId}&fileIds=${fileIds}&defId=${defId}&detailId=JTWYHFGCTrafficBoardDistributeView',
						nocache : true
					}
				});
		// 初始化表单
		this.formPanel = new Ext.FormPanel({
			columnWidth : 1,
			layout : 'form',
			id : 'sectionInnertakeFormView',
			autoHeight : true,
			style : 'padding:6px 6px 6px 1%',
			items : [new ArchivesUtil({
						panelId : 'TrafficBoardDistributeViewWin',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),{
					   layout:'column',
					   style:'padding:6px 0px 0px 0px',
					   border:false,
					   items:[{
					   		layout:'form',
					   		border:false,
					   		items:[{	
				   					fieldLabel : '备注',
				   					id:'sectionInnertakeFormView.leaderOpinion',
									name : 'leaderOpinion',
									autoScroll:true,
									maxLength:500,
									height:40,
									xtype:'textarea',
									width:500
									}]
					     	 }
//					     	 ,{
//						   		layout:'form',
//						   		style:'padding-top:10px;padding-left:5px;',
//						   		border:false,
//						   		items:[{
//										xtype : 'button',
//										text : '常用批示语',
//										iconCls : 'menu-new-document',
//										handler : function() {
//											OdCommentsSelector.getView(
//												function(id, name) {
//													Ext.getCmp('sectionInnertakeFormView.leaderOpinion')
//													.setValue(name);
//													}, true).show();
//											}
//										}]
//					  		}
					  		]
						},{
			   id : 'DBNQFFSentArchiveDepCheckForm.reFileId',
			   xtype : 'hidden'
					}]
		});
	}// end of init
})