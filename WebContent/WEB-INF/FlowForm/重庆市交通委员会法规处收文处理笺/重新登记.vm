TrafficinfoCenterArchivesReStart = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		TrafficinfoCenterArchivesReStart.superclass.constructor.call(this, {
					id : 'FGCReceiveArchivesReStart',
					title : '重庆市交通委员会法规处收文处理笺 -重新登记',
					layout : 'form',
					modal : true,
					width : 800,
					iconCls : 'menu-archive-draft',
					maximizable : true,
					items : [this.formPanel],
					buttonAlign : 'center',
					buttons : [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end]
				});
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
/*		if (panel.store.getCount() == 0) {
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}*/
		var fileIds = Ext.getCmp('FGCinfoCenterDbArchivesReFiles.fileIds').getValue();
		if (formPanel.getForm().isValid()) {
			var docParams=Ext.getCmp("FGCinfoCenterDBArchivesReStart.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}
			formPanel.getForm().submit({
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					archivesRecfileIds : Ext.getCmp("FGCinfoCenterDBArchivesReStart.reFileId").getValue()
				},
				success : function(fp, action) {
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					//var flowAssignId = Ext.getCmp("FGCinfoCenterArchivesReceiveForm.userId").getValue();
					//var option = formPanel.getCmpByName('directionOption').getGroupValue();
					var params={
						taskId : panel.taskId,
						signalName : signalName,
						activityName : activityName,
						flowAssignId : Ext.getCmp('TrafficBoardLawsReceiveFormView.userId').getValue(),
						sendMail : sendMail,
						sendMsg : sendMsg,
						sendInfo : sendInfo,
						fileIds : fileIds?fileIds:'_'
					};
					formPanel.getForm().submit({
						url : __ctxPath + '/flow/nextProcessActivity.do',
						method : 'post',
						waitMsg : '正在提交数据...',
						params : params,
						success : function(response, options) {
							Ext.ux.Toast.msg('操作信息', '成功保存！');
							Ext.getCmp('centerTabPanel').remove(Ext.getCmp('ProcessForm' + panel.taskId));
							refreshTaskPanelView();
						},
						failure : function(fp, action) {
							Ext.MessageBox.show({
										title : '操作信息',
										msg : '信息保存出错，请联系管理员！',
										buttons : Ext.MessageBox.OK,
										icon : Ext.MessageBox.ERROR
									});
						}
					});
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
				}
			});
		}

	},
	initUIComponents : function() {
		this.archivesId='${archivesId}'; 
		// 初始化附件文档
	    this.docGridPanel = new ArchivesUtil({
			panelId : 'FGCReceiveArchivesReStart',
			archivesId : this.archivesId
		}).getGridPanelWithFullTools();
		this.formPanel = new Ext.FormPanel({
			url : __ctxPath + '/archive/saveArchives.do',
			frame : false,
			border : false,
			layout : 'form',
			labelWidth : 70,
			width : 800,
			padding : '5px',
			reader : new Ext.data.JsonReader({
						root : 'data'
					}, [{
					name : 'archives.archivesId',
					mapping : 'archivesId'
				}, {
					name : 'archives.issueDate',
					mapping : 'issueDate'
				}, {
					name : 'archives.depSignNo',
					mapping : 'depSignNo'
				}, {
					name : 'archives.writtenDate',
					mapping : 'writtenDate'
				}, {
					name : 'archives.issueDep',
					mapping : 'issueDep'
				}, {
				    name:'archives.status',
				    mapping:'status'
				}, {
					name : 'archives.subject',
					mapping : 'subject'
				}, {
					name : 'archives.fileCounts',
					mapping : 'fileCounts'
				}, {
					name : 'archives.privacyLevel',
					mapping : 'privacyLevel'
				}, {
					name : 'archives.urgentLevel',
					mapping : 'urgentLevel'
				}, {
					name : 'archives.issuer',
					mapping : 'issuer'
				}, {
					name : 'archives.issuerId',
					mapping : 'issuerId'
				}, {
					name:'archives.orgDepName',
					mapping:'orgDepName'
				}, {
					name:'archives.archType',
					mapping:'archType'
				}, {
					name:'archives.orgDepId',
					mapping:'orgDepId'
				}, {
					name:'archives.archivesFiles',
					mapping:'archivesFiles'
				}, {
					name:'archives.limitedDate',
					mapping:'limitedDate'
				}]),
			items : [{
						border : false,
						layout : 'column',
						defaults : {
							border : false,
							columnWidth : .33,
							layout : 'form',
							defaults : {
								width : 150,
								xtype : 'textfield',
								allowBlank : true
							}
						},
						items:[{
								items:[
							{
								xtype : 'hidden',
								id : 'FGCreceiveArchivesReceiveForm.snId',
								name : 'archives.snConfigId'
							}, {
								xtype : 'hidden',
								id : 'FGCreceiveArchivesReceiveForm.snName'
								/*fieldLabel : '编号名称',
								xtype : "combo",
								valueField : 'snId',
								displayField : 'snName',
								editable : false,
								allowBlank : false,
								triggerAction : 'all',
								forceSelection : true,
								width : 150,
								store : new Ext.data.SimpleStore({
									url :__ctxPath + '/snconfig/getReceiveSignsFlowSnConfig.do?archType=1',
									autoLoad : true,
									fields : ['snId', 'snName']
								}),
								listeners : {
									'select' : function(cbo, record, index) {
										Ext.getCmp('TrafficBoardLawsReceiveForm.snId')
												.setValue(cbo.getValue());
										//alert(Ext.get('TrafficBoardLawsReceiveForm.snName').getValue());
										if (Ext.get('TrafficBoardLawsReceiveForm.snName').dom.value != '督办件') {
											Ext.getCmp('archivesArchType').setValue('1');
											Ext.getCmp('ReTrafficBoardLawsReceiveFormlimitedDate').hide();
											Ext.getCmp('ReTrafficBoardLawsReceiveFormlimitedDate').allowBlank = true;
										} else {
											Ext.getCmp('archivesArchType').setValue('2');
											Ext.getCmp('ReTrafficBoardLawsReceiveFormlimitedDate').show();
											Ext.getCmp('ReTrafficBoardLawsReceiveFormlimitedDate').allowBlank = false;
										}
									}
								}*/
							},{
								xtype:'hidden',
								id:'FGCreceiveArchivesReceiveForm.snId'
							},{
								xtype : 'combo',
								fieldLabel : '密級',
								name : 'archives.privacyLevel',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								store : ['一般', '秘密', '机密','绝密'],
								listeners: {
									'select':function(combo){
										if(combo.getValue()!='一般'){
											/*Ext.get('officeReceiveRecordFormView.isPublic').dom.disabled=true;
											Ext.getCmp('officeReceiveRecordFormView.isPublic').allowBlank=true;
											Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').allowBlank=true,
											Ext.get('officeReceiveRecordFormView.unPublicReasons').dom.disabled=true;*/
											
											Ext.getCmp('FGCinfoCenterArchivesReceivePanelCounts').show();
											Ext.getCmp('FGCinfoCenterArchivesReceiveForm.fileCounts').allowBlank = false;
										}else{
											/*Ext.get('officeReceiveRecordFormView.isPublic').dom.disabled=false;
											Ext.getCmp('officeReceiveRecordFormView.isPublic').allowBlank=false;
											Ext.getCmp('officeReceiveRecordFormView.unPublicReasons').allowBlank=false,
											Ext.get('officeReceiveRecordFormView.unPublicReasons').dom.disabled=false;*/
											
											Ext.getCmp('FGCinfoCenterArchivesReceivePanelCounts').hide();
											Ext.getCmp('FGCinfoCenterArchivesReceiveForm.fileCounts').allowBlank = true;
										}
									}
								}
							},{
								xtype : 'combo',
								width : 150,
								fieldLabel : '文种',
								id: 'FGCreceiveArchivesReceiveForm.archivesType',
								hiddenName : "archives.archivesType.typeId",
								valueField : 'typeId',
								displayField : 'typeName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/archive/comboArchivesType.do',
											autoLoad : true,
											fields : ['typeId', 'typeName']
										})
							}, {
								xtype : 'container',
								id : 'FGCinfoCenterArchivesReceivePanelCounts',
								style : 'padding:0px 0px 5px 0px;',
								layout : 'column',
								width : 260,
								hidden : true,
								items : [
									{
										xtype : 'label',
										text : '份号：',
										width : 75
									},{
										xtype : 'numberfield',
										editable : false,
										id : 'FGCinfoCenterArchivesReceiveForm.fileCounts',
										mode : 'local',
										name : 'archives.fileCounts',
										width : 155,
										value : 1
								}]
							}]
						},{
							items:[{
								fieldLabel : '收文日期',
								xtype : 'datefield',
								format : 'Y-m-d',
								editable : false,
								allowBlank : true,
								name : 'archives.issueDate',
								value:new Date()
							},{
								xtype : 'combo',
								fieldLabel : '缓急',
								name : 'archives.urgentLevel',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								store : ['特急', '急件', '加急','平急']
							},{
								xtype : 'container',
								id:'ReTrafficBoardLawsReceiveFormlimitedDate',
								style : 'padding:0px 0px 5px 0px;',
								layout : 'column',
								width : 260,
								hidden : true,
								items : [{
										xtype : 'label',
										text : '限办日期',
										width : 75
									}, {
									name : 'archives.limitedDate',
									id : 'ReTBLRFDateValue',
									xtype : 'datefield',
									format : 'Y-m-d',
									mode : 'local',
									editable : false,
									value: new Date().add(Date.MONTH,1),
									width : 150
								}]
										}]
						},{
							items:[{
								xtype : 'textfield',
								fieldLabel : '来文号',
								name : 'archives.depSignNo',
								allowBlank : true
							},{ 
							    fieldLabel : '成文日期',
							    name : 'archives.writtenDate',
								xtype : 'datefield',
								format : 'Y-m-d',
								editable : false,
								allowBlank : true	
						}]
					}]
					}, {
						xtype : 'textfield',
						fieldLabel : '来文单位',
						name : 'archives.issueDep',
						width:670,
						allowBlank : false
					},{
						xtype : 'textfield',
						fieldLabel : '标   题',
						name : 'archives.subject',
						width:670,
						allowBlank : false
					} ,{
						xtype:'hidden',
						id:'TrafficBoardLawsReceiveForm.departmentId',
						name:'archives.orgDepId'
					},{
						xtype : 'container',
						layout : 'hbox',
						style : 'padding-left:0px;margin-bottom:4px;margin-top:4px;',
						layoutConfigs : {
							align : 'middle'
						},
						defaults : {
							margins : '0 2 0 0'
						},
						height : 26,
						items:[{
							xtype : 'label',
							text : '主办部门:',
							style:'padding-top:4px;',
							width : 73
						}, {
							xtype : 'textfield',
							name : 'archives.orgDepName',
							id : 'publicApplyView.department',
							allowBlank : false,
							editable : false,
							readOnly : true,
							width : 595
						},{
							xtype : 'button',
							iconCls : 'btn-dep-sel',
							text : '选择部门',
							handler : function() {
								var url = __ctxPath +"/system/select3Department.do?depId=100130";
								DepSelector3.getView(function(id, name) {
									Ext
											.getCmp('publicApplyView.department')
											.setValue(name);
//									Ext
//											.getCmp('departmentId')
//											.setValue(id);
									Ext
											 .getCmp('TrafficBoardLawsReceiveForm.departmentId')
											 .setValue(id);
									Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore().removeAll();
									Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').clearValue();
									fId=Ext.getCmp('TrafficBoardLawsReceiveForm.departmentId').getValue();
									Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore().load({params:{depIds:fId}});
								}, false,null,url).show();
							}
						}]
					},{
						name : 'userId',
						id : 'TrafficBoardLawsReceiveFormView.userId',
						xtype : 'hidden'
					},{
			    id : 'TrafficBoardLawsReceiveFormView.viceLeaders',
			    //hidden:true,
			    hideMode :'offsets',
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					border : false
				},
				items : [{
							xtype : 'label',
							style:'padding-top:4px;',
							text : '负责人:',
							width : 73
						}, {
						xtype : "combo",
						id : "TrafficBoardLawsReceiveFormView.leaderName",
						valueField : 'userId',
						displayField : 'fullname',
						editable : false,
						allowBlank : false,
						triggerAction : 'all',
						forceSelection : true,
						width : 675,
						store : new Ext.data.SimpleStore({
								url : __ctxPath
										+ '/system/searchByTwoRoleIdAppUser.do?role1Id='+roleMap.get('officeDeputyDirectorRoleID')+'&role2Id='+roleMap.get('officeDirectorRoleID'),
								autoLoad : true,
								fields : ['userId', 'fullname']
							}),
						listeners : {
							select : function(cbo, record, index) {
								Ext.getCmp('TrafficBoardLawsReceiveFormView.userId')
												.setValue(cbo.getValue());
									},
							'beforequery':function(c){
					                        delete c.combo.lastQuery;//用来过滤store的匹配字符串值。 删除此参数以强制执行一次重新查询                        
					                        var selectNode = Ext.getCmp('TrafficBoardLawsReceiveForm.departmentId');
					                        if(selectNode!=null ){
					                            Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore().setBaseParam('depIds',selectNode.getValue());
					                        }
					                    }
								}
							}]
					}, {
						name : 'archives.status',
						xtype : 'hidden',
						value :  1
					}, {
						name : 'archives.snConfigId',
						id : 'FGCreceiveArchivesReceiveForm.snConfigId',
						xtype : 'hidden'
					}, {
						name : 'archives.issuerId',
						value : curUserInfo.userId,
						xtype : 'hidden'
					},{
						name : 'archives.archType',
						id : 'FGCarchivesArchType',
						value : 1,
						xtype : 'hidden'
					}, {
				xtype : 'fieldset',
				style:'padding-top:6px',
				border : false,
				defaults : {
					anchor : '96%,90%'
				},
				items : [this.docGridPanel]
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:2px;',
				defaults : {
					allowBlank : true,
					border : false
				},
				items : [{
							xtype : 'label',
							text : '附件：',
							width : 74
						}, {
							xtype : 'textfield',
							name : 'archives.enclosure',
							width : '84%',
							id : 'FGCinfoCenterDArchivesReFiles.enclosure'
						}]
			},{
				layout : 'column',
				border : false,
				defaults : {
					layout : 'form',
					border : false
				},
				items : [{
							columnWidth : .85,
							items : [{
										fieldLabel : '公文附件',
										xtype : 'panel',
										id : 'FGCinfoCenterDArchivesReFiles.personFilePanel',
										frame : false,
										border : true,
										bodyStyle : 'padding:4px 4px 4px 4px;',
										height : 80,
										autoScroll : true,
										html : ''
									}]
						}, {
							columnWidth : .12,
							items : [{
								border : false,
								xtype : 'button',
								text : '添加文件',
								iconCls : 'menu-attachment',
								handler : function() {
									var dialog = App.createUploadDialog({
										file_cat : 'document',
										judge_size : 'no',
										upload_autostart : true,
										callback : function(data) {
											var fileIds = Ext.getCmp('FGCinfoCenterDbArchivesReFiles.fileIds');
											var filePanel = Ext.getCmp('FGCinfoCenterDArchivesReFiles.personFilePanel');

											for (var i = 0; i < data.length; i++) {
												if (fileIds.getValue() != '') {
													fileIds.setValue(fileIds
															.getValue()
															+ ',');
												}
												fileIds.setValue(fileIds
														.getValue()
														+ data[i].fileId);

												Ext.DomHelper
														.append(
																filePanel.body,
																'<span><a href="#" onclick="FileAttachDetail.show('
																		+ data[i].fileId
																		+ ')">'
																		+ data[i].filename
																		+ '</a> <img class="img-delete" src="'
																		+ __ctxPath
																		+ '/images/system/delete.gif" onclick="removeFile(this,\'FGCinfoCenterDbArchivesReFiles.fileIds\','
																		+ data[i].fileId
																		+ ')"/>&nbsp;|&nbsp;</span>');

											}
										}
									});
									dialog.show(this);
								}
							}, {
								xtype : 'button',
								text : '清除文件',
								iconCls : 'reset',
								handler : function() {
									var fileAttaches = Ext.getCmp('FGCinfoCenterDbArchivesReFiles.fileIds');
									var filePanel = Ext.getCmp('FGCinfoCenterDArchivesReFiles.personFilePanel');

									filePanel.body.update('');
									fileAttaches.setValue('');
								}
							}, {
								xtype : 'hidden',
								id : 'FGCinfoCenterDbArchivesReFiles.fileIds',
								name : 'fileIds'
							},{
								xtype:'hidden',
								id:'FGCinfoCenterDBArchivesReStart.reFileId'
							},{
								xtype:'hidden',
								name:'archives.archivesId'
							}]
						}]
			}]
		});
		if (this.archivesId) {
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ this.archivesId,
				waitMsg : '正在载入数据...',
				method:'post',
				success : function(form, action) {
					var privacyLevel=action.result.data['archives.privacyLevel'];
					var privacyLevel=action.result.data['archives.privacyLevel'];
					var privacyLevel=action.result.data['archives.privacyLevel'];
					Ext.getCmp('FGCreceiveArchivesReceiveForm.archivesType').getStore().load({
					callback: function () {
						Ext.getCmp('FGCreceiveArchivesReceiveForm.archivesType').setValue(Ext.decode(action.response.responseText).data[0].parentArchId);
					}, 
					scope: Ext.getCmp('FGCreceiveArchivesReceiveForm.archivesType').getStore(),//表示作用范围 
					add: false //为false表示数据不累加 
					}); 
					
						
						Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore().load({ 
						callback: function () {
						var nextUserId='${nextuserId}';
						//等待数据加载完成才进行赋值，不然由于异步会出现先赋值后加载完成。 
						Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').setValue(nextUserId);
						Ext.getCmp('TrafficBoardLawsReceiveFormView.userId').setValue(nextUserId);
						}, 
						scope: Ext.getCmp('TrafficBoardLawsReceiveFormView.leaderName').getStore(),//表示作用范围 
						add: false //为false表示数据不累加 
						});
					Ext.getCmp('FGCinfoCenterDArchivesReFiles.enclosure').setValue(Ext.decode(action.response.responseText).data[0].enclosure);
					//Ext.getCmp('TrafficinfoCenterArchivesReStart.flowAssignId').setValue(action.result.data['archives.reviewUser']);
					if(privacyLevel!='一般'){
						 Ext.getCmp('FGCinfoCenterArchivesReceivePanelCounts').show();
						 Ext.getCmp('FGCinfoCenterArchivesReceiveForm.fileCounts').allowBlank = false;
					}
					if(privacyLevel=='一般' || privacyLevel == null || privacyLevel == ''){
						Ext.getCmp('FGCinfoCenterArchivesReceivePanelCounts').hide();
						Ext.getCmp('FGCinfoCenterArchivesReceiveForm.fileCounts').allowBlank = true;
					}
					var filePanel = Ext.getCmp('FGCinfoCenterDArchivesReFiles.personFilePanel');
					var fileIds = Ext.getCmp("FGCinfoCenterDbArchivesReFiles.fileIds");
					/*Ext.Ajax.request({
									url : __ctxPath + '/archive/getAttachFilesArchives.do',
									params : {
										'fileIds' : '${fileIds}'
									},
									method:'post',
									success : function(response, options) {*/
										var af=Ext.decode(action.response.responseText).data[0].archivesFiles;
										if(af!=null){
										for (var i = 0; i < af.length; i++) {
											if (fileIds.getValue() != '') {
												fileIds.setValue(fileIds.getValue() + ',');
											}
											fileIds.setValue(fileIds.getValue() + af[i].fileId);
											Ext.DomHelper
													.append(
															filePanel.body,
															'<span><a href="#" onclick="FileAttachDetail.show('
																	+ af[i].fileId
																	+ ')">'
																	+ af[i].fileName
																	+ '</a><img class="img-delete" src="'
																	+ __ctxPath
																	+ '/images/system/delete.gif" onclick="removeFile(this,\'FGCinfoCenterDbArchivesReFiles.fileIds\','
																	+ af[i].fileId
																	+ ')"/>&nbsp;|&nbsp;</span>');
										}
									}
									/*}
						});*/
				},
				failure : function(form, action) {
				}
			});
		}
	}
})