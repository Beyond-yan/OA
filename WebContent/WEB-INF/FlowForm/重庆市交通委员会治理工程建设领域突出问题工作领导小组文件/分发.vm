TTWTGZLDXZSentArchiveDepCheck = Ext.extend(Ext.Panel, {
	formPanel : null,
	displayPanel:null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		TTWTGZLDXZSentArchiveDepCheck.superclass.constructor.call(this, {
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					id : 'TTWTGZLDXZSentArchiveDepCheckWin',
					modal : true,
					height : 700,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								}),
								new Ext.Button({
								   iconCls:'btn-changeTask',
								   text:'退回',
								   handler:this.backsetp.createCallback(this.formPanel,this,'${v.source}')
								})
								#set ($count=$count+1)
						#end]
				});
	},
	initUIComponents : function() {
		this.displayPanel = new Ext.Panel({
			autoScroll : true,
			autoHeight : true,
			id :'TTWTGZLDXZSentArchiveDepCheck.displayPanel',
			border : false,
			autoLoad : {
				url : __ctxPath
		        + '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=$!{fileIds}&defId=${defId}&sentPanelId=TTWTGZLDXZSentArchiveDepCheck',
				nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			url : __ctxPath + '/archive/updateFileSharedArchives.do',
			defaults : {
				anchor : '98%,98%'
			},
			items : [new ArchivesUtil({
						panelId : 'TTWTGZLDXZSentArchiveDepCheckWin',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),{	
					    xtype:'hidden',
						name:'archives.archivesId',
						value:'${archivesId}'
					},{
						xtype : 'radiogroup',
						id : 'TTWTGZLDXZSentArchiveDepCheck.radiogroup',
						allowBlank: false,
						fieldLabel : '是否共享',
						items : [{
									boxLabel : '共享',
									name : 'archives.isShared',
									inputValue : 1
								}, {
									boxLabel : '不共享',
									name : 'archives.isShared',
									inputValue : 0
								}]
					},{
						xtype : 'container',
						layout : 'column',
						id : 'TTWTGZLDXZSentArchiveDepCheck.sentGroup',
						style : 'padding:0px 0px 8px 0px;margin-left:0px;',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'hidden',
									width : '60%',
									id : 'TTWTGZLDXZSentArchiveDepCheck.checkIds'
								},{
									xtype : 'label',
									style : 'padding-top:4px;',
									hideParent :true,
									text : '分发群组:',
									width : 105
								}, {
									xtype : 'textarea',
									width : '60%',
									hideParent :true,
									allowBlank: true,
									id : 'TTWTGZLDXZSentArchiveDepCheck.checkNames'
								}, {
									style : 'padding-left:5px;',
									xtype : 'button',
									iconCls : 'menu-department',
									hideParent :true,
									text : '选择群组',
									handler : function() {
										var url1=__ctxPath + '/system/sentListDepartment.do';
										var url2=__ctxPath + '/system/selectLE3Department.do';
										var depIdsTemp = Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.checkIds').getValue();
										var depNamesTemp = Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.checkNames').getValue();
										var array1 = [];
										var array2 = [];
										var map= new Map();
										if (depIdsTemp != null&& depIdsTemp != '') {
											array1 = depIdsTemp.split(',');
											array2 = depNamesTemp.split(',');
											for (var i = 0; i < array1.length; i++) {
												map.put(array1[i],array2[i]);
											}
										}
										DepSelector.getView(function(formPanel,id, name) {
											Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.checkNames').setValue(name);
											Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.checkIds').setValue(id);
										},false,map,url1,url2).show();
									}
								}]
							},{	 
								id : 'TTWTGZLDXZSentArchiveDepCheck.reFileId',
								xtype : 'hidden'
							}]
				});
	},
	backsetp:function(formPanel,panel,activityName){
//		if (panel.store.getCount() == 0) {
//			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
//			return false;
//		}
		Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.radiogroup').allowBlank=true;
		if (!formPanel.getForm().isValid()){return false;}
		 Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : panel.taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				var prevFlowAssignId =  processForm[0].creatorId;
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
				formPanel.getForm().submit({
						url:__ctxPath+ "/flow/nextProcessActivity.do",
						method:'post',
						waitMsg:'正在提交处理，请稍等',
						scope:this,
						params:{
								taskId : panel.taskId,
								signalName : prevSignalName,
								activityName : activityName,
								comments : '退回',
								destName : prevDestName,
								status : '已办理',
								sendMail : sendMail,
								sendMsg : sendMsg,
								sendInfo : sendInfo,
								flowAssignId : prevFlowAssignId
						},
						success : function(fp, action) { 
						 	Ext.ux.Toast.msg('操作信息','退回上一步成功！');
						 	AppUtil.removeTab('ProcessForm' + panel.taskId);
						 	refreshTaskPanelView();
						},
						failure : function(fp, action) {
							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
						}
					}
				
				);},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
//		if (panel.store.getCount() == 0) {
//			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
//			return false;
//		}
		if (formPanel.getForm().isValid()) {
			var docParams=Ext.getCmp("TTWTGZLDXZSentArchiveDepCheck.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}
			formPanel.getForm().submit({
				method : 'POST',
				waitMsg : '正在提交数据...',
				success:function(fp, action){
					formPanel.getForm().submit({
						url : __ctxPath + "/flow/nextProcessActivity.do",
						method : 'post',
						waitMsg : '正在提交数据...',
						params :  {
							taskId : panel.taskId,
							sendMail : msgPanel.getCmpByName('sendMail').getValue(),
							sendMsg : msgPanel.getCmpByName('sendMsg').getValue(),
							sendInfo : msgPanel.getCmpByName('sendInfo').getValue(),
							signalName : signalName,
							activityName : activityName
						},
						success : function(fp, action) {
							var checkIds=Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.checkIds').getValue();
							if(checkIds!=null&&checkIds!=""){
								Ext.Ajax.request({
										url : __ctxPath + "/archive/saveArchivesDep.do",
										params : {
												  depIds : Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.checkIds').getValue(),
												  archivesId:'${archivesId}',
												  archDepId:null
												 },
										method : 'POST',
										success : function(fp, action) {
//												 Ext.Ajax.request({
//													url : __ctxPath + "/archive/updateArchDocsArchives.do",
//													params : {
//															  arcRecfileIds : Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.reFileId').getValue(),
//															  'archives.archivesId':'${archivesId}'
//															  },
//													method : 'POST',
//													success : function(fp, action) {
															 Ext.ux.Toast.msg('操作信息', '分发成功！');
															 AppUtil.removeTab('ProcessForm' + panel.taskId);
															 refreshTaskPanelView();
//							                        },
//													failure : function(fp, action) {
//														Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
//													}
//												});
										},
										failure : function(fp, action) {
									             Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
								}});
							}else{
								Ext.ux.Toast.msg('操作信息', '分发成功！');
							    AppUtil.removeTab('ProcessForm' + panel.taskId);
							    refreshTaskPanelView();
							}
						},
						failure : function(fp, action) {
							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
						}
					});
				 }
			});
		}
	}// end of save
})