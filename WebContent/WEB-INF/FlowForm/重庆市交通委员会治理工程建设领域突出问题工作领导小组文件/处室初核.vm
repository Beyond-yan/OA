TTWTGZLDXZSentArchiveCheck = Ext.extend(Ext.Panel, {
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		TTWTGZLDXZSentArchiveCheck.superclass.constructor.call(this, {
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					id : 'TTWTGZLDXZSentArchiveCheckWin',
					modal : true,
					height : 650,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : this.buttons
				});
	},
	initUIComponents : function() {
		this.displayPanel = new Ext.Panel({
			id :'TTWTGZLDXZSentArchiveDepCheck.displayPanel',
			autoScroll : true,
			autoHeight : true,
			border : false,
			autoLoad : {
				url : __ctxPath
		        + '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=$!{fileIds}&defId=${defId}&sentPanelId=TTWTGZLDXZSentArchiveDepCheck',
				nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			url : __ctxPath + '/archive/saveDepLeaderRead.do',
			id : 'TTWTGZLDXZSentArchiveCheckForm',
			defaults : {
				anchor : '98%,98%'
			},
			items : [new ArchivesUtil({
						panelId : 'TTWTGZLDXZSentArchiveCheckWin',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),{
						name : 'archives.archivesId',
						xtype : 'hidden',
						value : '${archivesId}'
					}, {
						xtype : 'radiogroup',
						allowBlank : false,
						width : 100,
						defaults:{
							setBlank : function(){
								Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signerNames').setValue('');
								Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signdepIds').setValue('');
							},
							name : 'depOption'
						},
						items : [{
							boxLabel : '会签',
							inputValue : 1,
							checked : true,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										this.setBlank();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.sgLabel').show();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.reCLabel').hide();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signDep').show();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signerNames').allowBlank = false;
									}
								}
							}
						}, {
							boxLabel : '处室复核',
							inputValue : 2,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										this.setBlank();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.sgLabel').hide();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.reCLabel').show();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signDep').show();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signerNames').allowBlank = false;
									}
								}
							}
						}, {
							boxLabel : '办公室审核',
							inputValue : 3,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										this.setBlank();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signDep').hide();
										Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signerNames').allowBlank = true;
									}
								}
							}
						}],
						fieldLabel : '审批步骤'
					}, {
						xtype : 'container',
						id : 'TTWTGZLDXZSentArchiveCheck.signDep',
						layout : 'column',
						height : 30,
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									id: 'TTWTGZLDXZSentArchiveCheck.sgLabel',
									text : '会签人员：',
									width : 105
								}, {
									xtype : 'label',
									text : '复  核  人：',
									id: 'TTWTGZLDXZSentArchiveCheck.reCLabel',
									hidden: true,
									width : 105
								}, {
									id : 'TTWTGZLDXZSentArchiveCheck.signerNames',
									xtype : 'textfield',
									width : '70%',
									allowBlank : false,
									readOnly : true
								}, {
									id : 'TTWTGZLDXZSentArchiveCheck.signdepIds',
									xtype : 'hidden'
								}, {
									xtype : 'button',
									iconCls : 'menu-department',
									text : '选择人员',
									handler : function() {
										var option = formPanel.getCmpByName('depOption').getGroupValue();
										var roles ='';
										var url = __ctxPath + '/system/depLeadersTreeDepartment.do';
										switch(option){
										case '1':
											url  =   __ctxPath + '/system/depLeadersTreeDepartment.do?roles='+roleMap.get('officeDirectorRoleID')+','+roleMap.get('officeDeputyDirectorRoleID');
											break;
										case '2':
											url  =   __ctxPath + '/system/depLeadersTreeDepartment.do?roles='+roleMap.get('officeDirectorRoleID')+','+roleMap.get('officeDeputyDirectorRoleID')+'&depIds='+curUserInfo.depId;
											break;
										default:
											roles = '';
									    }
										DepLeaders.getView(
												function(userIds, userNames) {
													Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signdepIds').setValue(userIds);
													Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signerNames')
															.setValue(userNames);
												}, 2==option, null,url).show();
									}
								}]
					}, {
						xtype : 'container',
						layout : 'column',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '审批意见：',
									width : 105
								}, {
									name : 'leaderRead.leaderOpinion',
									xtype : 'textarea',
									maxLength :500,
									width : 466,
									height:40
								},{
									xtype : 'button',
									text : '常用批示语',
									style:'padding-top:10px;',
									iconCls : 'menu-new-document',
									handler : function() {
										OdCommentsSelector.getView(
											function(id, name) {
												Ext.getCmp('TTWTGZLDXZSentArchiveCheckForm')
													.getCmpByName('leaderRead.leaderOpinion')
													.setValue(name);
											}, true).show();
										}
								}]
					
					},{
						id : 'TTWTGZLDXZSentArchiveDepCheck.reFileId',
						xtype : 'hidden'
					}]
		});
		if(taskId){
			Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				if(prevDestName.toString().indexOf("会签")!=-1){
					Ext.getCmp('TTWTGZLDXZSentArchiveCheck.return').hide();
				}
			},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
		}
		this.buttons = [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								}),
								new Ext.Button({
								   iconCls:'btn-changeTask',
								   id:'TTWTGZLDXZSentArchiveCheck.return',
								   text:'退回',
								   handler:this.backsetp.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end];
	},
	backsetp:function(formPanel, panel, signalName, activityName, destination) {
//		if (panel.store.getCount() == 0) {
//			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
//			return false;
//		}
		Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signerNames').allowBlank=true;
		if (formPanel.getForm().isValid()) {
			var sendMail = msgPanel.getCmpByName('sendMail').getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			var docParams=Ext.getCmp("TTWTGZLDXZSentArchiveDepCheck.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}
			var option =4;
			result='呈重新发起';
			var params = {
					depNext: option,//部门下一步审核人
					depExerId:curUserInfo.userId,
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo : sendInfo,
					status: '已办理',
					flowAssignId : '${sendUserId}',
					comments : '退回'
			};
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextProcessActivity.do",
				method : 'post',
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {
//					Ext.Ajax.request({
//						url : __ctxPath + "/archive/updateArchDocsArchives.do",
//						params : {
//								  arcRecfileIds : Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.reFileId').getValue(),
//								  'archives.archivesId':'${archivesId}'
//								  },
//						method : 'POST',
//						success : function(fp, action) {
								 Ext.ux.Toast.msg('操作信息', '退回上一步成功！');
								 AppUtil.removeTab('ProcessForm' + panel.taskId);
								 refreshTaskPanelView();
//                        },
//						failure : function(fp, action) {
//							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
//						}
//					});
				},
				failure : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
				}
			});
		}
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
//		if (panel.store.getCount() == 0) {
//			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
//			return false;
//		}
		if (formPanel.getForm().isValid()) {
			var option = formPanel.getCmpByName('depOption').getGroupValue();
			var sendMail = msgPanel.getCmpByName('sendMail').getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			var docParams=Ext.getCmp("TTWTGZLDXZSentArchiveDepCheck.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}
			var params = {
					depNext: option,//部门下一步审核人
					depExerId:curUserInfo.userId,
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo : sendInfo,
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
				};
			
			if (1 == option ) {	//会签
				var signUserIds = Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signdepIds').getValue();
				Ext.apply(params,{
					signUserIds : signUserIds,
					//status:'呈会签',
					HQNext:1,
					destName : '会签'
				});
			} else if (3== option ) { //处室
//				Ext.apply(params,{
//					status:'呈办公室审核'
//				});
			} else if(2 == option){
				result = '呈处室复核';
				Ext.apply(params,{
					//status : result,
					flowAssignId : Ext.getCmp('TTWTGZLDXZSentArchiveCheck.signdepIds').getValue()
				});
			}
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextProcessActivity.do",
				method : 'post',
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {
//					Ext.Ajax.request({
//						url : __ctxPath + "/archive/updateArchDocsArchives.do",
//						params : {
//								  arcRecfileIds : Ext.getCmp('TTWTGZLDXZSentArchiveDepCheck.reFileId').getValue(),
//								  'archives.archivesId':'${archivesId}'
//								  },
//						method : 'POST',
//						success : function(fp, action) {
								 Ext.ux.Toast.msg('操作信息', '成功保存！');
								 AppUtil.removeTab('ProcessForm' + panel.taskId);
								 refreshTaskPanelView();
//                        },
//						failure : function(fp, action) {
//							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
//						}
//					});
				},
				failure : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
				}
			});
		}
	}// end of save
})