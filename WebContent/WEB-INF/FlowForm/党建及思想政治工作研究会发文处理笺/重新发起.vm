DJResearchRestart = Ext.extend(Ext.Panel, {
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		DJResearchRestart.superclass.constructor.call(this, {
					layout : 'form',
					title : '党建及思想政治工作研究会发文处理笺',
					id:'DJResearchRestart',
					iconCls : 'menu-archive-draft',
					items : [this.formPanel],
					modal : true,
					height : 760,
					width : 800,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end]
				});
			
	},
	initUIComponents : function() {
		this.archivesId = '${archivesId}';
		var reviewStore = new Ext.data.SimpleStore({
									url : __ctxPath + '/system/arrLeadersAppUser.do?roles='+roleMap.get('officeDeputyDirectorRoleID')+','+roleMap.get('officeDirectorRoleID'),
									autoLoad:true,
									fields : ['flowAssignId','flowAssignName']
								});
		// 初始化附件文档
		this.docGridPanel = new ArchivesUtil({
			panelId : 'DJResearchRestart',
			archivesId : this.archivesId
		}).getGridPanelWithFullTools();
		
		var fp = this.formPanel = new Ext.FormPanel({
			url : __ctxPath + '/archive/saveArchives.do',
			frame : false,
			border : false,
			labelWidth : 80,
			width : 800,
			padding : '5px',
			reader : new Ext.data.JsonReader({
						root : 'data'
					}, [{
						name : 'archives.issueDep',
						mapping : 'issueDep'
					}, {
						name : 'archives.subject',
						mapping : 'subject'
					}, {
						name : 'archives.fileCounts',
						mapping : 'fileCounts'
					}, {
						name : 'archives.privacyLevel',
						mapping : 'privacyLevel'
					}, {
						name : 'archives.urgentLevel',
						mapping : 'urgentLevel'
					},{
						name:'archives.isReserveNo',
						mapping:'isReserveNo'
					}, {
						name : 'archives.issuer',
						mapping : 'issuer'
					}, {
						name:'archives.sources',
						mapping:'sources'
					}, {
						name:'archives.isPublic',
						id : 'DJrehiddeIsPublic',
						mapping:'isPublic'
					}, {
						name : 'archives.reviewUser',
						mapping : 'reviewUser'
					}, {
						name : 'archives.reviewUserName',
						mapping : 'reviewUserName'
					}, {
						name : 'archives.sendTo',
						mapping : 'sendTo'
					}, {
						name : 'archives.ccTo',
						mapping : 'ccTo'
					},{
						name:'archives.isStandard',
						mapping:'isStandard'
					},{
						name:'archives.unPublicReasons',
						id : 'DJrehiddeUnPublicReasons',
						mapping:'unPublicReasons'
					},{
						name:'archives.examineRecordNumber',
						mapping:'examineRecordNumber'
					}]),
			items : [{
				border : false,
				layout : 'column',
				defaults : {
					border : false,
					columnWidth : .33,
					layout : 'form',
					defaults : {
						width : 150,
						xtype : 'textfield',
						allowBlank : false
					}
				},
				items : [{
					items : [{
								fieldLabel : "拟稿部门",
								name : 'archives.orgDepName',
								value : curUserInfo.depName,
								readOnly : true
							}, {
								xtype : 'combo',
								name : 'archives.sources',
								triggerAction : 'all',
								editable : false,
								fieldLabel : '行文方向',
								store : ['上行文', '平行文', '下行文']
							}, {
								xtype : 'combo',
								fieldLabel : "发文单位",
								name : 'archives.issueDep',
								triggerAction : 'all',
								mode:'local',
								listWidth :240,
								editable : false,
								store : ArchivesUtil.IssueDepData 
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '缓急',
								triggerAction : 'all',
								editable : false,
								allowBlank:true,
								name : 'archives.urgentLevel',
								emptyText : '急缓程度',
								store : ['特急', '急件', '加急', '平急', '缓急']
							}, {
								fieldLabel : '拟稿',
								name : "archives.issuer",
								readOnly : true,
								value : curUserInfo.fullname
							}, {
								xtype:'combo',
								id:'DJResearchRestart.archivesType',
								fieldLabel : '文种',
								hiddenName : "archives.archivesType.typeId",
								valueField : 'typeId',
								displayField : 'typeName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath + '/archive/comboArchivesType.do',
											autoLoad:true,
											fields : ['typeId', 'typeName']
								})
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '密级',
								triggerAction : 'all',
								editable : false,
								allowBlank:true,
								name : 'archives.privacyLevel',
								emptyText : '密级程度',
								store : ['一般', '秘密', '机密', '绝密'],
								listeners:{
									select:function(){
										var obj = Ext.getCmp('DJResearchRestart.isPublic');
										var rp = Ext.getCmp('DJResearchRestart._unPublicReasons');
										var r = Ext.getCmp('DJResearchRestart.unPublicReasons');
										//var counts = Ext.getCmp('DJResearchCounts');//份号
										if('一般'==this.getValue()){
											obj.enable();
											if(!fp.getCmpByName('archives.isPublic').getValue()){
//												rp.enable();
												r.enable();
												r.allowBlank = false;
											}
//											counts.show();
											
											//counts.hide();
											//counts.el.parent().parent().hide();
											//counts.allowBlank = true;
										}else{
											obj.disable();
//											rp.disable();
											r.disable();
											r.allowBlank = true;
//											counts.hide();
											r.setValue(null);
											//counts.setValue(null);
											
											//counts.show();
											//counts.el.parent().parent().show();
											//counts.allowBlank = false;
										}
									}
								}
							},{
								xtype : "hidden",
								name : "archives.reviewUserName",
								id : "DJResearchRestart.reviewUserName"
							}, {
								xtype : "combo",
								hiddenName : "archives.reviewUser",
								id:'DJResearchRestart.flowAssignId',
								fieldLabel : "核稿",
								valueField : 'flowAssignId',
								displayField : 'flowAssignName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : reviewStore,
								listeners:{'select':function(){
									Ext.getCmp('DJResearchRestart.reviewUserName').setValue(Ext
										.get('DJResearchRestart.flowAssignId').dom.value);
									//alert(Ext.getCmp('JGDWDSentArchiveReStart.reviewUserName').getValue());
								}}
							}, {
								xtype : 'numberfield',
								name : 'archives.fileCounts',
								id:'DJResearchCounts',
								fieldLabel : '份数'
							}]
				}]
			},{
				xtype : 'textfield',
				name : 'archives.subject',
				allowBlank : false,
				width : 670,
				fieldLabel : '标题'
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style : 'padding:0px 0px 0px 0px;',
							text : '主送：',
							width : 85
						}, {
							xtype : 'textfield',
							name:'archives.sendTo',
							width : 560,
							id : 'DJResearchRestart.sendTo'
						}, {
							style : 'padding-left:20px;',
							xtype : 'button',
							iconCls : 'menu-department',
							text : '常用主送单位',
							handler : function() {
										UnitsSelector.getView(
											function(ids, names) {
												Ext.getCmp('DJResearchRestart.sendTo')
													.setValue(names);
												}, false,1).show();
							}
						}]
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					border : false
				},
				items : [{
							xtype : 'label',
							style : 'padding:0px 0px 0px 0px;',
							text : '抄送：',
							width : 85
						}, {
							xtype : 'textfield',
							name : 'archives.ccTo',
							width : 560,
							id : 'DJResearchRestart.ccNames'
						}, {
							xtype : 'button',
							style : 'padding-left:20px;',
							iconCls : 'menu-department',
							text : '常用抄送单位',
							handler : function() {
										UnitsSelector.getView(
											function(ids, names) {
												Ext.getCmp('DJResearchRestart.ccNames')
													.setValue(names);
												}, false,2).show();
							}
						}]
			}, {
				layout : 'column',
				border : false,
				defaults : {
					layout : 'form',
					border : true
				},
				items : [this.docGridPanel]
			},{
				xtype : 'container',
				layout : 'column',
				style : 'padding:10px 0px 8px 0px;margin-left:5px;',
				defaults : {
					allowBlank : true,
					border : false
				},
				items : [{
							xtype : 'label',
							text : '附件：',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.enclosure',
							width : '84%',
							id : 'DJResearchRestart.enclosure'
						}]
			}, {
				layout : 'column',
				border : false,
				defaults : {
					layout : 'form',
					padding : '5px',
					border : false
				},
				items : [{
							columnWidth : .85,
							items : [{
										fieldLabel : '公文附件',
										xtype : 'panel',
										id : 'DJResearchRestart.personFilePanel',
										frame : false,
										border : true,
										bodyStyle : 'padding:4px 4px 4px 4px;',
										height : 80,
										autoScroll : true,
										html : ''
									}]
						}, {
							columnWidth : .12,
							items : [{
								border : false,
								xtype : 'button',
								text : '添加文件',
								iconCls : 'menu-attachment',
								handler : function() {
									var dialog = App.createUploadDialog({
										file_cat : 'document',
										judge_size : 'no',
										upload_autostart : true,
										callback : function(data) {
											var fileIds = Ext.getCmp('DJResearchRestart.fileIds');
											var filePanel = Ext.getCmp('DJResearchRestart.personFilePanel');

											for (var i = 0; i < data.length; i++) {
												if (fileIds.getValue() != '') {
													fileIds.setValue(fileIds
															.getValue()
															+ ',');
												}
												fileIds.setValue(fileIds
														.getValue()
														+ data[i].fileId);

												Ext.DomHelper
														.append(
																filePanel.body,
																'<span><a href="#" onclick="FileAttachDetail.show('
																		+ data[i].fileId
																		+ ')">'
																		+ data[i].filename
																		+ '</a> <img class="img-delete" src="'
																		+ __ctxPath
																		+ '/images/system/delete.gif" onclick="removeFile(this,\'DJResearchRestart.fileIds\','
																		+ data[i].fileId
																		+ ')"/>&nbsp;|&nbsp;</span>');

											}
										}
									});
									dialog.show(this);
								}
							}, {
								xtype : 'button',
								text : '清除文件',
								iconCls : 'reset',
								handler : function() {
									var fileAttaches = Ext.getCmp('DJResearchRestart.fileIds');
									var filePanel = Ext.getCmp('DJResearchRestart.personFilePanel');

									filePanel.body.update('');
									fileAttaches.setValue('');
								}
							}, {
								xtype : 'hidden',
								id : 'DJResearchRestart.fileIds',
								name : 'fileIds'
							}]
						}]
			}, {
				xtype:'hidden',
				name:'archives.archivesId',
				value:'${archivesId}'
			}, {
				id : '_DJ_isReserveNoReStart_',
				border : false,
				layout : 'form',
				labelWidth:105,
			    items:{
				xtype : 'radiogroup',
				id : 'DJResearchRestart.isReserveNo',
				fieldLabel : '是否使用预约编号',
				hideParent : true,
				items : [{
							boxLabel : '是',
							id:'DJResearchRestart.reserveNo',
							name : 'archives.isReserveNo',
							inputValue : 1
						}, {
							boxLabel : '否',
							id:'DJResearchRestart.unreserveNo',
							name : 'archives.isReserveNo',
							inputValue : 0
						}]}
			}, {border:false,
			layout:'form',
			labelWidth:105,
			items:{
				xtype : 'radiogroup',
				id:'DJResearchRestart.isStandard',
				fieldLabel : '是否规范性文件',
				items : [{
							boxLabel : '是',
							id:'DJResearchRestart.unStandard',
							name : 'archives.isStandard',
							inputValue : 1,
							listeners:{
								check : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('DJResearchRestart.examineRecordModule').show();
										Ext.getCmp('DJResearchRestart.examineRecordNumber').allowBlank = false;
									}
								}
							}
						}, {
							boxLabel : '否',
							id:'DJResearchRestart.standard',
							name : 'archives.isStandard',
							inputValue : 0,
							listeners:{
								check : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('DJResearchRestart.examineRecordModule').hide();
										Ext.getCmp('DJResearchRestart.examineRecordNumber').allowBlank = true;
									}
								}
							}
						}]
			}},{
				border:false,
				layout:'form',
				id : 'DJResearchRestart.examineRecordModule',
				hidden : true,
				labelWidth:105,
				items : [{
							xtype : 'textfield',
							name : 'archives.examineRecordNumber',
							id :'DJResearchRestart.examineRecordNumber',
							allowBlank : true,
							width : 600,
							fieldLabel : '审查备案号'
				}]
			}, {border:false,
			layout:'form',
			labelWidth:105,
			items:{
				xtype : 'radiogroup',
				id:'DJResearchRestart.isPublic',
				fieldLabel : '是否公开到外网',
				items : [{
					boxLabel : '是',
					id:'DJResearchRestart.public',
					name : 'archives.isPublic',
					inputValue : 1,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
								Ext.getCmp('DJResearchRestart.unPublicReasons').allowBlank = true;
								Ext.getCmp('DJResearchRestart._unPublicReasons').hide();
							}
						}
					}
				}, {
					boxLabel : '否',
					id:'DJResearchRestart.unPublic',
					name : 'archives.isPublic',
					inputValue : 0,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
								Ext.getCmp('DJResearchRestart.unPublicReasons').allowBlank = false;
								Ext.getCmp('DJResearchRestart._unPublicReasons').show();
							}
						}
					}
				}]
			}}, {
				id:'DJResearchRestart._unPublicReasons',
				border:false,
				layout:'form',
				items:[{
					fieldLabel : '不公开原因',
					xtype : 'textarea',
					hideParent :true,
					name : 'archives.unPublicReasons',
					id : 'DJResearchRestart.unPublicReasons',
					width : '93%'
				}]
			}]
		});
		
		//load date
		if (this.archivesId) {
				
		
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ this.archivesId,
	   			waitMsg : '正在载入数据...',
	   			method:'post',
				success : function(form, action) {
					var isStandard = action.result.data['archives.isStandard'];
					var isPublic=action.result.data['archives.isPublic'];
					var privacyLevel=action.result.data['archives.privacyLevel'];
					var isReserveNo=action.result.data['archives.isReserveNo'];
					Ext.getCmp('DJResearchRestart.archivesType').getStore().load({
						callback: function () {
							Ext.getCmp('DJResearchRestart.archivesType').setValue(Ext.decode(action.response.responseText).data[0].parentArchId);
						},
						scope: Ext.getCmp('DJResearchRestart.archivesType').getStore(),
						add: false
					});
					var did='${defId}';
					Ext.Ajax.request({
						url : __ctxPath + '/snconfig/listByPageFileSnConfigOrder.do',
						params : {
							'flowId' : did,
							'userId': curUserInfo.userId,
							'isUsed': 0
						},
						method:'post',
						success : function(response, options) {
							var af=Ext.util.JSON.decode(response.responseText).result;
							if(af==""){
								Ext.getCmp('_DJ_isReserveNoReStart_').hide();
								Ext.getCmp('_DJ_isReserveNoReStart_').allowBlank=true;
							}else{
								Ext.getCmp('_DJ_isReserveNoReStart_').show();
								Ext.getCmp('_DJ_isReserveNoReStart_').allowBlank=false;
								if(isReserveNo==1){
									Ext.getCmp("DJResearchRestart.isReserveNo").setValue(1);
								}else if(isReserveNo==0){
									Ext.getCmp("DJResearchRestart.isReserveNo").setValue(0);
								}
							}
						}
					});
					if(isStandard==1){
						Ext.get("DJResearchRestart.unStandard").dom.checked=true;
						Ext.getCmp('DJResearchRestart.examineRecordModule').show();
						Ext.getCmp('DJResearchRestart.examineRecordNumber').allowBlank = false;
					}else{
						Ext.get("DJResearchRestart.standard").dom.checked=true;
						Ext.getCmp('DJResearchRestart.examineRecordModule').hide();
						Ext.getCmp('DJResearchRestart.examineRecordNumber').allowBlank = true;
					}
					Ext.getCmp('DJResearchRestart.enclosure').setValue(Ext.decode(action.response.responseText).data[0].enclosure);
					Ext.get('DJResearchRestart.flowAssignId').dom.value=action.result.data['archives.reviewUserName'];
					var data = Ext.decode(action.response.responseText).data[0];
//					Ext.getCmp('DJResearchRestart.archivesType').setValue(data.parentArchId);
					if(privacyLevel!='一般'&&privacyLevel!='密级程度'){
						Ext.getCmp('DJResearchRestart.isPublic').disable();
						Ext.getCmp('DJResearchRestart.isPublic').allowBlank = true;
						Ext.getCmp('DJResearchRestart.unPublicReasons').setValue(null);
						Ext.getCmp('DJResearchRestart.unPublicReasons').allowBlank = true;
						Ext.getCmp('DJResearchRestart.unPublicReasons').disable();
					    //Ext.getCmp('DJrehiddeIsPublic').setDisabled(false);
		                //Ext.getCmp('DJrehiddeUnPublicReasons').setDisabled(false);
					}
					if(privacyLevel=='一般'||privacyLevel=='密级程度'){
						//Ext.getCmp('DJResearchCounts').hide();
						//Ext.getCmp('DJResearchCounts').el.parent().parent().hide();
						//Ext.getCmp('DJResearchCounts').allowBlank = true;
						//Ext.getCmp('DJrehiddeIsPublic').disable();
//		                Ext.getCmp('DJrehiddeUnPublicReasons').disable();
					if(isPublic==0){
						Ext.get("DJResearchRestart.unPublic").dom.checked=true;
					}else{
						Ext.get("DJResearchRestart.public").dom.checked=true;
						Ext.getCmp('DJResearchRestart.unPublicReasons').allowBlank = true;
						Ext.getCmp('DJResearchRestart._unPublicReasons').hide();
					}}
//					if(isStandard==0){
//						Ext.get("TWSentArchiveReStart.unStandard").dom.checked=true;
//					}else{
//						Ext.get("TWSentArchiveReStart.standard").dom.checked=true;
//					}
					/*if("${isReserveNo}"==0){
					  Ext.getCmp('_DJ_isReserveNoReStart_').hide();
					 Ext.getCmp('_DJ_isReserveNoReStart_').allowBlank=true;
					}else{					
					Ext.getCmp('_DJ_isReserveNoReStart_').show();
					Ext.getCmp('_DJ_isReserveNoReStart_').allowBlank=false;
					}*/
					//Ext.getCmp('DJResearchRestart.flowAssignId').setValue(data.reviewUser);
					var filePanel = Ext.getCmp('DJResearchRestart.personFilePanel');
					var fileIds = Ext.getCmp("DJResearchRestart.fileIds");
					/*Ext.Ajax.request({
							url : __ctxPath + '/archive/getAttachFilesArchives.do',
							params : {
								'fileIds' : '${fileIds}'
							},
							method:'post',
							success : function(response, options) {*/
								var af=Ext.decode(action.response.responseText).data[0].archivesFiles;
								if(af!=null){
								for (var i = 0; i < af.length; i++) {
									if (fileIds.getValue() != '') {
										fileIds.setValue(fileIds.getValue() + ',');
									}
									fileIds.setValue(fileIds.getValue() + af[i].fileId);
									Ext.DomHelper
											.append(
													filePanel.body,
													'<span><a href="#" onclick="FileAttachDetail.show('
															+ af[i].fileId
															+ ')">'
															+ af[i].fileName
															+ '</a><img class="img-delete" src="'
															+ __ctxPath
															+ '/images/system/delete.gif" onclick="removeFile(this,\'DJResearchRestart.fileIds\','
															+ af[i].fileId
															+ ')"/>&nbsp;|&nbsp;</span>');
									}
								}
			/*				}
				});*/
				},
				failure : function(form, action) {
					Ext.ux.Toast.msg('编辑', '载入失败');
				}
			});
		}
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
//		var reviewUserName = Ext.get("DJResearchRestart.flowAssignId").dom.value;
//		Ext.getCmp("DJResearchRestart.reviewUserName").setValue(reviewUserName);
		var fileIds = Ext.getCmp('DJResearchRestart.fileIds').getValue();
		/*if (panel.store.getCount() == 0) {// 公文正文附件为空
			Ext.ux.Toast.msg('操作信息', '请添加公文正文附件!');
			return false;
		}*/
		if (formPanel.getForm().isValid()) {
			var reFileIds = '';
			panel.store.each(function(rec){
				reFileIds += rec.data.fileId + ',';
			},this);
			formPanel.getForm().submit({
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					archivesRecfileIds : reFileIds
				},
				success : function(fp, action) {
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					var flowAssignId = Ext.getCmp("DJResearchRestart.flowAssignId").getValue();
					var isReserveNo=formPanel.getCmpByName('archives.isReserveNo').getGroupValue();
					formPanel.getForm().submit({
						url : __ctxPath + '/flow/nextProcessActivity.do',
						method : 'post',
						waitMsg : '正在提交数据...',
						params : {
							isReserveNo:isReserveNo,
							taskId : panel.taskId,
							signalName : signalName,
							activityName : activityName,
							sendMail : sendMail,
							sendMsg : sendMsg,
							sendInfo : sendInfo,
							flowAssignId : flowAssignId,
							fileIds : fileIds?fileIds:'_'
						},
						success : function(response, options) {
							Ext.ux.Toast.msg('操作信息', '拟稿成功！');
							Ext.getCmp('centerTabPanel').remove(Ext
									.getCmp('ProcessForm' + panel.taskId));
							refreshTaskPanelView();
						}
					});
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
				}
			});
		}

	}// end of save
})