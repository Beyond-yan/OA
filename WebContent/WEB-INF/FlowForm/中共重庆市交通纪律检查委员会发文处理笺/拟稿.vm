ZGDisciplineCheckSentArchiveStart = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		ZGDisciplineCheckSentArchiveStart.superclass.constructor.call(this, {
					id : 'ZGDisciplineCheckSentArchiveStart',
					title : '中共重庆市交通纪律检查委员会发文处理笺',
					layout : 'form',
					iconCls : 'menu-archive-draft',
					modal : true,
					width : 900,
					maximizable : true,
					items : [this.formPanel],
					buttonAlign : 'center',
					buttons : [{
								text : '启动流程',
								iconCls : 'btn-save',
								scope : this,
								handler : this.save
							}, {
								text : '保存草稿',
								iconCls : 'btn-beready-save',
								scope : this,
								handler : this.savedraft
							}]
				});
	},
	save : function() {
		/*文种*/Ext.getCmp('JLJCSentArchiveStart.archivesType').allowBlank = false;
		/*标题*/Ext.getCmp('JLJCSentArchiveStart.subject').allowBlank = false;
		/*核稿人*/Ext.getCmp('ZGDisciplineCheckSentArchiveForm.flowAssignId').allowBlank = false;
		/*发文单位*/Ext.getCmp('JLJCSentArchiveStart.issueDep').allowBlank = false;
		/*行文方向*/Ext.getCmp('JLJCSentArchiveStart.sources').allowBlank = false;
		/*常用主送单位*/Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.sendTo').allowBlank = false;
		/*是否规范性文件*/Ext.getCmp('JLJCSentArchiveStart.isStandard').allowBlank = false;
		/*是否公开到外网*/Ext.getCmp('JLJCSentArchiveStart.public').allowBlank = false;
		var defId = this.defId;
		var result = "呈部门负责人核稿";
		var reviewUserName = Ext.get("ZGDisciplineCheckSentArchiveForm.flowAssignId").dom.value;
		Ext.getCmp("archives.reviewUserName").setValue(reviewUserName);
		var flowAssignId = Ext.getCmp("ZGDisciplineCheckSentArchiveForm.flowAssignId").getValue();
		//alert("是否规范: "+Ext.getCmp("ZGDisciplineCheckSentArchiveForm.flowAssignId").getValue() + " "
		// +Ext.getCmp("archives.isPublic").getValue()); return false;
		/*if (this.store.getCount() == 0) {// 公文正文附件为空
			Ext.ux.Toast.msg('操作信息', '请添加公文正文附件!');
			return false;
		}*/
		if (this.formPanel.getForm().isValid()) {
			var formPanel = this.formPanel;

			var docParams = [];
			for (var i = 0, cnt = this.store.getCount(); i < cnt; i++) {
				docParams.push(this.store.getAt(i).data);
			}
			  var url1 = __ctxPath + '/archive/saveNormalArchives.do';
			var url2 = __ctxPath + '/archive/saveArchives.do';
			formPanel.getForm().submit({
				url : archivesId ? url2 : url1,
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					'archives.isdraft' : 0,
					docs : Ext.encode(docParams)
				},
				success : function(fp, action) {
					var archivesId = action.result.archivesId;
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					var fileIds = Ext.getCmp('ZGDisciplineCheckSentArchiveForm.sentAttachments.fileIds')
							.getValue();
					var isReserveNo=formPanel.getCmpByName('archives.isReserveNo').getGroupValue();
					formPanel.getForm().submit({
						url : __ctxPath + '/flow/saveProcessActivity.do',
						method : 'post',
						waitMsg : '正在发起流程...',
						params : {
							isReserveNo:isReserveNo,
							defId : defId,
							sendUserId : curUserInfo.userId,
							sendMail : sendMail,
							sendMsg : sendMsg,
							sendInfo:sendInfo,
							archivesId : archivesId,
							fileIds : fileIds ? fileIds : '_',
							// destName:'部门负责人核稿',
//							status : result,
							flowAssignId : flowAssignId,
							startFlow : true
						},
						success : function(result, action) {
							var runId = action.result.runId;
							Ext.Ajax.request({
								url : __ctxPath
										+ '/archive/updateRunIdArchives.do',
								params : {
									archivesId : archivesId,
									runId : runId
								},
								method : 'POST',
								waitMsg : "正在保存流程信息，请稍等",
								success : function(fp, action) {
									Ext.ux.Toast.msg('操作信息', '成功保存！');
									Ext.getCmp('centerTabPanel').remove(Ext
											.getCmp('ProcessRunStart' + defId));
									refreshTaskPanelView();
										var ArchivesGrid = Ext.getCmp('ArchivesGrid');
									if (ArchivesGrid != null) {
										ArchivesGrid.getStore().reload();
									}
								},
								failure : function(fp, action) {
									Ext.MessageBox.show({
												title : '操作信息',
												msg : '信息保存出错，请联系管理员！',
												buttons : Ext.MessageBox.OK,
												icon : Ext.MessageBox.ERROR
											});
								}
							});
						},
						failure : function(fp, action) {
							Ext.MessageBox.show({
										title : '操作信息',
										msg : '信息保存出错，请联系管理员！',
										buttons : Ext.MessageBox.OK,
										icon : Ext.MessageBox.ERROR
									});
						}
					});
				}

			})
		}
	},
		/* 保存草稿 */
	savedraft : function() {
		/*文种*/Ext.getCmp('JLJCSentArchiveStart.archivesType').allowBlank = true;
		/*标题*/Ext.getCmp('JLJCSentArchiveStart.subject').allowBlank = true;
		/*核稿人*/Ext.getCmp('ZGDisciplineCheckSentArchiveForm.flowAssignId').allowBlank = true;
		/*发文单位*/Ext.getCmp('JLJCSentArchiveStart.issueDep').allowBlank = true;
		/*行文方向*/Ext.getCmp('JLJCSentArchiveStart.sources').allowBlank = true;
		/*常用主送单位*/Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.sendTo').allowBlank = true;
		/*是否规范性文件*/Ext.getCmp('JLJCSentArchiveStart.isStandard').allowBlank = true;
		/*是否公开到外网*/Ext.getCmp('JLJCSentArchiveStart.public').allowBlank = true;
		var defId = this.defId;

		/*
		 * if (this.store.getCount() == 0) { Ext.ux.Toast.msg('操作信息',
		 * '请添加公文正文!'); return false; }
		 */
		if (this.formPanel.getForm().isValid()) {
			var formPanel = this.formPanel;
			/*
			 * alert(formPanel.getCmpByName('archives.reviewUser').getValue());
			 * return false;
			 */
			var reviewUserName = Ext.get("ZGDisciplineCheckSentArchiveForm.flowAssignId").dom.value;
			Ext.getCmp("archives.reviewUserName")
					.setValue(reviewUserName);
			var flowAssignId = Ext.getCmp('ZGDisciplineCheckSentArchiveForm.flowAssignId').getValue();
			var docParams = [];
			for (var i = 0, cnt = this.store.getCount(); i < cnt; i++) {
				docParams.push(this.store.getAt(i).data);
			}
			var url1 = __ctxPath + '/archive/saveNormalArchives.do';
			var url2 = __ctxPath + '/archive/saveArchives.do';
			formPanel.getForm().submit({
				url : archivesId ? url2 : url1,
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					'archives.isdraft' : 1,
					docs : Ext.encode(docParams)
					// 'archives.reviewUser':flowAssignId
				},
				success : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '成功保存！');
					var ArchivesGrid = Ext.getCmp('ArchivesGrid');
									if (ArchivesGrid != null) {
										ArchivesGrid.getStore().reload();
									}
					Ext.getCmp('centerTabPanel').remove(Ext
							.getCmp('ProcessRunStart' + defId));
					refreshTaskPanelView();
					
					/*
					 * var archivesId = action.result.archivesId; var sendMail =
					 * msgPanel.getCmpByName('sendMail').getValue(); var sendMsg =
					 * msgPanel.getCmpByName('sendMsg').getValue(); var sendInfo =
					 * msgPanel.getCmpByName('sendInfo').getValue(); var fileIds =
					 * Ext.getCmp('ZSGHSentDoc.fileIds') .getValue(); var
					 * isReserveNo=formPanel.getCmpByName('archives.isReserveNo').getGroupValue();
					 * formPanel.getForm().submit({ url : __ctxPath +
					 * '/flow/saveProcessActivity.do', method : 'post', waitMsg :
					 * '正在发起流程...', params : { isReserveNo:isReserveNo, defId :
					 * defId, sendMail : sendMail, sendMsg : sendMsg, sendInfo :
					 * sendInfo, archivesId : archivesId,
					 * flowAssignId:flowAssignId,
					 * flowCreatorId:curUserInfo.userId, fileIds :
					 * fileIds?fileIds:'_', startFlow : true }, success :
					 * function(response, options) { Ext.Ajax.request({ url :
					 * __ctxPath + '/archive/updateRunIdArchives.do', params : {
					 * 'archives.isdraft':1, 'archivesId' : archivesId, 'runId' :
					 * options.result.runId }, method:'post', success :
					 * function(response, options) { Ext.ux.Toast.msg('操作信息',
					 * '成功保存！'); Ext.getCmp('centerTabPanel').remove(Ext
					 * .getCmp('ProcessRunStart' + defId));
					 * refreshTaskPanelView(); } }); } });
					 */},
				failure : function(fp, action) {
					Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
				}
			});
		}

	},
	initUIComponents : function() {
		this.defId=defId;
				Ext.Ajax.request({
					url : __ctxPath + '/archive/getdefnameArchives.do',
					params : {
						'defId' : defId
					},
					method : 'post',
					success : function(response, options) {
						var data = Ext.util.JSON.decode(response.responseText);
						Ext.getCmp('JLJCSentArchiveStart.recDepNames')
								.setValue(data.name);
					}
				});
		this.archivesId = archivesId;
		function createFileUpdateCmp(id_pre, label) {
			return [{
						columnWidth : .8,
						items : [{
									fieldLabel : label,
									xtype : 'panel',
									id : id_pre + '.personFilePanel',
									frame : false,
									border : true,
									bodyStyle : 'padding:4px 4px 4px 4px;',
									height : 80,
									autoScroll : true,
									html : ''
								}]
					}, {
						columnWidth : .2,
						padding : '0 0 0 20px',
						items : [{
							border : false,
							xtype : 'button',
							text : '添加文件',
							iconCls : 'menu-attachment',
							handler : function() {
								var dialog = App.createUploadDialog({
									file_cat : 'document',
									judge_size : 'no',
									upload_autostart : true,
									callback : function(data) {
										var fileIds = Ext.getCmp(id_pre
												+ '.fileIds');
										var filePanel = Ext.getCmp(id_pre
												+ '.personFilePanel');
										var fileNames="";
										for (var i = 0; i < data.length; i++) {
											if (fileIds.getValue() != '') {
												fileIds.setValue(fileIds
														.getValue()
														+ ',');
											}
											fileIds.setValue(fileIds.getValue()
													+ data[i].fileId);
											if(i>0){
												fileNames+=" ";
											}
											fileNames+=data[i].filename;
											
											Ext.DomHelper
													.append(
															filePanel.body,
															'<span><a href="#" onclick="FileAttachDetail.show('
																	+ data[i].fileId
																	+ ')">'
																	+ data[i].filename
																	+ '</a> <img class="img-delete" src="'
																	+ __ctxPath
																	+ '/images/system/delete.gif" onclick="removeFile(this,\''
																	+ id_pre
																	+ '.fileIds\','
																	+ data[i].fileId
																	+ ')"/>&nbsp;|&nbsp;</span>');

										}
										Ext.getCmp('SearchFileNames').setValue(fileNames);
											Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
												'subject' : Ext.getCmp('SearchSubject').getValue(),
												'archType': "0",
												'docName' : Ext.getCmp('SearchDocNames').getValue(),
												'fileName': Ext.getCmp('SearchFileNames').getValue()
											}
											Ext.Ajax.request({
													url : __ctxPath + '/archive/oaSearchListArchives.do',
													params : {
														'subject' : Ext.getCmp('SearchSubject').getValue(),
														'archType': "0",
														'docName' : Ext.getCmp('SearchDocNames').getValue(),
														'fileName': fileNames
													},
													method:'post',
													success : function(response, options) {
														var data=Ext.util.JSON.decode(response.responseText)
														Ext.getCmp('ProcessStartOASearchGrid').getStore().loadData(data);
													}
											});
									}
								});
								dialog.show(this);
							}
						}, {
							xtype : 'button',
							text : '清除文件',
							iconCls : 'reset',
							handler : function() {
								var fileAttaches = Ext.getCmp(id_pre
										+ '.fileIds');
								var filePanel = Ext.getCmp(id_pre
										+ '.personFilePanel');

								filePanel.body.update('');
								fileAttaches.setValue('');
							}
						}, {
							xtype : 'hidden',
							id : id_pre + '.fileIds',
							name : 'fileIds'
						}]
					}];
		}
		this.docGridPanel = new ArchivesUtil({
			panelId :'ZGDisciplineCheckSentArchiveStart',
			isStart : true,
			archType: 0,
			archivesId : this.archivesId
		}).getGridPanelWithFullTools();
		var fp =this.formPanel = new Ext.FormPanel({
			id : 'ZGDisciplineCheckSentArchiveForm',
			url : __ctxPath + '/archive/saveNormalArchives.do',
			frame : false,
			border : false,
			layout : 'form',
			labelWidth : 80,
			width : 900,
			padding : '5px',
			reader : new Ext.data.JsonReader({
						root : 'data'
					}, [{
								name : 'archives.archivesId',
								mapping : 'archivesId'
							}, {
								name : 'archives.issueDep',
								mapping : 'issueDep'
							}, {
								name : 'archives.subject',
								mapping : 'subject'
							}, {
								name : 'archives.isReserveNo',
								mapping : 'isReserveNo'
							}, {
								name : 'archives.fileCounts',
								mapping : 'fileCounts'
							}, {
								name : 'archives.privacyLevel',
								mapping : 'privacyLevel'
							}, {
								name : 'archives.urgentLevel',
								mapping : 'urgentLevel'
							}, {
								name : 'archives.issuer',
								mapping : 'issuer'
							}, {
								name : 'archives.sources',
								mapping : 'sources'
							}, {
								name : 'archives.isPublic',
								mapping : 'isPublic'
							}, {
								name : 'archives.reviewUser',
								mapping : 'reviewUser'
							}, {
								name : 'archives.reviewUserName',
								mapping : 'reviewUserName'
							}, {
								name : 'archives.sendTo',
								mapping : 'sendTo'
							}, {
								name : 'archives.ccTo',
								mapping : 'ccTo'
							}, {
								name : 'archives.isStandard',
								mapping : 'isStandard'
							}, {
								name : 'archives.unPublicReasons',
								mapping : 'unPublicReasons'
							}]),
			items : [{
				border : false,
				layout : 'column',
				defaults : {
					border : false,
					columnWidth : .33,
					layout : 'form',
					defaults : {
						width : 200,
						xtype : 'textfield',
						allowBlank : false
					}
				},
				items : [{

					items : [{
							name : 'archives.archivesId',
							xtype : 'hidden'
						}, {
							xtype : "hidden",
							name : "archives.recDepIds",
							value : defId,
							id : "JLJCSentArchiveStart.recDepIds"
						}, {
							xtype : "hidden",
							name : "archives.recDepNames",
							id : "JLJCSentArchiveStart.recDepNames"
						},{
								xtype : 'hidden',
								name : 'archives.issuerId',
								value : curUserInfo.userId
							}, {
								xtype : 'hidden',
								name : 'archives.archType',
								id : 'archivesArchType',
								value : 0
							}, {
								fieldLabel : "拟稿部门",
								id : 'ZGDisciplineCheckSentArchiveForm.issueDep',
								value : curUserInfo.depName,
								readOnly : true
							}, {
								xtype : 'combo',
								fieldLabel : "发文单位",
								name : 'archives.issueDep',
								triggerAction : 'all',
								id:'JLJCSentArchiveStart.issueDep',
								lazyRender : true,
								editable : false,
								fieldLabel : '发文单位',
								store : ['重庆市交通委员会',
										'中共重庆市交通委员会', '中共重庆市交通委员会机关党委',
										'中共重庆市交通纪律检查委员会', '共青团重庆市交通委员会',
										'重庆市交通委员会直属机关工会']

							}, {
								xtype : 'combo',
								fieldLabel : '文种',
								hiddenName : "archives.archivesType.typeId",
								id : 'JLJCSentArchiveStart.archivesType',
								valueField : 'typeId',
								displayField : 'typeName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/archive/comboArchivesType.do',
											autoLoad : true,
											fields : ['typeId', 'typeName']
										})
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '缓急',
								triggerAction : 'all',
								allowBlank : true,
								editable : false,
								name : 'archives.urgentLevel',
								emptyText : '急缓程度',
								store : ['特急', '急件', '加急', '平急']
							}, {
								fieldLabel : '拟稿',
								name : "archives.issuer",
								readOnly : true,
								value : curUserInfo.fullname
							}, {
								xtype : 'combo',
								name : 'archives.sources',
								id:'JLJCSentArchiveStart.sources',
								triggerAction : 'all',
								editable : false,
								fieldLabel : '行文方向',
								store : ['上行文', '平行文', '下行文']
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '密级',
								triggerAction : 'all',
								allowBlank : true,
								editable : false,
								name : 'archives.privacyLevel',
								emptyText : '密级程度',
								store : ['一般', '秘密', '机密', '绝密'],
								listeners: {
									'select':function(combo){
										if(combo.getValue()!='一般'){
											Ext.getCmp('JLJCSentArchiveStart.public').disable();
											Ext.getCmp('JLJCSentArchiveStart.public').allowBlank=true;		
											Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').disable();
											Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').allowBlank=true;
											Ext.getCmp('JLJChiddenIsPublic').setValue(0);
			                                Ext.getCmp('JLJChiddenUnPublicReasons').setValue(null);
			                                Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').setValue(null);
			                                Ext.getCmp('JLJChiddenIsPublic').setDisabled(false);
		                                    Ext.getCmp('JLJChiddenUnPublicReasons').setDisabled(false);
//		                                    Ext.getCmp('ZGDisciplineCheckSentArchiveForm.fileCounts').show();
//											Ext.getCmp('ZGDisciplineCheckSentArchiveForm.fileCounts').el.parent().parent().show();
//											Ext.getCmp('ZGDisciplineCheckSentArchiveForm.fileCounts').allowBlank = false;
										}else{
											Ext.getCmp('JLJCSentArchiveStart.public').reset();
											Ext.getCmp('JLJCSentArchiveStart.public').setDisabled(false);
											Ext.getCmp('JLJCSentArchiveStart.public').allowBlank=false;
											Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').setDisabled(false);
											Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').allowBlank=false;
											Ext.getCmp('JLJChiddenIsPublic').disable();
		                                    Ext.getCmp('JLJChiddenUnPublicReasons').disable();
//		                                    Ext.getCmp('ZGDisciplineCheckSentArchiveForm.fileCounts').hide();
//											Ext.getCmp('ZGDisciplineCheckSentArchiveForm.fileCounts').el.parent().parent().hide();
//											Ext.getCmp('ZGDisciplineCheckSentArchiveForm.fileCounts').allowBlank = true;
		                                    
										}
									}
								}
							}, {
								xtype : "hidden",
								name : "archives.reviewUserName",
								id : "archives.reviewUserName"
							}, {
								xtype : "combo",
								hiddenName : "archives.reviewUser",
								id : 'ZGDisciplineCheckSentArchiveForm.flowAssignId',
								fieldLabel : "核稿",
								valueField : 'flowAssignId',
								displayField : 'flowAssignName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
									url : __ctxPath
											+ '/system/arrLeadersAppUser.do?roles='+roleMap.get('officeDeputyDirectorRoleID')+','+roleMap.get('officeDirectorRoleID'),
									autoLoad : true,
									fields : ['flowAssignId', 'flowAssignName']
								})
							}, {
								xtype : 'numberfield',
								id: 'ZGDisciplineCheckSentArchiveForm.fileCounts',
								name : 'archives.fileCounts',
								fieldLabel : '份数',
								value : 1
							}]
				}]
			}, {
				xtype : 'textfield',
				name : 'archives.subject',
				id:'JLJCSentArchiveStart.subject',
				allowBlank : false,
				width : '96.5%',
				fieldLabel : '标题',
				listeners: {
							'change' : function(t){
						       if(t.getValue()!=""){
						       		Ext.getCmp('SearchSubject').setValue(t.getValue());
						       		Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
										'subject' : Ext.getCmp('SearchSubject').getValue(),
										'archType': "0",
										'docName' : Ext.getCmp('SearchDocNames').getValue(),
										'fileName': Ext.getCmp('SearchFileNames').getValue()
									}
							        Ext.Ajax.request({
										url : __ctxPath + '/archive/oaSearchListArchives.do',
										params : {
											'subject' : t.getValue(),
											'archType': "0",
											'docName' : Ext.getCmp('SearchDocNames').getValue(),
											'fileName': Ext.getCmp('SearchFileNames').getValue()
										},
										method:'post',
										success : function(response, options) {
											var data=Ext.util.JSON.decode(response.responseText)
											Ext.getCmp('ProcessStartOASearchGrid').getStore().loadData(data);
										}
									});
						       }
						     }
						}
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style:'padding-top:4px;',
							text : '主送:',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.sendTo',
							width : '76.5%',
							// readOnly : true,
							id : 'ZGDisciplineCheckSentArchiveForm.archives.sendTo'
						}, {
							style : 'padding-left:5px;',
							xtype : 'button',
							iconCls : 'btn-dep-sel',
							text : '常用主送单位',
							handler : function() {
								UnitsSelector.getView(
									function(ids, names) {
										Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.sendTo')
											.setValue(names);
										}, false,1).show();
							}
						}]
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style:'padding-top:4px;',
							text : '抄送:',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.ccTo',
							width : '76.5%',
							allowBlank : true,
							// readOnly : true,
							id : 'ZGDisciplineCheckSentArchiveForm.archives.ccTo'
						}, {
							xtype : 'button',
							style : 'padding-left:5px;',
							iconCls : 'menu-department',
							text : '常用抄送单位',
							handler : function() {
								UnitsSelector.getView(
									function(ids, names) {
										Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.ccTo')
											.setValue(names);
										}, false,2).show();
							}
						}]
			}, {
				xtype : 'fieldset',
				border : false,
				style:'margin-bottom:0;padding-bottom:0;padding-top:0;',
				defaults : {
					anchor : '98%,98%'
				},
				items : [this.docGridPanel, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:10px 0px 8px 0px;margin-left:5px;',
				defaults : {
					allowBlank : true,
					border : false
				},
				items : [{
							xtype : 'label',
							text : '附件：',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.enclosure',
							width : '89%',
							id : 'ZGDisciplineCheckSentArchiveForm.enclosure'
						}]
			}, {
							layout : 'column',
							border : false,
							padding : '5px',
							defaults : {
								layout : 'form',
								border : false
							},
							items : createFileUpdateCmp('ZGDisciplineCheckSentArchiveForm.sentAttachments',
									'公文附件')
						}]
			},{
				id : 'JWDWSentArchivesIsReserveNoRadio',
				border : false,
				labelWidth: 105,
				layout : 'form',
				items : {
					xtype : 'radiogroup',
					fieldLabel : '是否使用预约编号',
					id:'ZGDisciplineCheckSentArchiveForm.radiogroup',
					hideParent : true,
					items : [{
								boxLabel : '是',
								name : 'archives.isReserveNo',
								inputValue : 1
							}, {
								boxLabel : '否',
								name : 'archives.isReserveNo',
								inputValue : 0
							}]
				}
			},{ 
				border : false,
				labelWidth: 105,
				layout : 'form',
				items : {
				xtype : 'radiogroup',
				id:'JLJCSentArchiveStart.isStandard',
				fieldLabel : '是否规范性文件',
				allowBlank:false,
				items : [{
							boxLabel : '是',
							name : 'archives.isStandard',
							inputValue : 1
						}, {
							boxLabel : '否',
							name : 'archives.isStandard',
							id : 'JLJCSentArchiveStart.standard',
							inputValue : 0
						}]
			}}, { 
				border : false,
				labelWidth: 105,
				layout : 'form',
				items : {
				xtype : 'radiogroup',
				id:'JLJCSentArchiveStart.public',
				fieldLabel : '是否公开到外网',
				allowBlank:false,
				items : [ {
					boxLabel : '是',
					name : 'archives.isPublic',
					inputValue : 1,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
								Ext.getCmp('JLJChiddenIsPublic').disable();
		                        Ext.getCmp('JLJChiddenUnPublicReasons').disable();
								Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').setValue(null);
								Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').allowBlank = true;
								Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').hide();
								Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').el
										.parent().parent().hide();
							}
						}
					}
				},{
					boxLabel : '否',
					name : 'archives.isPublic',
					inputValue : 0,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
								Ext.getCmp('JLJChiddenIsPublic').disable();
		                        Ext.getCmp('JLJChiddenUnPublicReasons').disable();
								Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').allowBlank = false;
								Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').show();
								Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').el
										.parent().parent().show();
							}
						}
					}
				}]
			}}, {
				xtype : 'textarea',
				name : 'archives.unPublicReasons',
				id : 'ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons',
				width : '85%',
				fieldLabel : '不公开原因'
			},{
				xtype:'hidden',
				name:'archives.isPublic',
					disabled:true,
				id:'JLJChiddenIsPublic'
			},{
				xtype:'hidden',
				name:'archives.unPublicReasons',
					disabled:true,
				id:'JLJChiddenUnPublicReasons'
			}]
		});
			if (this.archivesId) {
			this.formPanel.getForm().load({
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ this.archivesId,
				waitMsg : '正在载入数据...',
				success : function(form, action) {
					var isStandard = action.result.data['archives.isStandard'];
					var isPublic = action.result.data['archives.isPublic'];
					var isReserveNo = action.result.data['archives.isReserveNo'];
					var privacyLevel = action.result.data['archives.privacyLevel'];
					Ext.getCmp('JLJCSentArchiveStart.archivesType')
							.getStore().load({
								callback : function() {
									// 等待数据加载完成才进行赋值，不然由于异步会出现先赋值后加载完成。
									Ext
											.getCmp('JLJCSentArchiveStart.archivesType')
											.setValue(Ext
													.decode(action.response.responseText).data[0].parentArchId);
								},
								scope : Ext
										.getCmp('JLJCSentArchiveStart.archivesType')
										.getStore(),// 表示作用范围
								add : false
									// 为false表示数据不累加
							});
					Ext.getCmp('ZGDisciplineCheckSentArchiveForm.enclosure').setValue(Ext.decode(action.response.responseText).data[0].enclosure);
					Ext.get('ZGDisciplineCheckSentArchiveForm.flowAssignId').dom.value = action.result.data['archives.reviewUserName'];
					if (privacyLevel != '一般' && privacyLevel != '密级程度') {
						Ext.getCmp('JLJCSentArchiveStart.public').disable();
						Ext.getCmp('JLJCSentArchiveStart.public').allowBlank = true;
						Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').allowBlank = true;
						Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').disable();
						// Ext.getCmp('ZSGHSentArchiveReCounts').show();
						// Ext.getCmp('ZSGHSentArchiveReCounts').el.parent().parent().show();
						// Ext.getCmp('ZSGHSentArchiveReCounts').allowBlank =
						// false;
					}
					if (privacyLevel == '一般' || privacyLevel == '密级程度') {
						// Ext.getCmp('ZSGHSentArchiveReCounts').hide();
						// Ext.getCmp('ZSGHSentArchiveReCounts').el.parent().parent().hide();
						// Ext.getCmp('ZSGHSentArchiveReCounts').allowBlank =
						// true;
						if(isPublic==-1){
						Ext.getCmp('JLJCSentArchiveStart.public')
								.setValue(null);
					    }else
						if (isPublic == 0) {
							// Ext.get("ZSGHSentArchiveRestart.unPublic").dom.checked=true;
							Ext.getCmp('JLJCSentArchiveStart.public').setValue(0);
						} else {
							// Ext.get("ZSGHSentArchiveRestart.public").dom.checked=true;
							Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').allowBlank = true;
							Ext.getCmp('JLJCSentArchiveStart.public').setValue(1);
							Ext.getCmp('ZGDisciplineCheckSentArchiveForm.archives.unPublicReasons').hide();
							// Ext.getCmp('ZSJG_unPublicReasons').hide();
							// Ext.getCmp('ZSJG_unPublicReasons').el.parent().parent().hide();
						}
					}	
					if(isStandard==-1){
						Ext.getCmp('JLJCSentArchiveStart.standard')
								.setValue(null);
					}else
					if (isStandard == 0) {
						Ext.getCmp('JLJCSentArchiveStart.standard')
								.setValue(0);
					} else {
						Ext.getCmp('JLJCSentArchiveStart.standard')
								.setValue(1);
					}
					var data = Ext.decode(action.response.responseText).data[0];
					// Ext.getCmp('ZSGHSentArchiveRestart.archivesType').setValue(data.parentArchId);
					// Ext.getCmp('ZSGHSentArchiveRestart.flowAssignId').setValue(data.reviewUser);
					var filePanel = Ext.getCmp('ZGDisciplineCheckSentArchiveForm.sentAttachments.personFilePanel');
					var fileIds = Ext.getCmp('ZGDisciplineCheckSentArchiveForm.sentAttachments.fileIds');
					// Ext.Ajax.request({
					// url : __ctxPath + '/archive/getAttachFilesArchives.do',
					// params : {
					// 'fileIds' : '${fileIds}'
					// },
					// method:'post',
					// success : function(response, options) {
					var af = Ext.decode(action.response.responseText).data[0].archivesFiles;
					if (af != null) {
						for (var i = 0; i < af.length; i++) {
							if (fileIds.getValue() != '') {
								fileIds.setValue(fileIds.getValue() + ',');
							}
							fileIds.setValue(fileIds.getValue() + af[i].fileId);
							Ext.DomHelper
									.append(
											filePanel.body,
											'<span><a href="#" onclick="FileAttachDetail.show('
													+ af[i].fileId
													+ ')">'
													+ af[i].fileName
													+ '</a><img class="img-delete" src="'
													+ __ctxPath
													+ '/images/system/delete.gif" onclick="removeFile(this,\'ZSGHSentArchiveRestart.fileIds\','
													+ af[i].fileId
													+ ')"/>&nbsp;|&nbsp;</span>');
						}
					}
					// }
					// });
				},
				failure : function(form, action) {
					Ext.ux.Toast.msg('编辑', '载入失败');
				}
			});
		}
		Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
			'subject' : Ext.getCmp('SearchSubject').getValue(),
			'archType': "0",
			'docName' : Ext.getCmp('SearchDocNames').getValue(),
			'fileName': Ext.getCmp('SearchFileNames').getValue()
		}
		var did=defId;
		Ext.Ajax.request({
						url : __ctxPath + '/snconfig/listByPageFileSnConfigOrder.do',
						params : {
							'flowId' : did,
							'userId':curUserInfo.userId,
							'isUsed':0
						},
						method:'post',
						success : function(response, options) {
							var af=Ext.util.JSON.decode(response.responseText).result;
							if(af==""){
							  Ext.getCmp('JWDWSentArchivesIsReserveNoRadio').hide();
							  fp.getCmpByName('archives.isReserveNo').setValue(3);
							  Ext.getCmp('ZGDisciplineCheckSentArchiveForm.radiogroup').allowBlank=true;
							}else{
							Ext.getCmp('JWDWSentArchivesIsReserveNoRadio').show();
							Ext.getCmp('ZGDisciplineCheckSentArchiveForm.radiogroup').allowBlank=false;
							}
						}
		});
	}
})
