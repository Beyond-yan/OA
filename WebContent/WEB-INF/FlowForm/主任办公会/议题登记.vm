ZRBGHYTDJPanel = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		// 必须先初始化组件  
		//编号办法请按照法规处收文登记中修改
			function createFileUpdateCmp(id_pre, label) {
			return [{
						columnWidth : .85,
						items : [{
									fieldLabel : label,
									xtype : 'panel',
									id : id_pre + '.personFilePanel',
									frame : false,
									border : true,
									bodyStyle : 'padding:4px 4px 4px 4px;',
									height : 80,
									width: 448,
									autoScroll : true,
									html : ''
								}]
					}, {
						columnWidth : .14,
						items : [{
							border : false,
							xtype : 'button',
							text : '添加文件',
							iconCls : 'menu-attachment',
							handler : function() {
								var dialog = App.createUploadDialog({
									file_cat : 'document/' + curUserInfo.ownerSchema,
									judge_size : 'no',
									upload_autostart : true,
									callback : function(data) {
										var fileIds = Ext.getCmp(id_pre
												+ '.fileIds');
										var filePanel = Ext.getCmp(id_pre
												+ '.personFilePanel');
										var fileNames="";
										for (var i = 0; i < data.length; i++) {
											if (fileIds.getValue() != '') {
												fileIds.setValue(fileIds
														.getValue()
														+ ',');
											}
											fileIds.setValue(fileIds.getValue()
													+ data[i].fileId);
											if(i>0){
												fileNames+=" ";
											}
											fileNames+=data[i].filename;
											
											Ext.DomHelper
													.append(
															filePanel.body,
															'<span><a href="#" onclick="FileAttachDetail.show('
																	+ data[i].fileId
																	+ ')">'
																	+ data[i].filename
																	+ '</a> <img class="img-delete" src="'
																	+ __ctxPath
																	+ '/images/system/delete.gif" onclick="removeFile(this,\''+id_pre+'.fileIds\','
																	+ data[i].fileId
																	+ ')"/>&nbsp;|&nbsp;</span>');
										}
										Ext.getCmp('SearchFileNames').setValue(fileNames);
										Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
											'subject' : Ext.getCmp('SearchSubject').getValue(),
											'archType': Ext.getCmp('archivesArchType').getValue(),
											'docName' : Ext.getCmp('SearchDocNames').getValue(),
											'fileName': Ext.getCmp('SearchFileNames').getValue()
										}
										Ext.Ajax.request({
												url : __ctxPath + '/archive/oaSearchListArchives.do',
												params : {
													'subject' : Ext.getCmp('ZRBGHYTDJForm.subject').getValue()!=""?Ext.getCmp('ZRBGHYTDJForm.subject').getValue():null,
													'archType': Ext.getCmp('archivesArchType').getValue(),
													'docName' : Ext.getCmp('SearchDocNames').getValue(),
													'fileName': fileNames
												},
												method:'post',
												success : function(response, options) {
													var data=Ext.util.JSON.decode(response.responseText)
													Ext.getCmp('ProcessStartOASearchGrid').getStore().loadData(data);
												}
										});
									}
								});
								dialog.show(this);
							}
						}, {
							xtype : 'button',
							text : '清除文件',
							iconCls : 'reset',
							handler : function() {
								var fileAttaches = Ext.getCmp(id_pre
										+ '.fileIds');
								var filePanel = Ext.getCmp(id_pre
										+ '.personFilePanel');

								filePanel.body.update('');
								fileAttaches.setValue('');
							}
						}, {
							xtype : 'hidden',
							id : id_pre + '.fileIds',
							name : 'fileIds'
						}]
					}];
		}
		this.archivesId=archivesId;
		this.docGridPanel = new ArchivesUtil({
			panelId : 'ZRBGHYTDJPanel',
			isStart : true,
			archType: 7,
			archivesId : this.archivesId
			}).getGridPanelWithFullTools();
		var initStore=new Ext.data.SimpleStore({
				url : __ctxPath
						+ '/system/getInnersByDepIdsAppUser.do',
				autoLoad : false,
				fields : ['userId', 'fullname']
			});
		
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			id : 'ZRBGHYTDJForm',
			url : __ctxPath + '/archive/saveNormalArchives.do',
			frame : false,
			border : false,
			labelWidth:140,
			width : 800,
			padding : '5px',
				reader : new Ext.data.JsonReader({
						root : 'data'
			}, [ {
					name : 'archives.archivesId',
					mapping : 'archivesId'
				}, {
					name : 'archives.issueDate',
					mapping : 'issueDate'
				}, {
					name : 'archives.depSignNo',
					mapping : 'depSignNo'
				}, {
					name : 'archives.writtenDate',
					mapping : 'writtenDate'
				}, {
					name : 'archives.issueDep',
					mapping : 'issueDep'
				}, {
				    name:'archives.status',
				    mapping:'status'
				}, {
					name : 'archives.subject',
					mapping : 'subject'
				}, {
					name : 'archives.fileCounts',
					mapping : 'fileCounts'
				}, {
					name : 'archives.privacyLevel',
					mapping : 'privacyLevel'
				}, {
					name : 'archives.urgentLevel',
					mapping : 'urgentLevel'
				},{
					name : 'archives.issuer',
					mapping : 'issuer'
				}, {
					name : 'archives.issuerId',
					mapping : 'issuerId'
				}, {
					name:'archives.orgDepName',
					mapping:'orgDepName'
				}, {
					name:'archives.archType',
					mapping:'archType'
				}, {
					name:'archives.orgDepId',
					mapping:'orgDepId'
				}, {
					name:'archives.archivesFiles',
					mapping:'archivesFiles'
				}, {
					name:'archives.limitedDate',
					mapping:'limitedDate'
				}, {
					name : 'archives.reviewUser',
					mapping : 'reviewUser'
				}, {
					mame : 'archives.sources',
					mapping : 'sources'				
				}, {
					name : 'archives.shortContent',
					mapping : 'shortContent'
				}, {
					name : 'archives.handlerUnames',
					mapping : 'handlerUnames'
				},{
					name : 'archives.enclosure',
					mapping : 'enclosure'
				},{
					name : 'archives.isShared',
					mapping : 'isShared'
				},{
					name : 'archives.unPublicReasons',
					mapping : 'unPublicReasons'
				},{
					name : 'archives.handlerUids',
					mapping : 'handlerUids'
				}]),
			items : [{
					xtype : 'textfield',
					fieldLabel : '提案名称',
					labelWidth:140,
					name : 'archives.subject',
					id : 'ZRBGHYTDJForm.subject',
					width:595,
					allowBlank : false
				},{
					xtype : 'container',
					layout : 'column',
					style : 'padding:0px 0px 4px 0px',
					defaults : {
						allowBlank : true,
						border : false
					},
					items : [{
								xtype : 'label',
								text : '提案背景以及主要内容：',
								width : 140
							}, {
								xtype : 'textarea',
								name : 'archives.shortContent',
								width : 595,
								height : 50,
								style : 'margin-left:5px'
							}]
					},{
						xtype : 'container',
						layout : 'column',
						style : 'padding:0px 0px 4px 0px',
						defaults : {
							allowBlank : true,
							border : false
						},
						items : [{
									xtype : 'label',
									text : '提案建议事项：',
									width : 140
								}, {
									xtype : 'textarea',
									name : 'archives.enclosure',
									width : 595,
									height : 50,
									style : 'margin-left:5px'
								}]
					},{
						xtype : 'container',
						style : 'padding-left:0px;margin-bottom:4px;',
						id : 'depContainer',
						layout : 'column',
						items : [{
									xtype : 'label',
									text : '建议列席处室:',
									width : 140
								}, {
									xtype : 'textfield',
									name : 'archives.handlerUnames',
									id : 'handlerUnames',
									allowBlank : false,
									editable : false,
									readOnly : true,
									width : 520,
									style : 'margin-left:5px'
								}, {
									xtype : 'button',
									iconCls : 'btn-dep-sel',
									text : '选择部门',
									style : 'margin-left:5px',
									handler : function() {
										DepSelector3.getView(function(id, name) {
											Ext.getCmp('handlerUnames')
													.setValue(name);
											Ext.getCmp('handlerUids')
													.setValue(id);
										}, false).show();
									}
								}]
					},{
						xtype : 'textfield',
						fieldLabel : '提案处室（单位）',
						name : 'archives.issueDep',
						width:595,
						value:curUserInfo.deptName,
						allowBlank : false,
						readOnly: true
					},{
						fieldLabel:"各处室是否达成一致意见",
						labelWidth:130,
						xtype:'radiogroup',
						id:'shareRG',
						width:180,
						items:[{ 
							boxLabel: '否', 
							name: 'archives.isShared', 
							inputValue:'0',
							id:'shared0',
							checked:true,
							listeners : {
 								'check' : function(checkbox, checked){
									if(checked){//只有在点击时触发
										Ext.getCmp('ZRBGHYTDJForm.unPublicReasons').show();
									}   
								}
							}
						},{ 
							boxLabel: '是', 
							name: 'archives.isShared', 
							id:'shared1',
							inputValue:'1',
							listeners : {
 								'check' : function(checkbox, checked){
									if(checked){//只有在点击时触发
										Ext.getCmp('ZRBGHYTDJForm.unPublicReasons').hide();
									}   
								}
							}
						}
					]},{
						xtype : 'container',
						style : 'padding-left:0px;margin-bottom:4px;',
						id : 'ZRBGHYTDJForm.unPublicReasons',
						layout : 'column',
						items : [{
									xtype : 'label',
									text : '备注:',
									width : 140
								}, {
									xtype : 'textfield',
									name : 'archives.unPublicReasons',
									id : 'unPublicReasons',
									width : 600,
									style : 'margin-left:5px'
								}]
					},{
						xtype : "combo",
						fieldLabel : "处室领导",
						id : "ZRBGHYTDJForm.leaderName",
						hiddenName : 'archives.reviewUser',
						valueField : 'userId',
						displayField : 'fullname',
						editable : false,
						allowBlank : false,
						triggerAction : 'all',
						forceSelection : true,
						width : 595,
						store : new Ext.data.SimpleStore({
								url : __ctxPath
										+ '/system/searchByTwoRoleIdAppUser.do?role1Id='+roleMap.get('officeDeputyDirectorRoleID')+'&role2Id='+roleMap.get('officeDirectorRoleID'),
								autoLoad : true,
								fields : ['userId', 'fullname']
							}),
						listeners : {
							select : function(cbo, record, index) {
								Ext.getCmp('ZRBGHYTDJForm.leaderName')
												.setValue(cbo.getValue());
									}
								}
					},{
						name : 'archives.issuerId',
						value : curUserInfo.userId,
						xtype : 'hidden'
					},{
					    name : "archives.issuer",
						value : curUserInfo.fullname,
						xtype : 'hidden'
					},{
						name : "archives.orgDepId",
						value : curUserInfo.depId,
						xtype : 'hidden'
					},{
						name : 'archives.archivesId',
						value : this.archivesId,
						xtype : 'hidden'
					},{
						name : 'archives.status',
						xtype : 'hidden',
						value :  1
					},{
						name : 'archives.handlerUids',
						xtype : 'hidden',
						id : 'handlerUids'
					},{
						name : 'archives.fileCounts',
						xtype : 'hidden',
						value :  0
					},{
						name : 'archives.archType',
						id : 'archivesArchType',
						value : 7,
						xtype : 'hidden'
					},{
						name : 'archives.reviewUserName',
						id : 'ZRBGHYTDJForm.viceLeaders',
						xtype : 'hidden'
					},{
						xtype : "hidden",
						name : "archives.recDepNames",
						id : "ZRBGHYTDJForm.recDepNames"
					},{
						xtype : "hidden",
						name : "archives.recDepIds",
						value:defId,
						id : "ZRBGHYTDJForm.recDepIds"
					},{
						xtype : 'fieldset',
						style:'padding-top:6px',
						border : false,
						defaults : {
							anchor : '95%,95%'
						},
						items : [this.docGridPanel]
					},{
						layout : 'column',
						border : false,
						defaults : {
							layout : 'form',
							border : false
						},
						items : createFileUpdateCmp('fileAttachments', '公文附件')
					}]
			
		});
		Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
			'subject' : Ext.getCmp('SearchSubject').getValue(),
			'archType': Ext.getCmp('archivesArchType').getValue(),
			'docName' : Ext.getCmp('SearchDocNames').getValue(),
			'fileName': Ext.getCmp('SearchFileNames').getValue()
		}
		
		Ext.Ajax.request({
			url : __ctxPath + '/archive/getdefnameArchives.do',
			params : {
				'defId' : defId
			},
			method:'post',
			success : function(response, options) {
				var data=Ext.util.JSON.decode(response.responseText);
				Ext.getCmp('ZRBGHYTDJForm.recDepNames').setValue(data.name);
			}
		});
		
		if (archivesId) {
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ archivesId,
				waitMsg : '正在载入数据...',
				method:'post',
				success : function(form, action) {
					var fileAttach=new Array();
					var af=action.result.data['archives.archivesFiles'];
					var filePanel = Ext.getCmp('fileAttachments.personFilePanel');
				    var fileIds = Ext.getCmp("fileAttachments.fileIds");
				    Ext.getCmp('ZRBGHYTDJForm.leaderName').getStore().load({
				    	callback : function () {
				    		Ext.getCmp('ZRBGHYTDJForm.leaderName').setValue(Ext.decode(action.response.responseText).data[0].reviewUser);
				    		if(!Ext.getCmp('ZRBGHYTDJForm.leaderName').getValue()){
			    				Ext.getCmp('ZRBGHYTDJForm.leaderName').allowBlank = true;
				    		}
				    	},
				    	scope : Ext.getCmp('ZRBGHYTDJForm.leaderName').getStore(),
				    	add : false
				    });
				    if(Ext.decode(action.response.responseText).data[0].isShared == '1'){
				    	var shareRG = Ext.getCmp('shareRG');//一次被选中
						shareRG.setValue(1);
						Ext.getCmp('ZRBGHYTDJForm.unPublicReasons').hide();
				    }else{
				    	Ext.getCmp('ZRBGHYTDJForm.unPublicReasons').show();
				    }
					if(af!=null){
							for (var i = 0; i < af.length; i++) {
								if (fileIds.getValue() != '') {
									fileIds.setValue(fileIds.getValue() + ',');
								}
								fileIds.setValue(fileIds.getValue() + af[i].fileId);
								Ext.DomHelper
										.append(
												filePanel.body,
												'<span><a href="#" onclick="FileAttachDetail.show('
														+ af[i].fileId
														+ ')">'
														+ af[i].fileName
														+ '</a><img class="img-delete" src="'
														+ __ctxPath
														+ '/images/system/delete.gif" onclick="removeFile(this,\'fileAttachments.fileIds\','
														+ af[i].fileId
														+ ')"/>&nbsp;|&nbsp;</span>');
							  }
				    }
				},
				failure : function(form, action) {
				}
			});
		}
		
		
		ZRBGHYTDJPanel.superclass.constructor.call(this, {
			id : 'ZRBGHYTDJPanel',
			layout : 'form',
			items : [this.formPanel],
			modal : true,
			maximizable : true,
			autoHeight : true,
			width : 800,
			bodyStyle : "center",
			iconCls : 'menu-archive-draft',
			title : '主任办公会 ',
			buttonAlign : 'center',
			buttons : [{
				text : '启动流程',
				id : 'archivesReceiveButtonSave',
				iconCls : 'btn-save',
				scope : this,
				handler : this.save
			}]
		});
		var jsArr = [__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocHistoryWin.js',
				__ctxPath + '/js/archive/ArchiveTypeTempView.js',
				__ctxPath + '/js/archive/ArchTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateForm.js',
				__ctxPath + '/js/archive/OfficeTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateSelector.js',
				__ctxPath + '/js/archive/ArchivesUtil.js'];
		$ImportSimpleJs(jsArr, null);
	},
	save : function() {
		singleClick('archivesReceiveButtonSave');
		var reviewUserName = Ext.get("ZRBGHYTDJForm.leaderName").dom.value;
			Ext.getCmp('ZRBGHYTDJForm.viceLeaders')
					.setValue(reviewUserName);
		
		var docCount = this.store.getCount();
			var defId = this.defId;
			// 获取要提交的表单
			var formPanel = Ext.getCmp('ZRBGHYTDJForm');
			if (formPanel.getForm().isValid()) {				
				if(archivesId){
					Ext.Ajax.request({
						url : __ctxPath + '/archive/updateIsReceiveArchives.do',
						params : {
							'archivesId' : archivesId
						},
						method:'post',
						success : function(response, options) {
						}
					});
				}
				// 发文的文档附件
				var docParams = [];
				for (var i = 0; i < docCount; i++) {
					docParams.push(this.store.getAt(i).data);
				}
				var userId = Ext.getCmp('ZRBGHYTDJForm.leaderName').getValue();
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
				var param = {
					defId : defId,
					startFlow : true,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo : sendInfo,
					userId : curUserInfo.userId,
					flowAssignId : userId,
					backFlag : 0,
					currentStep : 1
				};

                var url1 = __ctxPath + '/archive/saveNormalArchives.do';
                var url2 = __ctxPath + '/archive/saveArchives.do';
                formPanel.getForm().submit({
                    method: 'POST',
                    waitMsg: '正在提交表单数据...',
                    url: archivesId ? url2 : url1,
                    params: {
                        'archives.isdraft': 0,
                        'archives.isArchive': 1,
                        docs: Ext.encode(docParams)
                    },
                    success: function (fp, action) {
                        var archivesId = action.result.archivesId;
                        var fileIds = Ext.getCmp('fileAttachments.fileIds').getValue();
                        if (fileIds == "") fileIds = 0;
                        Ext.apply(param, {
                        	fileIds: fileIds,
                            archivesId: archivesId
                        });
                        //启动流程
                        formPanel.getForm().submit({
                            url: __ctxPath + '/flow/saveProcessActivity.do',
                            waitMsg: '正在发起流程...',
                            timeout: '300',
                            method: 'post',
                            params: param,
                            success: function (response, options) {
                                var processInsId = options.result.runId;
                                Ext.Ajax.request({
                                    url: __ctxPath + '/archive/updateRunIdArchives.do',
                                    params: {
                                        'archivesId': archivesId,
                                        'runId': processInsId
                                    },
                                    method: 'post',
                                    success: function (response, options) {
                                        Ext.ux.Toast.msg('操作信息', '登记成功！');
										Ext.getCmp('centerTabPanel').remove(Ext
												.getCmp('ProcessRunStart'
														+ defId));
										refreshTaskPanelView();
										if(Ext.getCmp('OfficeMeetingTimesGrid') != null){
											Ext.getCmp('OfficeMeetingTimesGrid').getStore().reload();
										}
                                    }
                                });
                            }
                        });
                    },
                    failure: function (fp, action) {
                        Ext.MessageBox.show({
                            title: '操作信息',
                            msg: '提交表单出错，请联系管理员！',
                            buttons: Ext.MessageBox.OK,
                            icon: Ext.MessageBox.ERROR
                        });
                    }
                });
			}
	}
})
