GHGLJLHYSentArchiveDepCheck = Ext.extend(Ext.Panel, {
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		GHGLJLHYSentArchiveDepCheck.superclass.constructor.call(this, {
					id:'GHGLJLDHQGHGLJLHYSentArchiveDepCheck',
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					modal : true,
					height : 620,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : this.buttons
				});
	},
	initUIComponents : function() {
		this.displayPanel = new Ext.Panel({
			autoScroll : true,
			autoHeight : true,
			border : false,
			autoLoad : {
				url : __ctxPath
						+ '/pages/ganghanglianheSentFiles/SentArchiveDetail.jsp?archiveId=${archivesId}&fileIds=${fileIds}',
				nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			id:'GHGLJLHYSentArchiveDepCheckForm',
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			url : __ctxPath + '/archive/saveDepLeaderRead.do',
			defaults : {
				anchor : '98%,98%'
			},
			items : [new ArchivesUtil({
						panelId : 'GHGLJLDHQGHGLJLHYSentArchiveDepCheck',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),
{
						xtype : 'container',
						layout : 'column',
						style:'padding-top:10px;',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '审核意见',
									width : 105
								}, {
									name : 'leaderRead.leaderOpinion',
									xtype : 'textarea',
									width : 440
								},{
									xtype : 'button',
									iconCls : 'menu-flowWait',
									text : '选择常用批示语',
									handler : function() {
										OdCommentsSelector.getView(
											function(id, name) {
												Ext.getCmp('GHGLJLHYSentArchiveDepCheckForm')
													.getCmpByName('leaderRead.leaderOpinion')
													.setValue(name);
											}, true).show();
										}
								}]
					
					}]
		});
		this.buttons = [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end];
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
		
		if (formPanel.getForm().isValid()) {
			var sendMail = msgPanel.getCmpByName('sendMail')
					.getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg')
					.getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			var params = {
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					ccUserIds : ccPanel.getCmpByName('ccIds').getValue(),
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo:sendInfo,
					depLeaderOption : '同意',
					flowAssignId : '${officeExerId}',
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
				};
				
			//alert(Ext.util.JSON.encode(params));
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextProcessActivity.do",
				method : 'post',
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '成功保存！');
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
				},
				failure : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
				}
			});
		}
	}// end of save
})