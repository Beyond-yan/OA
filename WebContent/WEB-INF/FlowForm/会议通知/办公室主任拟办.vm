HYTZBGSZRNBView = Ext.extend(Ext.Panel, {
	setTaskId : function(tId) {
		this.taskId = tId;
	},
	getTaskId : function() {
		return this.taskId;
	},
	formPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.init();
		msgPanel.hide();
		HYTZBGSZRNBView.superclass.constructor.call(this, {
					id : 'HYTZBGSZRNBView',
					defaults : {
						border : false,
						autoScroll : true
					},
					width : 700,
					height : 530,
					autoHeight : true,
					buttons : [
								#set ($count=0)
								#foreach ($v in $nextTrans)
									#if($count>0)
								,
									#end
									new Ext.Button({
									   iconCls:'btn-transition',
									   text:'确认',
									   id:'hytzsaveBtn001',
									   handler:this.onSave.createCallback(this.formPanel,this,'${v.name}','${v.source}')
									}),
									new Ext.Button({
									   iconCls:'btn-changeTask',
									   text:'退回',
									   id:'hytzsaveBtn002',
									   handler:this.backsetp.createCallback(this.formPanel,this,'${v.source}')
									})
									#set ($count=$count+1)
								#end
								],
					buttonAlign : 'center',
					items : [this.detailPanel, this.formPanel]
				});
	},
	backsetp:function(formPanel,panel,activityName){
		singleClick('hytzsaveBtn002');
		 Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : panel.taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				var prevFlowAssignId =  processForm[0].creatorId; 
				var docParams=Ext.getCmp("HYTZBGSZRNBFormView.reFileId");
				if("收文登记" == prevDestName){
					prevSignalName = 'to 重新登记';
					prevFlowAssignId ='${userId}';
					prevDestName = '重新登记';
					result='呈重新登记';
				}
				formPanel.getForm().submit({
						url:__ctxPath+ "/flow/nextForSyncProcessActivity.do",
						method:'post',
						waitMsg:'正在提交处理，请稍等',
						scope:this,
						params:{
								taskId : panel.taskId,
								signalName : prevSignalName,
								activityName : activityName,
								comments : formPanel.getCmpByName('leaderOpinion').getValue(),
								destName : prevDestName,
								status : '退回',
								flowAssignId : prevFlowAssignId,
								zhurResult : 2
						},
						success : function(fp, action) {
								var jsonResult = action.result;
								if (jsonResult) {
	                                if (jsonResult && jsonResult.success == "true") {
	                                    Ext.ux.Toast.msg("操作信息", "退回上一步成功！");
	                                } else {
		                            	var resultMsg = "信息保存出错，请联系管理员！";
		                                var resuIcon = Ext.MessageBox.ERROR;
		                                if (jsonResult.message && jsonResult.message != null) {
		                                	resultMsg = jsonResult.message;
		                                    if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
		                                    	resuIcon= Ext.MessageBox.WARNING;
		                                    }
		                                }
		                                Ext.MessageBox.show({
		                                        title : '操作信息',
		                                        msg : resultMsg,
		                                        buttons : Ext.MessageBox.OK,
		                                        icon : resuIcon
		                                });
	                            	}
	                            }
	                            // --无后续的错误友好提示结束
								AppUtil.removeTab('ProcessForm' + panel.taskId);
								 refreshTaskPanelView();
								 if(Ext.getCmp('ArchMeetingGrid')){
									Ext.getCmp('ArchMeetingGrid').getStore().reload();
								}
						},
						failure : function(fp, action) {
							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
						}
					});
			},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
	},
	//保存方法
	onSave : function(formPanel, panel, signalName, activityName) {
		singleClick('hytzsaveBtn001');
		var defId = '${defId}';
		var comments=formPanel.getCmpByName('leaderOpinion').getValue();
		if (formPanel.getForm().isValid()) {
			addMsgFunction(true,taskId);
			formPanel.getForm().submit({
				method : 'POST',
				url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
				params : {
					taskId : taskId,
					signalName : signalName,
					activityName : activityName,
					comments: comments,
					zhurResult : 1,
					zhurId : curUserInfo.userId
				},
				waitMsg : '正在提交数据...',
				success : function(fp, action) {
					Ext.MessageBox.hide();
					var jsonResult = action.result;
					if (jsonResult && jsonResult.success == "true") {
						Ext.ux.Toast.msg("操作信息", "保存成功！");
					} else {
						var resultMsg = "信息保存出错，请联系管理员！";
						var resuIcon = Ext.MessageBox.ERROR;
						if (jsonResult.message && jsonResult.message != null) {
							resultMsg = jsonResult.message;
							if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
								resuIcon= Ext.MessageBox.WARNING;
							}
						}
						Ext.MessageBox.show({
							title : '操作信息',
							msg : resultMsg,
							buttons : Ext.MessageBox.OK,
							icon : resuIcon
						});
					}
					AppUtil.removeTab('ProcessForm' + taskId);
					refreshTaskPanelView();
					if(Ext.getCmp('ArchMeetingGrid')){
						Ext.getCmp('ArchMeetingGrid').getStore().reload();
					}
				},
				failure : function(fp, action) {
					Ext.MessageBox.hide();
					Ext.MessageBox.show({
						title : '操作信息',
						msg : '信息保存出错，请联系管理员！',
						buttons : Ext.MessageBox.OK,
						icon : Ext.MessageBox.ERROR
					});
				}
			});
		}
	},

	/**
	 * init the components
	 */
	init : function() {
		// 显示公文详细信息
		this.detailPanel = new Ext.Panel({
					// title:'流程审批信息',
					autoHeight : true,
					columnWidth : 1,
					id:'XZBGSZRNBArchiveReceiveDetailPanel',
					autoScroll : true,
					autoLoad : {
						url : __ctxPath+'/pages/flowPath/meetingFlow.jsp?noticeId=${noticeId}&defId=${defId}&detailId=XZBGSZRNBArchiveReceiveDetailPanel',
						nocache : true
					}
				});
		
		// 初始化表单
		this.formPanel = new Ext.FormPanel({
			columnWidth : 1,
			layout : 'form',
			id : 'HYTZBGSZRNBFormView',
			autoHeight : true,
			style : 'padding:6px 6px 6px 1%',
			items : [{
					   layout:'column',
					   style:'padding:6px 0px 0px 0px',
					   border:false,
					   items:[{
					   		layout:'form',
					   		border:false,
					   		items:[{	
				   					fieldLabel : '拟办意见',
				   					id:'HYTZBGSZRNBFormView.leaderOpinion',
									name : 'leaderOpinion',
									autoScroll:true,
									maxLength:500,
									height:40,
									xtype:'textarea',
									width:448
									}]
					     	 },{
						   		layout:'form',
						   		style:'padding-top:10px;padding-left:5px;',
						   		border:false,
						   		items:[{
										xtype : 'button',
										text : '常用批示语',
										iconCls : 'menu-new-document',
										handler : function() {
											OdCommentsSelector.getView(
												function(id, name) {
													Ext.getCmp('HYTZBGSZRNBFormView.leaderOpinion')
													.setValue(name);
													}, true).show();
											}
										}]
					  		}]
					},{
						id : 'HYTZBGSZRNBFormView.reFileId',
						xtype : 'hidden'
					}, {
						xtype:'hidden',
						id:'archivesMeetingForm.snId'
					}, {
						name : 'archives.snConfigId',
						id : 'archivesMeetingForm.snConfigId',
						xtype : 'hidden'
					}]
		});
	}// end of init
})