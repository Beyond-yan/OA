CarApplyStartForm = Ext.extend(Ext.Panel, {
	// 构造函数 - 开始
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		// 必须先初始化组件

		this.initUIComponents();
		CarApplyStartForm.superclass.constructor.call(this, {
					id : 'CarApplyStartFormWin',
					layout : 'form',
					items : [this.formPanel],
					modal : true,
					height : 630,
					width : 800,
					maximizable : true,
					title : '录入车辆申请表单',
					buttonAlign : 'center',
					buttons : [{
								text : '保存并启动流程',
								iconCls : 'btn-save',
								scope : this,
								handler : this.save
							}]
				});
	},// 构造函数 - 结束

	// 初始化界面控件 - 开始
	initUIComponents : function() {
		var comboStore = new Ext.data.SimpleStore({
					url : __ctxPath + '/system/getLeadersAppUser.do',
					autoLoad : true,
					fields : ['flowAssignId', 'flowAssignName']
				});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			id : 'CarApplyStartForm',
			frame : false,
			border : true,
			defaults : {
				width : 400,
				anchor : '98%,98%'
			},
			bodyStyle : 'padding-top:5px;padding-left:5px;',
			formId : 'CarApplyStartFormId',
			defaultType : 'textfield',
			items : [{
						name : 'carApply.applyId',
						id : 'applyId',
						xtype : 'hidden',
						value : this.applyId == null ? '' : this.applyId
					}, {
						name : 'appUserId',
						id : 'appUserId',
						value:curUserInfo.userId,
						xtype : 'hidden'
					}, {
						name : 'carApply.userId',
						id : 'userId',
						value:curUserInfo.userId,
						xtype : 'hidden'
					}, {
						name : 'departmentId',
						id : 'departmentId',
						xtype : 'hidden'
					}, {
						xtype : 'container',
						style : 'padding-left:0px;margin-bottom:4px;',
						id : 'depContainer',
						layout : 'column',
						items : [{
									xtype : 'label',
									style : 'padding-left:0px;',
									text : '用车部门:',
									width : 105
								}, {
									xtype : 'textfield',
									name : 'carApply.department',
									id : 'department',
									value : curUserInfo.depName,
									allowBlank : false,
									editable : false,
									readOnly : true,
									width : 320
								}, {
									xtype : 'button',
									iconCls : 'btn-dep-sel',
									text : '选择部门',
									handler : function() {
										DepSelector3.getView(function(id, name) {
											Ext.getCmp('department')
													.setValue(name);
											Ext.getCmp('departmentId')
													.setValue(id);
										}, true).show();
									}
								}, {
									xtype : 'button',
									text : '清除记录',
									iconCls : 'reset',
									handler : function() {
										Ext.getCmp('department').setValue('');
										Ext.getCmp('departmentId').setValue('');
									}
								}]
					}, {
						xtype : 'container',
						style : 'padding-left:0px;margin-bottom:4px;',
						layout : 'column',
						items : [{
									xtype : 'label',
									style : 'padding-left:0px;',
									text : '用车人:',
									width : 105
								}, {
									xtype : 'textfield',
									name : 'carApply.userFullname',
									id : 'userFullname',
									value : curUserInfo.fullname,
									allowBlank : false,
									editable : false,
									readOnly : true,
									width : 320
								}, {
									xtype : 'button',
									iconCls : 'btn-user-sel',
									text : '选择人员',
									handler : function() {
											var depId =curUserInfo.depId;											
											DeptOfUserSelector.getView(function(id,name) {
																Ext.getCmp('userFullname').setValue(name);																
															},false,null,depId).show();
											
										}
								}, {
									xtype : 'button',
									text : '清除记录',
									iconCls : 'reset',
									handler : function() {
										Ext.getCmp('userFullname').setValue('');
									}
								}]
					}, {
						xtype : 'container',
						layout : 'column',
						style : 'padding-left:0px;margin-bottom:4px;',
						items : [{
									xtype : 'label',
									style : 'padding-left:0px;',
									text : '申请人:',
									width : 105
								}, {
									xtype : 'textfield',
									name : 'carApply.proposer',
									id : 'proposer',
									editable : false,
									allowBlank : false,
									readOnly : true,
									value : curUserInfo.fullname,
									width : 320
								}/*, {
									xtype : 'button',
									iconCls : 'btn-user-sel',
									text : '选择人员',
									handler : function() {
										UserSelector.getView(
												function(id, name) {
													Ext.getCmp('proposer')
															.setValue(name);
													Ext.getCmp('userId')
															.setValue(id);
												}, true, true).show();
									}
								}, {
									xtype : 'button',
									text : '清除记录',
									iconCls : 'reset',
									handler : function() {
										Ext.getCmp('proposer').setValue('');
										Ext.getCmp('userId').setValue('');
									}
								}*/]
					}, {
						fieldLabel : '是否需要司机',
						hiddenName : 'carApply.ishavecardriver',
						id : 'ishavecardriver',
						xtype : 'combo',
						mode : 'local',
						allowBlank : false,
						editable : false,
						triggerAction : 'all',
						value : '1',
						store : [['1', '需要'], ['2', '不需要']]
					}, {
						fieldLabel : '是否长期有效',
						hiddenName : 'carApply.iseffective',
						id : 'iseffective',
						xtype : 'combo',
						mode : 'local',
						allowBlank : false,
						editable : false,
						triggerAction : 'all',
						value : '1',
						store : [['1', '否'], ['2', '是']],
						listeners : {
							scope : this,
							'select' : function(combo, record, index) {
								if (index == '0') {
									Ext.getCmp('onDutyTime2').hide();
									Ext.getCmp('offDutyTime2').hide();
								}
								if (index == '1') {
									Ext.getCmp('onDutyTime2').show();
									Ext.getCmp('offDutyTime2').show();
								}

							}
						}
					}, {
						fieldLabel : '原因',
						name : 'carApply.reason',
						id : 'reason',
						allowBlank : false,
						xtype : 'textarea'
					}, {
						fieldLabel : '出发时间',
						name : 'carApply.startTime',
						id : 'startTime',
						xtype : 'datetimefield',
						format : 'Y-m-d H:i:s',
						allowBlank : false,
						editable : false
					}, {
						xtype : 'container',
						style : 'padding-left:0px;margin-bottom:4px;',
						id : 'onDutyTime2',
						layout : 'column',
						items : [{
									xtype : 'label',
									style : 'padding-left:0px;',
									text : '开始时间',
									width : 105
								}, {
									xtype : 'timefield',
									allowBlank : false,
									name : 'carApply.onDutyTime',
									id : 'onDutyTime',
									format : 'H:i',
									width : 600
								}]
						// G标示为24时计时法]

				}	, {
						fieldLabel : '返回时间',
						name : 'carApply.endTime',
						id : 'endTime',
						allowBlank : false,
						editable : false,
						xtype : 'datetimefield',
						format : 'Y-m-d H:i:s'
					}, {
						xtype : 'container',
						style : 'padding-left:0px;margin-bottom:5px;',
						id : 'offDutyTime2',
						layout : 'column',
						items : [{
									xtype : 'label',
									style : 'padding-left:0px;',
									text : '截止时间',
									width : 105
								}, {
									xtype : 'timefield',
									// style : 'padding-left:0px;',
									allowBlank : false,
									name : 'carApply.offDutyTime',
									id : 'offDutyTime',
									format : 'H:i',
									width : 600
								}]
						// G标示为24时计时法]
					//								
				}

					, {
						fieldLabel : '出发地点',
						name : 'carApply.fromSite',
						id : 'fromSite'
					}, {
						fieldLabel : '到达地点',
						name : 'carApply.toSite',
						id : 'toSite'
					}, {
						fieldLabel : '承载人数',
						name : 'carApply.peopleAmount',
						id : 'peopleAmount',
						allowBlank : false,
						xtype : 'numberfield'
					}, {
						fieldLabel : '备注',
						name : 'carApply.notes',
						id : 'notes',
						xtype : 'textarea'
					}, {
						name : 'departflowAssignStartId',
						id : 'departflowAssignStartId',
						xtype : 'hidden'
					}, {
						xtype : "combo",
						name : "departflowAssignStartName",
						id : "departflowAssignStartName",
						fieldLabel : "指定部门审核人",
						valueField : 'flowAssignId',
						displayField : 'flowAssignName',
						mode : 'local',
						editable : false,
						typeAhead : true,
						triggerAction : 'all',
						forceSelection : true,
						width : 240,
						allowBlank : false,
						store : comboStore,
						listeners : {
							select : function(cbo, record, index) {
								Ext.getCmp('departflowAssignStartId')
										.setValue(cbo.getValue());
							}
						}
					}

			]
		});// end of the formPanel
		var iseffective = Ext.getCmp('iseffective').getValue();
		if (iseffective == '1') {
			Ext.getCmp('onDutyTime2').hide();
			Ext.getCmp('offDutyTime2').hide();
			Ext.getCmp('offDutyTime').allowBlank = true;
			Ext.getCmp('onDutyTime').allowBlank = true;
		}

/*		if (this.applyId == null) {
			Ext.getCmp('userFullname').setValue('');
			Ext.getCmp('proposer').setValue('');
			Ext.getCmp('userId').setValue('');
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/system/getAppUser.do',
				waitMsg : '正在载入数据...',
				success : function(form, action) {
					Ext.getCmp('appUserId')
							.setValue(action.result.data[0].userId);
					Ext.getCmp('department')
							.setValue(action.result.data[0].department.depName);
					Ext.getCmp('departmentId')
							.setValue(action.result.data[0].department.depId);

				}
			})
		}*/
		if (this.applyId != null && this.applyId != 'undefined') {
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/admin/getCarApply.do?applyId='
						+ this.applyId,
				waitMsg : '正在载入数据...',
				success : function(form, action) {

					var endTime = action.result.data.endTime;
					if (endTime != null && endTime != '') {
						Ext.getCmp('endTime')
								.setValue(new Date(getDateFromFormat(endTime,
														"yyyy-MM-dd")));
					}
				},
				failure : function(form, action) {
					Ext.ux.Toast.msg('编辑', '载入失败');
				}
			});
		};// end of the load formPanel

	},// 初始化界面控件 - 结束

	// 保存并启动申请流程 - 开始
	save : function() {
		var defId = this.defId;

		// var startTime =
		// Ext.util.Format.date(Ext.getCmp("startTime").getValue(),'Y-m-d');
		// var onDutyTime = Ext.getCmp("onDutyTime").getValue();
		// if(onDutyTime==null){
		//			
		// }
		// var startDateTimeString = startTime.toString() + "
		// "+onDutyTime.toString()+":00";
		// var d1 = startDateTimeString.replace(/\-/g,'\/');
		// alert(d1);
		// var stratDate =Ext.util.Format.date(d1,'Y-m-d H:i:s');
		//		
		// var endTime =
		// Ext.util.Format.date(Ext.getCmp("endTime").getValue(),'Y-m-d');
		// var offDutyTime = Ext.getCmp("offDutyTime").getValue();
		// var endDateString = endTime.toString() + "
		// "+offDutyTime.toString()+":00";
		// var d2 = endDateString.replace(/\-/g,'\/');
		// alert(d2);
		// var endDate =Ext.util.Format.date(d2,'Y-m-d H:i:s');
		//	
		// if(stratDate>=endDate){
		// Ext.Msg.alert("注意", "开始时间应小于截止时间！");
		// return;
		// }

		var fp = Ext.getCmp('CarApplyStartForm');
		var applyId = null;
		if (fp.getForm().isValid()) {
			fp.getForm().submit({
				url : __ctxPath + '/admin/saveCarApply.do',
				method : 'post',
				waitMsg : '正在提交数据...',
				success : function(fp, action) {
					var rollFileObj = Ext.decode(action.response.responseText);
					applyId = rollFileObj.applyId;

					var department = Ext.getCmp('department').getValue();
					var userFullname = Ext.getCmp('userFullname').getValue();
					var proposer = Ext.getCmp('proposer').getValue();
					var reason = Ext.getCmp('reason').getValue();
					var startDate = Ext.getCmp('startTime').getValue();
					var startTime = Ext.util.Format.date(startDate,
							'Y-m-d H:i:s');
					var onDutyTime = Ext.getCmp('onDutyTime').getValue();

					var offDutyTime = Ext.getCmp('offDutyTime').getValue();
					var endDate = Ext.getCmp('endTime').getValue();

					var endTime = Ext.util.Format.date(endDate, 'Y-m-d H:i:s');

					var fromSite = Ext.getCmp('fromSite').getValue();
					var toSite = Ext.getCmp('toSite').getValue();
					var notes = Ext.getCmp('notes').getValue();
					var ishavecardriver = Ext.getCmp('ishavecardriver')
							.getValue();
					var iseffective = Ext.getCmp('iseffective').getValue();
					var userId = Ext.getCmp('appUserId').getValue();
					var flowAssignId = Ext.getCmp('departflowAssignStartId')
							.getValue();
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					Ext.ux.Toast.msg('操作信息', '成功保存信息！');
					if (fp != null) {
						var myMask = new Ext.LoadMask(Ext.getBody(), {
							msg : '正在提交处理，请稍等！',
							removeMask : true
								// 完成后移除
							});
						myMask.show();
						Ext.Ajax.request({
							url : __ctxPath + '/flow/saveProcessActivity.do',
							params : {
								defId : defId,
								department : department,
								proposer : proposer,
								userFullname : userFullname,
								reason : reason,
								startTime : startTime,
								onDutyTime : onDutyTime,
								endTime : endTime,
								offDutyTime : offDutyTime,
								fromSite : fromSite,
								toSite : toSite,
								notes : notes,
								applyId : applyId,
								ishavecardriver : ishavecardriver,
								iseffective : iseffective,
								userId : userId,
								sendMail : sendMail,
								sendMsg : sendMsg,
								flowAssignId : flowAssignId,
								// 启动工作流
								// rollFileId:rollFileId,
								startFlow : true
							},
							success : function(resp, options) {
								myMask.hide();
								var proJson = resp.responseText;
								proJson = eval("(" + proJson + ")");
								var processInsId = proJson.runId;
								// alert(processInsId);
								// 提交流程ID
								Ext.Ajax.request({
									url : __ctxPath + '/admin/saveCarApply.do',
									params : {
										'carApply.applyId' : applyId,
										'carApply.processRun.runId' : processInsId
									},
									success : function(response, options) {
									}
								});
								Ext.ux.Toast.msg('操作信息', '成功启动车辆流程申请');
								var tabPanel = Ext.getCmp('centerTabPanel');

								tabPanel.remove(Ext.getCmp('ProcessRunStart'
										+ defId));
								/*// 刷新列表窗口
								if (Ext.getCmp('TsItserviceApplyGrid') != null) {
									Ext.getCmp('TsItserviceApplyGrid')
											.getStore().reload();
								}*/
								// 刷新列表窗口
								if (Ext.getCmp('CarApplyGrid') != null) {
									Ext.getCmp('CarApplyGrid').getStore()
											.reload();
								}
								refreshTaskPanelView();

							}
						});
					}
				},
				failure : function(fp, action) {
					var resultResp = Ext.util.JSON
							.decode(action.response.responseText);
					if (resultResp.msg == 'validationError') {
						Ext.MessageBox.show({
									title : '操作信息',
									msg : '开始时间不能大于结束时间！',
									buttons : Ext.MessageBox.OK,
									icon : 'ext-mb-error'
								});
					} else {
						Ext.MessageBox.show({
									title : '操作信息',
									msg : '信息保存出错，请联系管理员！',
									buttons : Ext.MessageBox.OK,
									icon : 'ext-mb-error'
								});
					}

					Ext.getCmp('CarApplyStartFormWin').close();
				}
			});
		}
	}// 保存并启动申请流程 - 结束
})