RemoteSentArchiveStart = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		RemoteSentArchiveStart.superclass.constructor.call(this, {
					id : 'RemoteSentArchiveStart',
					title : '远程发文处理笺',
					layout : 'form',
					modal : true,
					width : 900,
					iconCls : 'menu-archive-draft',
					maximizable : true,
					items : [this.formPanel],
					buttonAlign : 'center',
					buttons : [{
								text : '启动流程',
								iconCls : 'btn-save',
								scope : this,
								handler : this.save
							}, {
								text : '保存草稿',
								iconCls : 'btn-beready-save',
								scope : this,
								handler : this.savedraft
							}]
				});
	},
	save : function() {
		Ext.getCmp('RemoteSentArchiveStart.sources').allowBlank = false;//行文方向
		Ext.getCmp('RemoteSentArchiveStart.flowAssignName').allowBlank = false;//核稿
		Ext.getCmp('RemoteSentArchiveStart.sendTo').allowBlank = false;//主送单位
		Ext.getCmp('RemoteSentArchiveStart.isStandard').allowBlank = false;//是否规范性文件
		Ext.getCmp('RemoteSentArchiveStart.public').allowBlank = false;//是否公开到外网
//		Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').allowBlank = false;//不公开原因
		Ext.getCmp('RemoteSentArchiveStart.issueDep').allowBlank = false;//发文单位
		Ext.getCmp('RemoteSentArchiveStart.archivesType').allowBlank = false;//文种
		Ext.getCmp('RemoteSentArchiveStart.subject').allowBlank = false;//标题
		
		var defId = this.defId;
		/*if (this.store.getCount() == 0) {// 公文正文附件为空
			Ext.ux.Toast.msg('操作信息', '请添加公文正文附件!');
			return false;
		}*/
		if (this.formPanel.getForm().isValid()) {
			var formPanel = this.formPanel;

			var docParams = [];
			for (var i = 0, cnt = this.store.getCount(); i < cnt; i++) {
				docParams.push(this.store.getAt(i).data);
			}
			var url1 = __ctxPath + '/archive/saveNormalArchives.do';
			var url2 = __ctxPath + '/archive/saveArchives.do';
			formPanel.getForm().submit({
				url : archivesId ? url2 : url1,
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					'archives.isdraft' : 0,
					docs : Ext.encode(docParams)
				},
				success : function(fp, action) {
					var archivesId = action.result.archivesId;
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					var fileIds = Ext.getCmp('RemoteSentFiles.fileIds').getValue();
					var isReserveNo=formPanel.getCmpByName('archives.isReserveNo').getGroupValue();
					var flowAssignId = Ext.getCmp('RemoteSentArchiveStart.flowAssignId').getValue();
					formPanel.getForm().submit({
						url : __ctxPath + '/flow/saveProcessActivity.do',
						method : 'post',
						waitMsg : '正在发起流程...',
						params : {
							defId : defId,
							sendUserId:curUserInfo.userId,
							isReserveNo: isReserveNo,
							sendMail : sendMail,
							NGUserId:curUserInfo.depId,
							sendMsg : sendMsg,
							sendInfo : sendInfo,
							archivesId : archivesId,
							flowAssignId : flowAssignId,
							fileIds : fileIds?fileIds:'_',
							startFlow : true,
							comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
						},
						success : function(response, options) {
							var processInsId = options.result.runId;
							Ext.Ajax.request({
									url : __ctxPath + '/archive/updateRunIdArchives.do',
									params : {
										'archivesId' : archivesId,
										'runId' : processInsId
									},
									method:'post',
									success : function(response, options) {
										Ext.ux.Toast.msg('操作信息', '拟稿成功！');
										Ext.getCmp('centerTabPanel').remove(Ext
												.getCmp('ProcessRunStart' + defId));
										refreshTaskPanelView();
										var ArchivesGrid = Ext.getCmp('ArchivesGrid');
										if (ArchivesGrid != null) {
											ArchivesGrid.getStore().reload();
										}
									}
								});
						}
					});
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
				}
			});
		}

	},
	
	savedraft : function() {
		Ext.getCmp('RemoteSentArchiveStart.sources').allowBlank = true;//行文方向
		Ext.getCmp('RemoteSentArchiveStart.flowAssignName').allowBlank = true;//核稿
		Ext.getCmp('RemoteSentArchiveStart.sendTo').allowBlank = true;//主送单位
		Ext.getCmp('RemoteSentArchiveStart.isStandard').allowBlank = true;//是否规范性文件
		Ext.getCmp('RemoteSentArchiveStart.public').allowBlank = true;//是否公开到外网
//		Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').allowBlank = true;//不公开原因
		Ext.getCmp('RemoteSentArchiveStart.issueDep').allowBlank = true;//发文单位
		Ext.getCmp('RemoteSentArchiveStart.archivesType').allowBlank = true;//文种
		Ext.getCmp('RemoteSentArchiveStart.subject').allowBlank = true;//标题
		Ext.getCmp('RemoteSentArchiveStart.radiogroup').allowBlank = true;//是否使用预约编号
		
		var defId = this.defId;

		/*
		 * if (this.store.getCount() == 0) { Ext.ux.Toast.msg('操作信息',
		 * '请添加公文正文!'); return false; }
		 */
		if (this.formPanel.getForm().isValid()) {
			var formPanel = this.formPanel;
			/*
			 * alert(formPanel.getCmpByName('archives.reviewUser').getValue());
			 * return false;
			 */
			var flowAssignId = Ext.getCmp('RemoteSentArchiveStart.flowAssignId').getValue();
			var docParams = [];
			for (var i = 0, cnt = this.store.getCount(); i < cnt; i++) {
				docParams.push(this.store.getAt(i).data);
			}
			var url1 = __ctxPath + '/archive/saveNormalArchives.do';
			var url2 = __ctxPath + '/archive/saveArchives.do';
			formPanel.getForm().submit({
				url : archivesId ? url2 : url1,
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					'archives.isdraft' : 1,
					docs : Ext.encode(docParams)
				},
				success : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '成功保存！');
					var ArchivesGrid = Ext.getCmp('ArchivesGrid');
									if (ArchivesGrid != null) {
										ArchivesGrid.getStore().reload();
									}
					Ext.getCmp('centerTabPanel').remove(Ext
							.getCmp('ProcessRunStart' + defId));
					refreshTaskPanelView();
					
					},
				failure : function(fp, action) {
					Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
				}
			});
		}

	},
	
	initUIComponents : function() {
		
		this.defId=defId;
				Ext.Ajax.request({
					url : __ctxPath + '/archive/getdefnameArchives.do',
					params : {
						'defId' : defId
					},
					method : 'post',
					success : function(response, options) {
						var data = Ext.util.JSON.decode(response.responseText);
						Ext.getCmp('RemoteSentArchiveStart.recDepNames')
								.setValue(data.name);
					}
				});
		this.archivesId = archivesId;
		
		// 初始化附件文档
		this.docGridPanel = new ArchivesUtil({
			panelId :'RemoteSentArchiveStart',
			isStart : true,
			archivesId : this.archivesId
		}).getGridPanelWithFullTools();
		var fp =this.formPanel = new Ext.FormPanel({
			url : __ctxPath + '/archive/saveNormalArchives.do',
			frame : false,
			border : false,
			layout : 'form',
			labelWidth : 80,
			width : 900,
			padding : '5px',
			reader : new Ext.data.JsonReader({
						root : 'data'
					}, [{
								name : 'archives.archivesId',
								mapping : 'archivesId'
							}, {
								name : 'archives.issueDep',
								mapping : 'issueDep'
							}, {
								name : 'archives.subject',
								mapping : 'subject'
							}, {
								name : 'archives.isReserveNo',
								mapping : 'isReserveNo'
							}, {
								name : 'archives.fileCounts',
								mapping : 'fileCounts'
							}, {
								name : 'archives.privacyLevel',
								mapping : 'privacyLevel'
							}, {
								name : 'archives.urgentLevel',
								mapping : 'urgentLevel'
							}, {
								name : 'archives.issuer',
								mapping : 'issuer'
							}, {
								name : 'archives.sources',
								mapping : 'sources'
							}, {
								name : 'archives.isPublic',
								mapping : 'isPublic'
							}, {
								name : 'archives.reviewUser',
								mapping : 'reviewUser'
							}, {
								name : 'archives.reviewUserName',
								mapping : 'reviewUserName'
							}, {
								name : 'archives.sendTo',
								mapping : 'sendTo'
							}, {
								name : 'archives.ccTo',
								mapping : 'ccTo'
							}, {
								name : 'archives.isStandard',
								mapping : 'isStandard'
							}, {
								name : 'archives.unPublicReasons',
								mapping : 'unPublicReasons'
							}]),
			items : [{
				border : false,
				layout : 'column',
				defaults : {
					border : false,
					columnWidth : .33,
					layout : 'form',
					defaults : {
						width : 200,
						xtype : 'textfield',
						allowBlank : false
					}
				},
				items : [{
					items : [{
							name : 'archives.archivesId',
							xtype : 'hidden'
						}, {
							xtype : "hidden",
							name : "archives.recDepIds",
							value : defId,
							id : "RemoteSentArchiveStart.recDepIds"
						}, {
							xtype : "hidden",
							name : "archives.recDepNames",
							id : "RemoteSentArchiveStart.recDepNames"
						},{
								fieldLabel : "拟稿部门",
								value : curUserInfo.depName
							}, {
								xtype : 'combo',
								fieldLabel : "发文单位",
								name : 'archives.issueDep',
								id : 'RemoteSentArchiveStart.issueDep',
								triggerAction : 'all',
								lazyRender : true,
								editable : false,
								fieldLabel : '发文单位',
								store : ['重庆市交通委员会',
										'中共重庆市交通委员会', '中共重庆市交通委员会机关党委',
										'中共重庆市交通纪律检查委员会', '共青团重庆市交通委员会',
										'重庆市交通委员会直属机关工会']
							}, {
								xtype : 'combo',
								fieldLabel : '文种',
								hiddenName : "archives.archivesType.typeId",
								id : 'RemoteSentArchiveStart.archivesType',
								valueField : 'typeId',
								displayField : 'typeName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/archive/comboArchivesType.do',
											autoLoad : true,
											fields : ['typeId', 'typeName']
										})
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '缓急',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								name : 'archives.urgentLevel',
								emptyText : '急缓程度',
								store : ['特急', '急件', '加急', '平急']
							}, {
								fieldLabel : '拟稿',
								name : "archives.issuer",
								readOnly : true,
								value : curUserInfo.fullname
							}, {
								xtype : 'combo',
								name : 'archives.sources',
								id:'RemoteSentArchiveStart.sources',
								triggerAction : 'all',
								editable : false,
								fieldLabel : '行文方向',
								store : ['上行文', '平行文', '下行文']
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '密级',
								triggerAction : 'all',
								allowBlank : true,
								editable : false,
								name : 'archives.privacyLevel',
								emptyText : '密级程度',
								store : ['一般', '秘密', '机密', '绝密'],
								listeners: {
									'select':function(combo){
										if(combo.getValue()!='一般'){
											Ext.getCmp('RemoteSentArchiveStart.public').disable();
											Ext.getCmp('RemoteSentArchiveStart.public').allowBlank=true;
											Ext.getCmp('RemoteSentArchiveStart.public').setValue(null);
											Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').allowBlank=true,
											Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').setValue(null);
											Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').disable();
											//Ext.getCmp('RemoteSentArchiveStart.fileCounts').show();
											//Ext.getCmp('RemoteSentArchiveStart.fileCounts').el.parent().parent().show();
											//Ext.getCmp('RemoteSentArchiveStart.fileCounts').allowBlank = false;
										}else{
											Ext.getCmp('RemoteSentArchiveStart.public').enable();
											Ext.getCmp('RemoteSentArchiveStart.public').allowBlank=false;
											Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').allowBlank=false,
											Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').enable();
											//Ext.getCmp('RemoteSentArchiveStart.fileCounts').hide();
											//Ext.getCmp('RemoteSentArchiveStart.fileCounts').el.parent().parent().hide();
											//Ext.getCmp('RemoteSentArchiveStart.fileCounts').allowBlank = true;
										}
									}
								}
							},/* {
								xtype : "hidden",
								name : "archives.reviewUserName",
								id : "RemoteSentArchiveStart.reviewUserName"
							},{
								xtype : "combo",
								hiddenName : "archives.reviewUser",
								fieldLabel : "核稿",
								id : 'RemoteSentArchiveStart.flowAssignId',
								valueField : 'flowAssignId',
								displayField : 'flowAssignName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/system/depThreeLowLeadersAppUser.do',
											autoLoad : true,
											fields : ['flowAssignId',
													'flowAssignName']
										})
							}, */ {
						xtype : 'container',
						id : 'RemoteSentArchiveDepCheck.signDep',
						layout : 'column',width:300,style:'padding-bottom:5px',
						defaults : {
							border : false
						},
						items : [ {
									xtype : 'label',
									text : '核稿:',
									width : 84
								}, {
									id : 'RemoteSentArchiveStart.flowAssignName',
									name:'archives.reviewUserName',
									xtype : 'textfield',
									width:130,
									allowBlank : false,
									readOnly : true
								},{
									xtype : 'button',
									iconCls : 'menu-department',
									width:80,
									style : 'padding-left:5px;',
									text : '选择人员',
									handler : function() {
										var url='';
										if(curUserInfo.depExternal!=2){
										  url  =  __ctxPath + '/system/depUsersTreeDepartment.do?depIds='+roleMap.get('DepartmentCommonId');
										}else{
										 url = __ctxPath + '/system/curDepLeadersTreeDepartment.do';
										}
										DepLeaders.getView(function(userIds, userNames) {
													Ext.getCmp('RemoteSentArchiveStart.flowAssignId').setValue(userIds);
													Ext.getCmp('RemoteSentArchiveStart.flowAssignName').setValue(userNames);
												}, true, null,url).show();
									}
								},{
									id : 'RemoteSentArchiveStart.flowAssignId',
									name:'archives.reviewUser',
									xtype : 'hidden'
								}]
					},{
								xtype : 'numberfield',
								id: 'RemoteSentArchiveStart.fileCounts',
								name : 'archives.fileCounts',
								fieldLabel : '份数',
								value : 1
							}]
				}]
			}, {
				xtype : 'textfield',
				name : 'archives.subject',
				id : 'RemoteSentArchiveStart.subject',
				allowBlank : false,
				width : '96.5%',
				fieldLabel : '标题'
			},{
				xtype : 'container',
				layout : 'hbox',
				style : 'padding:0px 0px 5px 0px;margin-left:0px;',
				defaults : {
					allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style:'padding-top:4px;',
							text : '主送:',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.sendTo',
							width : '76%',
							id : 'RemoteSentArchiveStart.sendTo'
						}, {
							style : 'padding-left:5px;',
							xtype : 'button',
							iconCls : 'btn-dep-sel',
							text : '常用主送单位',
							handler : function() {
								UnitsSelector.getView(
									function(ids, names) {
										Ext.getCmp('RemoteSentArchiveStart.sendTo')
											.setValue(names);
										}, false,1).show();
							}
						}]
			}, {
				xtype : 'container',
				layout : 'hbox',
				defaults : {
					allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style:'padding-top:4px;',
							text : '抄送:',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.ccTo',
							allowBlank : true,
							id : 'RemoteSentArchiveStart.ccTo',
							width : '76%'
						}, {
							xtype : 'button',
							style : 'padding-left:5px;',
							iconCls : 'menu-department',
							text : '常用抄送单位',
							handler : function() {
								UnitsSelector.getView(
									function(ids, names) {
										Ext.getCmp('RemoteSentArchiveStart.ccTo')
											.setValue(names);
										}, false,2).show();
							}
						}]
			}, {
				xtype : 'fieldset',
				style:'padding-top:6px',
				border : false,
				defaults : {
					anchor : '98%,98%'
				},
				items : [this.docGridPanel]
			}, {
				layout : 'column',
				border : false,
				defaults : {
					layout : 'form',
					border : false
				},
				items : [{
							columnWidth : .88,
							items : [{
										fieldLabel : '公文附件',
										xtype : 'panel',
										id : 'RemoteSentFiles.personFilePanel',
										frame : false,
										border : true,
										bodyStyle : 'padding:4px 4px 4px 4px;',
										height : 80,
										autoScroll : true,
										html : ''
									}]
						}, {
							columnWidth : .12,
							items : [{
								border : false,
								xtype : 'button',
								text : '添加文件',
								iconCls : 'menu-attachment',
								handler : function() {
									var dialog = App.createUploadDialog({
										file_cat : 'document',
										judge_size : 'no',
										upload_autostart : true,
										callback : function(data) {
											var fileIds = Ext.getCmp('RemoteSentFiles.fileIds');
											var filePanel = Ext.getCmp('RemoteSentFiles.personFilePanel');

											for (var i = 0; i < data.length; i++) {
												if (fileIds.getValue() != '') {
													fileIds.setValue(fileIds
															.getValue()
															+ ',');
												}
												fileIds.setValue(fileIds
														.getValue()
														+ data[i].fileId);

												Ext.DomHelper
														.append(
																filePanel.body,
																'<span><a href="#" onclick="FileAttachDetail.show('
																		+ data[i].fileId
																		+ ')">'
																		+ data[i].filename
																		+ '</a> <img class="img-delete" src="'
																		+ __ctxPath
																		+ '/images/system/delete.gif" onclick="removeFile(this,\'RemoteSentFiles.fileIds\','
																		+ data[i].fileId
																		+ ')"/>&nbsp;|&nbsp;</span>');

											}
										}
									});
									dialog.show(this);
								}
							}, {
								xtype : 'button',
								text : '清除文件',
								iconCls : 'reset',
								handler : function() {
									var fileAttaches = Ext.getCmp('RemoteSentFiles.fileIds');
									var filePanel = Ext.getCmp('RemoteSentFiles.personFilePanel');

									filePanel.body.update('');
									fileAttaches.setValue('');
								}
							}, {
								xtype : 'hidden',
								id : 'RemoteSentFiles.fileIds',
								name : 'fileIds'
							}]
						}]
			}, {
				id : 'RemoteSentArchiveStart.isReserveNo',
				border : false,
				labelWidth:105,
				layout : 'form',
				items : {
					xtype : 'radiogroup',
					id:'RemoteSentArchiveStart.radiogroup',
					fieldLabel : '是否使用预约编号',
					hideParent : true,
					items : [{
								boxLabel : '是',
								name : 'archives.isReserveNo',
								inputValue : 1
							}, {
								boxLabel : '否',
								name : 'archives.isReserveNo',
								inputValue : 0
							}]
				}
			},  { 
				border : false,
				labelWidth: 105,
				layout : 'form',
				items : {
				xtype : 'radiogroup',
				id : 'RemoteSentArchiveStart.isStandard',
				fieldLabel : '是否规范性文件',
				style :'width : 100',
				allowBlank : false,
				items : [{
							boxLabel : '是',
							name : 'archives.isStandard',
							inputValue : 1
						}, {
							boxLabel : '否',
							name : 'archives.isStandard',
							id : 'RemoteSentArchiveStart.standard',
							inputValue : 0
						}]
			}},  { 
				border : false,
				labelWidth: 105,
				layout : 'form',
				items : {
				xtype : 'radiogroup',
				id:'RemoteSentArchiveStart.public',
				allowBlank : false,
				labelWidth : 95,
				fieldLabel : '是否公开到外网',
				items : [{
					boxLabel : '是',
					name : 'archives.isPublic',
					inputValue : 1,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
								Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').allowBlank = true;
								Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').hide();
								Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').el
										.parent().parent().hide();
							}
						}
					}
				},{
					boxLabel : '否',
					name : 'archives.isPublic',
					inputValue : 0,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
								Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').allowBlank = false;
								Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').show();
								Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').el
										.parent().parent().show();
							}
						}
					}
				}]
			}}, {
				border:false,
				id : '_RemoteSent_unPublicReasons',
				layout:'form',
				items:[{
					xtype : 'textarea', 
					fieldLabel : '不公开原因',
					hideParent :true,
					id:'RemoteSentArchiveStart.unPublicReasons',
					name : 'archives.unPublicReasons',
					allowBlank : true,
					maxLength :500,
					width : '90%'
				}]
			},{
				border:false,
				layout:'form',
				items:[{
					xtype : 'textarea', 
					fieldLabel : '单位审批信息',
					name : 'leaderRead.leaderOpinion',
					maxLength :500,
					width : '90%'
				}]
			},{
				xtype:'hidden',
				name:'archives.issuerId',
				value:curUserInfo.userId
			},{
				xtype:'hidden',
				name:'archives.archType',
				value:0
			}]
		});
		
		if (this.archivesId) {
			this.formPanel.getForm().load({
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ this.archivesId,
				waitMsg : '正在载入数据...',
				success : function(form, action) {
					var isStandard = action.result.data['archives.isStandard'];
					var isPublic = action.result.data['archives.isPublic'];
					var isReserveNo = action.result.data['archives.isReserveNo'];
					var privacyLevel = action.result.data['archives.privacyLevel'];
					Ext.getCmp('RemoteSentArchiveStart.archivesType')
							.getStore().load({
								callback : function() {
									// 等待数据加载完成才进行赋值，不然由于异步会出现先赋值后加载完成。
									Ext
											.getCmp('RemoteSentArchiveStart.archivesType')
											.setValue(Ext
													.decode(action.response.responseText).data[0].parentArchId);
								},
								scope : Ext
										.getCmp('RemoteSentArchiveStart.archivesType')
										.getStore(),// 表示作用范围
								add : false
									// 为false表示数据不累加
							});
					Ext.get('RemoteSentArchiveStart.flowAssignName').dom.value = action.result.data['archives.reviewUserName'];
					if (privacyLevel != '一般' && privacyLevel != '密级程度') {
						Ext.getCmp('RemoteSentArchiveStart.public').disable();
						Ext.getCmp('RemoteSentArchiveStart.public').allowBlank = true;
						Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').allowBlank = true;
						Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').disable();
					}
					if (privacyLevel == '一般' || privacyLevel == '密级程度') {
						if(isPublic ==null || "" == (""+isPublic+"")){} 
						else if (isPublic == 0) {
							Ext.getCmp('RemoteSentArchiveStart.public').setValue(0);
						} else {
							Ext.getCmp('RemoteSentArchiveStart.unPublicReasons').allowBlank = true;
							Ext.getCmp('RemoteSentArchiveStart.public').setValue(1);
							Ext.getCmp('_RemoteSent_unPublicReasons').hide();
						}
					}
					if(isStandard==null || "" == (""+isStandard+"")){}
					else if (isStandard == 0) {
						Ext.getCmp('RemoteSentArchiveStart.standard')
								.setValue(0);
					} else {
						Ext.getCmp('RemoteSentArchiveStart.standard')
								.setValue(1);
					}
					if (null == isReserveNo || "" == (""+isReserveNo+"")){
					}else if (0 == isReserveNo){
						Ext.getCmp('RemoteSentArchiveStart.radiogroup').setValue(0);
					}else {
						Ext.getCmp('RemoteSentArchiveStart.radiogroup').setValue(1);
					}
					var data = Ext.decode(action.response.responseText).data[0];
					var filePanel = Ext.getCmp('RemoteSentFiles.personFilePanel');
					var fileIds = Ext.getCmp("RemoteSentFiles.fileIds");
					var af = Ext.decode(action.response.responseText).data[0].archivesFiles;
					if (af != null) {
						for (var i = 0; i < af.length; i++) {
							if (fileIds.getValue() != '') {
								fileIds.setValue(fileIds.getValue() + ',');
							}
							fileIds.setValue(fileIds.getValue() + af[i].fileId);
							Ext.DomHelper
									.append(
											filePanel.body,
											'<span><a href="#" onclick="FileAttachDetail.show('
													+ af[i].fileId
													+ ')">'
													+ af[i].fileName
													+ '</a><img class="img-delete" src="'
													+ __ctxPath
													+ '/images/system/delete.gif" onclick="removeFile(this,\'RemoteSentArchiveStart.fileIds\','
													+ af[i].fileId
													+ ')"/>&nbsp;|&nbsp;</span>');
						}
					}
				},
				failure : function(form, action) {
					Ext.ux.Toast.msg('编辑', '载入失败');
				}
			});
		}
		
		var did=defId;
		Ext.Ajax.request({
						url : __ctxPath + '/snconfig/listByPageFileSnConfigOrder.do',
						params : {
							'flowId' : did,
							'userId':curUserInfo.userId,
							'isUsed':0
						},
						method:'post',
						success : function(response, options) {
							var af=Ext.util.JSON.decode(response.responseText).result;
							if(af==""){
							  Ext.getCmp('RemoteSentArchiveStart.isReserveNo').hide();
							  fp.getCmpByName('archives.isReserveNo').setValue(3);
							  Ext.getCmp('RemoteSentArchiveStart.radiogroup').allowBlank=true;
							}else{
							Ext.getCmp('RemoteSentArchiveStart.isReserveNo').show();
							Ext.getCmp('RemoteSentArchiveStart.radiogroup').allowBlank=false;
							}
						}
			});
	}
})