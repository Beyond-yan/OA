GZTZCXDJPanel = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		GZTZCXDJPanel.superclass.constructor.call(this, {
			id : 'GZTZCXDJPanel',
			layout : 'form',
			items : [this.formPanel],
			modal : true,
			maximizable : true,
			autoHeight : true,
			width : 800,
			bodyStyle : "center",
			iconCls : 'menu-archive-draft',
			title : '会议通知-重新登记 ',
			buttonAlign : 'center',
			buttons : [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   id:'gztzsaveBtn010',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end]
		});
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
		singleClick('gztzsaveBtn010');
		var fileIds = Ext.getCmp('fileAttachments.fileIds').getValue();
		if (formPanel.getForm().isValid()) {
			var docParams = Ext.getCmp("GZTZCXDJPanel.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}
			formPanel.getForm().submit({
				method: 'POST',
				waitMsg: '正在提交数据...',
				params: {
					archivesRecfileIds: Ext.getCmp("GZTZCXDJPanel.reFileId").getValue()
				},
				success: function (fp, action) {
					var userId = Ext.getCmp('archivesGZTZForm.leaderName').getValue();
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					var param = {
						taskId : panel.taskId,
						signalName : signalName,
						activityName : activityName,
						sendMail : sendMail,
						sendMsg : sendMsg,
						sendInfo : sendInfo,
						flowAssignId : userId,
						fileIds : fileIds?fileIds:'_'
					};
					addMsgFunction(true,taskId);
					formPanel.getForm().submit({
						url: __ctxPath + '/flow/nextForSyncProcessActivity.do',
						waitMsg: '正在提交数据...',
						timeout: 120000,
						method: 'post',
						params: param,
						success: function (fp, action) {
							Ext.MessageBox.hide();	
							var jsonResult = action.result;
							if (jsonResult && jsonResult.success == "true") {
								Ext.ux.Toast.msg("操作信息", "保存成功！");
							}else {
								var resultMsg = "信息保存出错，请联系管理员！";
								var resuIcon = Ext.MessageBox.ERROR;
								if (jsonResult.message && jsonResult.message != null) {
									resultMsg = jsonResult.message;
									if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
										resuIcon= Ext.MessageBox.WARNING;
									}
								}
								Ext.MessageBox.show({
									title : '操作信息',
									msg : resultMsg,
									buttons : Ext.MessageBox.OK,
									icon : resuIcon
								});
							}
							Ext.getCmp('centerTabPanel').remove(Ext.getCmp('ProcessForm' + panel.taskId));
							refreshTaskPanelView();
							if(Ext.getCmp('ArchWorkGrid')){
								Ext.getCmp('ArchWorkGrid').getStore().reload();
							}
						},
						failure : function(fp, action) {
							Ext.MessageBox.hide();
							Ext.MessageBox.show({
										title : '操作信息',
										msg : '信息保存出错，请联系管理员！',
										buttons : Ext.MessageBox.OK,
										icon : Ext.MessageBox.ERROR
									});
						}
					});
				},
				failure: function (fp, action) {
					Ext.MessageBox.show({
						title: '操作信息',
						msg: '信息保存出错，请联系管理员！',
						buttons: Ext.MessageBox.OK,
						icon: Ext.MessageBox.ERROR
					});
				}
			});
		}
	},
	
	initUIComponents : function() {
		this.archivesId='${archivesId}';
		this.docGridPanel = new ArchivesUtil({
			panelId : 'GZTZCXDJPanel',
			archivesId : this.archivesId
		}).getGridPanelWithFullTools();
		var initStore=new Ext.data.SimpleStore({
			url : __ctxPath
					+ '/system/getInnersByDepIdsAppUser.do',
			autoLoad : false,
			fields : ['userId', 'fullname']
		});
		
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			id : 'archivesGZTZForm',
			url : __ctxPath + '/archive/saveArchives.do',
			frame : false,
			border : false,
			labelWidth:70,
			width : 800,
			padding : '5px',
			reader : new Ext.data.JsonReader({
						root : 'data'
			}, [ {
					name : 'archives.archivesId',
					mapping : 'archivesId'
				}, {
					name : 'archives.issueDate',
					mapping : 'issueDate'
				}, {
					name : 'archives.depSignNo',
					mapping : 'depSignNo'
				}, {
					name : 'archives.writtenDate',
					mapping : 'writtenDate'
				}, {
					name : 'archives.issueDep',
					mapping : 'issueDep'
				}, {
				    name:'archives.status',
				    mapping:'status'
				}, {
					name : 'archives.subject',
					mapping : 'subject'
				}, {
					name : 'archives.fileCounts',
					mapping : 'fileCounts'
				}, {
					name : 'archives.privacyLevel',
					mapping : 'privacyLevel'
				}, {
					name : 'archives.urgentLevel',
					mapping : 'urgentLevel'
				},{
					name : 'archives.issuer',
					mapping : 'issuer'
				}, {
					name : 'archives.issuerId',
					mapping : 'issuerId'
				}, {
					name:'archives.orgDepName',
					mapping:'orgDepName'
				}, {
					name:'archives.archType',
					mapping:'archType'
				}, {
					name:'archives.orgDepId',
					mapping:'orgDepId'
				}, {
					name:'archives.archivesFiles',
					mapping:'archivesFiles'
				}, {
					name:'archives.limitedDate',
					mapping:'limitedDate'
				}, {
					name : 'archives.reviewUser',
					mapping : 'reviewUser'
				}, {
					mame : 'archives.sources',
					mapping : 'sources'				
				}, {
					name : 'archives.shortContent',
					mapping : 'shortContent'
				}]),
			items : [{
						border : false,
						layout : 'column',
						defaults : {
							border : false,
							columnWidth : .28,
							layout : 'form',
							defaults : {
								width : 120,
								xtype : 'textfield',
								allowBlank : false
							}
						},
						items:[{
								xtype : "hidden",
								name : "archives.recDepNames",
								id : "archivesGZTZForm.recDepNames"
							},{
								items:[{
									xtype:'hidden',
									id:'archivesGZTZForm.snId'
								}]
							},{
								columnWidth:.4,
								items:[{
								
									xtype : 'textfield',
									fieldLabel : '来文号',
									name : 'archives.depSignNo',
									allowBlank : true,
									width:200
								},{
									fieldLabel : '限办时间',
									name : 'archives.limitedDate',
									xtype : 'datetimefield',
									format : 'Y-m-d H:i:s',
									editable : false,
									allowBlank : false,
									width:200
								}]
							},{
								items:[{
									fieldLabel : '收文日期',
									xtype : 'datefield',
									format : 'Y-m-d',
									editable : false,
									allowBlank : false,
									name : 'archives.writtenDate'
								}]
							},{
								items:[{
									xtype : 'combo',
									fieldLabel : '紧急程度',
									name : 'archives.urgentLevel',
									triggerAction : 'all',
									editable : false,
									allowBlank : true,
									value : '平急',
									store : ['特急', '急件', '加急','平急']
								}]
							}]
					},{
						xtype : 'textfield',
						fieldLabel : '来文单位',
						name : 'archives.issueDep',
						id:'archivesGZTZForm.issueDep',
						width:670,
						allowBlank : false
					},{
						xtype : 'textfield',
						fieldLabel : '标题',
						name : 'archives.subject',
						id:'archivesGZTZForm.subject',
						width:670,
						allowBlank : false,
						listeners: {
							'change' : function(t){
						       if(t.getValue()!=""){
						       		Ext.getCmp('SearchSubject').setValue(t.getValue());
						       		Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
										'subject' : Ext.getCmp('SearchSubject').getValue(),
										'archType': Ext.getCmp('archivesArchType').getValue(),
										'docName' : Ext.getCmp('SearchDocNames').getValue(),
										'fileName': Ext.getCmp('SearchFileNames').getValue()
									}
							        Ext.Ajax.request({
										url : __ctxPath + '/archive/oaSearchListArchives.do',
										params : {
											'subject' : t.getValue(),
											'archType': Ext.getCmp('archivesArchType').getValue(),
											'docName' : Ext.getCmp('SearchDocNames').getValue(),
											'fileName': Ext.getCmp('SearchFileNames').getValue()
										},
										method:'post',
										success : function(response, options) {
											var data=Ext.util.JSON.decode(response.responseText)
											Ext.getCmp('ProcessStartOASearchGrid').getStore().loadData(data);
										}
									});
						       }
						     }
						}
					}, {
						xtype:'hidden',
						id:'archivesGZTZForm.departmentId',
						value:'100131',
						name:'archives.orgDepId'
					}, {
						xtype:'hidden',
						id:'archivesGZTZForm.departmentName',
						value:'办公室',
						name:'archives.orgDepName'
					},{
						name : 'archives.reviewUserName',
						id : 'archivesGZTZForm.viceLeaders',
						xtype : 'hidden'
					},{
						id : 'archivesGZTZForm.userId',
						//hidden:true,
						hideMode :'offsets',
						xtype : 'container',
						layout : 'column',
						style : 'padding:0px 0px 8px 0px;margin-left:0px;',
						defaults : {
							border : false
						},
						items : [{
							xtype : 'label',
							style:'padding-top:4px;',
							text : '负责人:',
							width : 73
						}, {
							xtype : "combo",
							id : "archivesGZTZForm.leaderName",
							hiddenName : 'archives.reviewUser',
							valueField : 'userId',
							displayField : 'fullname',
							editable : false,
							allowBlank : false,
							triggerAction : 'all',
							forceSelection : true,
							width : 675,
							store : new Ext.data.SimpleStore({
							//	url : __ctxPath + '/system/getAllByDepIdAppUser.do?depId=0',
									url : __ctxPath
											+ '/system/searchByTwoRoleIdAppUser.do?role1Id='+roleMap.get('officeDeputyDirectorRoleID')+'&role2Id='+roleMap.get('officeDirectorRoleID'),
									autoLoad : true,
									fields : ['userId', 'fullname']
								}),
							listeners : {
								select : function(cbo, record, index) {
									Ext.getCmp('archivesGZTZForm.leaderName')
													.setValue(cbo.getValue());
										}
									}
						}]
					},{
						xtype : 'container',
						id : 'archivesGZTZForm.inner',
						layout : 'column',
						hidden:true,
						hideMode :'offsets',
						height : 30,
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '负责人:',
									style:'padding-top:4px;',
									width : 73
								}, {
									xtype : "combo",
									id : "archivesGZTZForm.innersendName",
									valueField : 'userId',
									displayField : 'fullname',
									allowBlank : true,
									editable : false,
									triggerAction : 'all',
									forceSelection : true,
									width : 675,
									store : initStore,
									listeners : {
										select : function(cbo, record, index) {
											Ext.getCmp('archivesGZTZForm.userId')
													.setValue(cbo.getValue());
										},
										'beforequery':function(c){
					                        delete c.combo.lastQuery;//用来过滤store的匹配字符串值。 删除此参数以强制执行一次重新查询                        
					                        var selectNode = Ext.getCmp('archivesGZTZForm.departmentId');
					                        if(selectNode!=null ){
					                            Ext.getCmp('archivesGZTZForm.innersendName').getStore().setBaseParam('depIds',selectNode.getValue());
					                        }
					                    }
									}
								}]
					},{
						name : 'archives.status',
						xtype : 'hidden',
						value :  1
					},{
					    name : "archives.issuer",
						value : curUserInfo.fullname,
						xtype : 'hidden'
					},{
					    name : "archives.depId",
					    id : "archives.depId",
						value : curUserInfo.depId,
						xtype : 'hidden'
					}, {
						name : 'archives.snConfigId',
						id : 'archivesGZTZForm.snConfigId',
						value : curUserInfo.fullname,
						xtype : 'hidden'
					}, {
						name : 'archives.archivesId',
						xtype : 'hidden'
					},{
						name : 'archives.issuerId',
						value : curUserInfo.userId,
						xtype : 'hidden'
					},{
						name : 'archives.archType',
						id : 'archivesArchType',
						xtype : 'hidden'
					},{
						xtype : 'fieldset',
						border : false,
						defaults : {
							anchor : '96.3%,96%'
						},
						items : [this.docGridPanel]
					},{
						layout : 'column',
						border : false,
						defaults : {
							layout : 'form',
							border : false
						},
						items : [{
									columnWidth : .85,
									items : [{
												fieldLabel : '公文附件',
												xtype : 'panel',
												id : 'fileAttachments.personFilePanel',
												frame : false,
												border : true,
												bodyStyle : 'padding:4px 4px 4px 4px;',
												height : 80,
												autoScroll : true,
												html : ''
											}]
								}, {
									columnWidth : .14,
									items : [{
										border : false,
										xtype : 'button',
										text : '添加文件',
										iconCls : 'menu-attachment',
										handler : function() {
											var dialog = App.createUploadDialog({
												file_cat : 'document/' + curUserInfo.ownerSchema,
												judge_size : 'no',
												upload_autostart : true,
												callback : function(data) {
													var fileIds = Ext.getCmp('fileAttachments.fileIds');
													var filePanel = Ext.getCmp('fileAttachments.personFilePanel');
													var fileNames="";
													for (var i = 0; i < data.length; i++) {
														if (fileIds.getValue() != '') {
															fileIds.setValue(fileIds
																	.getValue()
																	+ ',');
														}
														fileIds.setValue(fileIds.getValue()
																+ data[i].fileId);
														
														Ext.DomHelper
																.append(
																		filePanel.body,
																		'<span><a href="#" onclick="FileAttachDetail.show('
																				+ data[i].fileId
																				+ ')">'
																				+ data[i].filename
																				+ '</a> <img class="img-delete" src="'
																				+ __ctxPath
																				+ '/images/system/delete.gif" onclick="removeFile(this,\'fileAttachments.fileIds\','
																				+ data[i].fileId
																				+ ')"/>&nbsp;|&nbsp;</span>');
													}
												}
											});
											dialog.show(this);
										}
									}, {
										xtype : 'button',
										text : '清除文件',
										iconCls : 'reset',
										handler : function() {
											var fileAttaches = Ext.getCmp('fileAttachments.fileIds');
											var filePanel = Ext.getCmp('fileAttachments.personFilePanel');

											filePanel.body.update('');
											fileAttaches.setValue('');
										}
									}, {
										xtype:'hidden',
										id:'GZTZCXDJPanel.reFileId'
									}, {
										xtype : 'hidden',
										id : 'fileAttachments.fileIds',
										name : 'fileIds'
									}]
								}]
					}]
			
		});
		
		if (this.archivesId) {
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ this.archivesId,
				waitMsg : '正在载入数据...',
				method:'post',
				success : function(form, action) {
					var af=action.result.data['archives.archivesFiles'];
					var filePanel = Ext.getCmp('fileAttachments.personFilePanel');
				    var fileIds = Ext.getCmp("fileAttachments.fileIds");
				    Ext.getCmp('archivesGZTZForm.leaderName').getStore().load({
				    	callback : function () {
				    		Ext.getCmp('archivesGZTZForm.leaderName').setValue(Ext.decode(action.response.responseText).data[0].reviewUser);
				    		if(!Ext.getCmp('archivesGZTZForm.leaderName').getValue()){
								Ext.getCmp('archivesGZTZForm.leaderName').allowBlank = true;
				    		}
				    	},
				    	scope : Ext.getCmp('archivesGZTZForm.leaderName').getStore(),
				    	add : false
				    });
					if(af!=null){
							for (var i = 0; i < af.length; i++) {
								if (fileIds.getValue() != '') {
									fileIds.setValue(fileIds.getValue() + ',');
								}
								fileIds.setValue(fileIds.getValue() + af[i].fileId);
								Ext.DomHelper
										.append(
												filePanel.body,
												'<span><a href="#" onclick="FileAttachDetail.show('
														+ af[i].fileId
														+ ')">'
														+ af[i].fileName
														+ '</a><img class="img-delete" src="'
														+ __ctxPath
														+ '/images/system/delete.gif" onclick="removeFile(this,\'fileAttachments.fileIds\','
														+ af[i].fileId
														+ ')"/>&nbsp;|&nbsp;</span>');
							  }
				    }
				},
				failure : function(form, action) {
				}
			});
		}
		
	}
})
