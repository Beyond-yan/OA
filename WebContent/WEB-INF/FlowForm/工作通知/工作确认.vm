GZTZHYQRView = Ext.extend(Ext.Panel, {
	setTaskId : function(tId) {
		this.taskId = tId;
	},
	getTaskId : function() {
		return this.taskId;
	},
	formPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.init();
		GZTZHYQRView.superclass.constructor.call(this, {
					id : 'GZTZHYQRView',
					defaults : {
						border : false,
						autoScroll : true
					},
					width : 700,
					height : 530,
					autoHeight : true,
					buttons : [
								#set ($count=0)
								#foreach ($v in $nextTrans)
									#if($count>0)
								,
									#end
									new Ext.Button({
									   iconCls:'btn-transition',
									   text:'拟办分发',
									   id:'gztzsaveBtn011',
									   handler:this.onSave.createCallback(this.formPanel,this,'${v.name}','${v.source}')
									}),
									new Ext.Button({
									   iconCls:'btn-changeTask',
									   text:'办结',
									   id:'gztzsaveBtn012',
									   handler:this.onEnd.createCallback(this.formPanel,this,'${v.name}','${v.source}')
									})
									#set ($count=$count+1)
								#end
								],
					buttonAlign : 'center',
					items : [this.detailPanel, this.formPanel]
				});
	},

	onEnd:function(formPanel,panel,signalName,activityName){
		singleClick('gztzsaveBtn012');
	    Ext.Msg.confirm('信息确认', '请确认是否需要办结。', function(btn) {
			if (btn == 'yes') {
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
				var foreachUserIdsLengthsDB = Number('${foreachUserIdsLengths}');
				formPanel.getForm().submit({
					url:__ctxPath+ "/flow/nextForSyncProcessActivity.do",
					method:'post',
					waitMsg:'正在提交处理，请稍等',
					scope:this,
					params:{
						taskId : panel.taskId,
						signalName : signalName,
						activityName : activityName,
						sendMail : sendMail,
						sendMsg : sendMsg,
						sendInfo: sendInfo,
						querResult: 2,
					    comments: formPanel.getCmpByName('leaderOpinion').getValue() 
					},
					success : function(fp, action) {
						  var jsonResult = action.result;
						if (jsonResult && jsonResult.success == "true") {
							Ext.ux.Toast.msg("操作信息", "保存成功！");
						} else {
							var resultMsg = "信息保存出错，请联系管理员！";
							var resuIcon = Ext.MessageBox.ERROR;
							if (jsonResult.message && jsonResult.message != null) {
								resultMsg = jsonResult.message;
								if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
									resuIcon= Ext.MessageBox.WARNING;
								}
							}
							Ext.MessageBox.show({
								title : '操作信息',
								msg : resultMsg,
								buttons : Ext.MessageBox.OK,
								icon : resuIcon
							});
						}
						 AppUtil.removeTab('ProcessForm' + panel.taskId);
						 refreshTaskPanelView();
						 if(Ext.getCmp('ArchWorkGrid')){
							Ext.getCmp('ArchWorkGrid').getStore().reload();
						}
				    },
					failure : function(fp, action) {
						Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
					}
				});
			}
		});
	},

	//保存方法
	onSave : function(formPanel, panel, signalName, activityName) {
		singleClick('gztzsaveBtn011');
		var comments=formPanel.getCmpByName('leaderOpinion').getValue();
		if (formPanel.getForm().isValid()) {
			var sendMail = msgPanel.getCmpByName('sendMail').getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			formPanel.getForm().submit({
				method : 'POST',
				url : __ctxPath + "/flow/nextProcessActivity.do",
				params : {
					taskId : taskId,
					signalName : signalName,
					activityName : activityName,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo:sendInfo,
					comments: comments,
					querResult: 1
				},
				waitMsg : '正在提交数据...',
				success : function(fp, action) {
					var jsonResult = action.result;
					if (jsonResult && jsonResult.success == "true") {
						Ext.ux.Toast.msg("操作信息", "保存成功！");
					} else {
						var resultMsg = "信息保存出错，请联系管理员！";
						var resuIcon = Ext.MessageBox.ERROR;
						if (jsonResult.message && jsonResult.message != null) {
							resultMsg = jsonResult.message;
							if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
								resuIcon= Ext.MessageBox.WARNING;
							}
						}
						Ext.MessageBox.show({
							title : '操作信息',
							msg : resultMsg,
							buttons : Ext.MessageBox.OK,
							icon : resuIcon
						});
					}
					AppUtil.removeTab('ProcessForm' + taskId);
					refreshTaskPanelView();
					if(Ext.getCmp('ArchWorkGrid')){
						Ext.getCmp('ArchWorkGrid').getStore().reload();
					}
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
						title : '操作信息',
						msg : '信息保存出错，请联系管理员！',
						buttons : Ext.MessageBox.OK,
						icon : Ext.MessageBox.ERROR
					});
				}
			});
		}
	},

	/**
	 * init the components
	 */
	init : function() {
		// 显示公文详细信息
		this.detailPanel = new Ext.Panel({
					// title:'流程审批信息',
					autoHeight : true,
					columnWidth : 1,
					id:'XZHYQRArchiveReceiveDetailPanel',
					autoScroll : true,
					autoLoad : {
						url : __ctxPath+'/pages/flowPath/workFlow.jsp?archiveId=${archivesId}&fileIds=${fileIds}&defId=${defId}&detailId=XZHYQRArchiveReceiveDetailPanel',
						nocache : true
					}
				});
		
		// 初始化表单
		this.formPanel = new Ext.FormPanel({
			columnWidth : 1,
			layout : 'form',
			id : 'GZTZHYQRFormView',
			autoHeight : true,
			style : 'padding:6px 6px 6px 1%',
			items : [{
					   layout:'column',
					   style:'padding:6px 0px 0px 0px',
					   border:false,
					   items:[{
					   		layout:'form',
					   		border:false,
					   		items:[{	
				   					fieldLabel : '办理意见',
				   					id:'GZTZHYQRFormView.leaderOpinion',
									name : 'leaderOpinion',
									autoScroll:true,
									maxLength:500,
									height:40,
									xtype:'textarea',
									width:448
									}]
					     	 },{
						   		layout:'form',
						   		style:'padding-top:10px;padding-left:5px;',
						   		border:false,
						   		items:[{
										xtype : 'button',
										text : '常用批示语',
										iconCls : 'menu-new-document',
										handler : function() {
											OdCommentsSelector.getView(
												function(id, name) {
													Ext.getCmp('GZTZHYQRFormView.leaderOpinion')
													.setValue(name);
												}, true).show();
											}
										}]
					  		}]
					},{
						id : 'GZTZHYQRFormView.reFileId',
						xtype : 'hidden'
					}, {
						xtype:'hidden',
						id:'archivesMeetingForm.snId'
					}, {
						name : 'archives.snConfigId',
						id : 'archivesMeetingForm.snConfigId',
						xtype : 'hidden'
					}]
		});
	}// end of init
})