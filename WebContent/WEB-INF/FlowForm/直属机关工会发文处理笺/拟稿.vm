ZSGHSentArchiveStart = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		ZSGHSentArchiveStart.superclass.constructor.call(this, {
					title : '直属机关工会发文处理笺',
					id : 'ZSGHSentArchiveStart',
					modal : true,
					width : 800,
					autoHeight : true,
					iconCls : 'menu-archive-draft',
					items : [this.formPanel],
					buttonAlign : 'center',
					buttons : [{
								text : '启动流程',
								iconCls : 'btn-save',
								scope : this,
								handler : this.save
							}, {
								text : '保存草稿',
								iconCls : 'btn-beready-save',
								scope : this,
								handler : this.savedraft
							}]
				});

	},
	save : function() {
			/*文种*/Ext.getCmp('ZSGHSentArchiveRestart.archivesType').allowBlank = false;
		/*标题*/Ext.getCmp('ZSGHSentArchiveStart.subject').allowBlank = false;
		/*核稿人*/Ext.getCmp('ZSGH_flowAssignId').allowBlank = false;
		/*发文单位*/Ext.getCmp('ZSGHSentArchiveStart.issueDep').allowBlank = false;
		/*行文方向*/Ext.getCmp('ZSGHSentArchiveStart.sources').allowBlank = false;
		/*常用主送单位*/Ext.getCmp('ZSGHSentDoc.sendTo').allowBlank = false;
		/*是否规范性文件*/Ext.getCmp('ZSGHSentArchiveRestart.isStandard').allowBlank = false;
		var defId = this.defId;
		/*
		 * if (this.store.getCount() == 0) { Ext.ux.Toast.msg('操作信息',
		 * '请添加公文正文!'); return false; }
		 */
		if (this.formPanel.getForm().isValid()) {
			var formPanel = this.formPanel;
			/*
			 * alert(formPanel.getCmpByName('archives.reviewUser').getValue());
			 * return false;
			 */
			var reviewUserName = Ext.get("ZSGH_flowAssignId").dom.value;
			Ext.getCmp("ZSGHSentArchiveStart.reviewUserName")
					.setValue(reviewUserName);
			var flowAssignId = Ext.getCmp('ZSGH_flowAssignId').getValue();
			var docParams = [];
			for (var i = 0, cnt = this.store.getCount(); i < cnt; i++) {
				docParams.push(this.store.getAt(i).data);
			}
            var url1 = __ctxPath + '/archive/saveNormalArchives.do';
			var url2 = __ctxPath + '/archive/saveArchives.do';
			formPanel.getForm().submit({
				url : archivesId ? url2 : url1,
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					'archives.isdraft' : 0,
					docs : Ext.encode(docParams)
					// 'archives.reviewUser':flowAssignId
				},
				success : function(fp, action) {
					var archivesId = action.result.archivesId;
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					var fileIds = Ext.getCmp('ZSGHSentDoc.fileIds').getValue();
					var isReserveNo = formPanel
							.getCmpByName('archives.isReserveNo')
							.getGroupValue();
					formPanel.getForm().submit({
						url : __ctxPath + '/flow/saveProcessActivity.do',
						method : 'post',
						waitMsg : '正在发起流程...',
						params : {
							isReserveNo : isReserveNo,
							defId : defId,
							sendMail : sendMail,
							sendMsg : sendMsg,
							sendInfo : sendInfo,
							archivesId : archivesId,
							flowAssignId : flowAssignId,
							flowCreatorId : curUserInfo.userId,
							fileIds : fileIds ? fileIds : '_',
							startFlow : true
						},
						success : function(response, options) {
							Ext.Ajax.request({
								url : __ctxPath
										+ '/archive/updateRunIdArchives.do',
								params : {
									'archivesId' : archivesId,
									'runId' : options.result.runId
								},
								method : 'post',
								success : function(response, options) {
									Ext.ux.Toast.msg('操作信息', '成功保存！');
									Ext.getCmp('centerTabPanel').remove(Ext
											.getCmp('ProcessRunStart' + defId));
									refreshTaskPanelView();
										var ArchivesGrid = Ext.getCmp('ArchivesGrid');
									if (ArchivesGrid != null) {
										ArchivesGrid.getStore().reload();
									}
								}
							});
						}
					});
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
				}
			});
		}

	},
	/* 保存草稿 */
	savedraft : function() {
		/*预约编号*/  Ext.getCmp('ZSGHSentArchiveStart.radiogroup').allowBlank = true;
		/*文种*/Ext.getCmp('ZSGHSentArchiveRestart.archivesType').allowBlank = true;
		/*标题*/Ext.getCmp('ZSGHSentArchiveStart.subject').allowBlank = true;
		/*核稿人*/Ext.getCmp('ZSGH_flowAssignId').allowBlank = true;
		/*发文单位*/Ext.getCmp('ZSGHSentArchiveStart.issueDep').allowBlank = true;
		/*行文方向*/Ext.getCmp('ZSGHSentArchiveStart.sources').allowBlank = true;
		/*常用主送单位*/Ext.getCmp('ZSGHSentDoc.sendTo').allowBlank = true;
		/*是否规范性文件*/Ext.getCmp('ZSGHSentArchiveRestart.isStandard').allowBlank = true;
		var defId = this.defId;
		/*
		 * if (this.store.getCount() == 0) { Ext.ux.Toast.msg('操作信息',
		 * '请添加公文正文!'); return false; }
		 */
		if (this.formPanel.getForm().isValid()) {
			var formPanel = this.formPanel;
			/*
			 * alert(formPanel.getCmpByName('archives.reviewUser').getValue());
			 * return false;
			 */
			var reviewUserName = Ext.get("ZSGH_flowAssignId").dom.value;
			Ext.getCmp("ZSGHSentArchiveStart.reviewUserName")
					.setValue(reviewUserName);
			var flowAssignId = Ext.getCmp('ZSGH_flowAssignId').getValue();
			var docParams = [];
			for (var i = 0, cnt = this.store.getCount(); i < cnt; i++) {
				docParams.push(this.store.getAt(i).data);
			}
			var url1 = __ctxPath + '/archive/saveNormalArchives.do';
			var url2 = __ctxPath + '/archive/saveArchives.do';
			formPanel.getForm().submit({
				url : archivesId ? url2 : url1,
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					'archives.isdraft' : 1,
					docs : Ext.encode(docParams)
					// 'archives.reviewUser':flowAssignId
				},
				success : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '成功保存！');
					var ArchivesGrid = Ext.getCmp('ArchivesGrid');
									if (ArchivesGrid != null) {
										ArchivesGrid.getStore().reload();
									}
					Ext.getCmp('centerTabPanel').remove(Ext
							.getCmp('ProcessRunStart' + defId));
					refreshTaskPanelView();
					
					/*
					 * var archivesId = action.result.archivesId; var sendMail =
					 * msgPanel.getCmpByName('sendMail').getValue(); var sendMsg =
					 * msgPanel.getCmpByName('sendMsg').getValue(); var sendInfo =
					 * msgPanel.getCmpByName('sendInfo').getValue(); var fileIds =
					 * Ext.getCmp('ZSGHSentDoc.fileIds') .getValue(); var
					 * isReserveNo=formPanel.getCmpByName('archives.isReserveNo').getGroupValue();
					 * formPanel.getForm().submit({ url : __ctxPath +
					 * '/flow/saveProcessActivity.do', method : 'post', waitMsg :
					 * '正在发起流程...', params : { isReserveNo:isReserveNo, defId :
					 * defId, sendMail : sendMail, sendMsg : sendMsg, sendInfo :
					 * sendInfo, archivesId : archivesId,
					 * flowAssignId:flowAssignId,
					 * flowCreatorId:curUserInfo.userId, fileIds :
					 * fileIds?fileIds:'_', startFlow : true }, success :
					 * function(response, options) { Ext.Ajax.request({ url :
					 * __ctxPath + '/archive/updateRunIdArchives.do', params : {
					 * 'archives.isdraft':1, 'archivesId' : archivesId, 'runId' :
					 * options.result.runId }, method:'post', success :
					 * function(response, options) { Ext.ux.Toast.msg('操作信息',
					 * '成功保存！'); Ext.getCmp('centerTabPanel').remove(Ext
					 * .getCmp('ProcessRunStart' + defId));
					 * refreshTaskPanelView(); } }); } });
					 */},
				failure : function(fp, action) {
					Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
				}
			});
		}

	},
	initUIComponents : function() {
		/*获取defname*/
		this.defId=defId;
				Ext.Ajax.request({
					url : __ctxPath + '/archive/getdefnameArchives.do',
					params : {
						'defId' : defId
					},
					method : 'post',
					success : function(response, options) {
						var data = Ext.util.JSON.decode(response.responseText);
						Ext.getCmp('ZSGHSentArchiveStart.recDepNames')
								.setValue(data.name);
					}
				});
		this.archivesId = archivesId;
		this.docGridPanel = new ArchivesUtil({
					panelId : 'ZSGHSentArchiveStart',
					isStart : true,
					archType: 0,
					archivesId : this.archivesId
				}).getGridPanelWithFullTools();

		var fp = this.formPanel = new Ext.FormPanel({
			url : __ctxPath + '/archive/saveNormalArchives.do',
			frame : false,
			border : false,
			layout : 'form',
			labelWidth : 80,
			width : 800,
			padding : '5px',
			reader : new Ext.data.JsonReader({
						root : 'data'
					}, [{
								name : 'archives.archivesId',
								mapping : 'archivesId'
							}, {
								name : 'archives.issueDep',
								mapping : 'issueDep'
							}, {
								name : 'archives.subject',
								mapping : 'subject'
							}, {
								name : 'archives.isReserveNo',
								mapping : 'isReserveNo'
							}, {
								name : 'archives.fileCounts',
								mapping : 'fileCounts'
							}, {
								name : 'archives.privacyLevel',
								mapping : 'privacyLevel'
							}, {
								name : 'archives.urgentLevel',
								mapping : 'urgentLevel'
							}, {
								name : 'archives.issuer',
								mapping : 'issuer'
							}, {
								name : 'archives.sources',
								mapping : 'sources'
							}, {
								name : 'archives.isPublic',
								mapping : 'isPublic'
							}, {
								name : 'archives.reviewUser',
								mapping : 'reviewUser'
							}, {
								name : 'archives.reviewUserName',
								mapping : 'reviewUserName'
							}, {
								name : 'archives.sendTo',
								mapping : 'sendTo'
							}, {
								name : 'archives.ccTo',
								mapping : 'ccTo'
							}, {
								name : 'archives.isStandard',
								mapping : 'isStandard'
							}, {
								name : 'archives.unPublicReasons',
								mapping : 'unPublicReasons'
							}]),
			items : [{
				border : false,
				id:'ZSGHSentArchiveStart.all',
				layout : 'column',
				defaults : {
					border : false,
					columnWidth : .33,
					layout : 'form',
					defaults : {
						width : 150,
						xtype : 'textfield',
						allowBlank : false
					}
				},
				items : [ {
							items : [{
							name : 'archives.archivesId',
							xtype : 'hidden'
						}, {
							xtype : "hidden",
							name : "archives.recDepIds",
							value : defId,
							id : "ZSGHSentArchiveStart.recDepIds"
						}, {
							xtype : "hidden",
							name : "archives.recDepNames",
							id : "ZSGHSentArchiveStart.recDepNames"
						},{
										fieldLabel : "拟稿部门",
										name : 'archives.orgDepName',
										value : curUserInfo.depName,
										readOnly : true
									}, {
										xtype : 'combo',
										name : 'archives.sources',
										triggerAction : 'all',
										id:'ZSGHSentArchiveStart.sources',
										editable : false,
										fieldLabel : '行文方向',
										store : ['上行文', '平行文', '下行文']
									}, {
										xtype : 'combo',
										fieldLabel : "发文单位",
										name : 'archives.issueDep',
										id:'ZSGHSentArchiveStart.issueDep',
										triggerAction : 'all',
										mode : 'local',
										listWidth : 240,
										editable : false,
										store : ArchivesUtil.IssueDepData
									}]
						}, {
							items : [{
										xtype : "combo",
										fieldLabel : '缓急',
										triggerAction : 'all',
										allowBlank : true,
										editable : false,
										name : 'archives.urgentLevel',
										emptyText : '急缓程度',
										store : ['特急', '急件', '加急', '平急']
									}, {
										fieldLabel : '拟稿',
										name : "archives.issuer",
										readOnly : true,
										value : curUserInfo.fullname
									}, {
										xtype : 'combo',
										fieldLabel : '文种',
										id : 'ZSGHSentArchiveRestart.archivesType',
										hiddenName : "archives.archivesType.typeId",
										valueField : 'typeId',
										displayField : 'typeName',
										editable : false,
										triggerAction : 'all',
										forceSelection : true,
										store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/archive/comboArchivesType.do',
											autoLoad : true,
											fields : ['typeId', 'typeName']
										})
									}]
						}, {
							items : [{
								xtype : "combo",
								fieldLabel : '密级',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								name : 'archives.privacyLevel',
								emptyText : '一般',
								store : ['一般']
							}, {
								xtype : "hidden",
								name : "archives.reviewUserName",
								id : "ZSGHSentArchiveStart.reviewUserName"
							}, {
								xtype : "combo",
								hiddenName : "archives.reviewUser",
								id : 'ZSGH_flowAssignId',
								fieldLabel : "核稿",
								valueField : 'flowAssignId',
								displayField : 'flowAssignName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
									url : __ctxPath
											+ '/system/arrLeadersAppUser.do?roles='
											+ ArchivesUtil.Role_Leaders,
									autoLoad : true,
									fields : ['flowAssignId', 'flowAssignName']
								})
							}, {
								xtype : 'numberfield',
								name : 'archives.fileCounts',
								id : 'ZSGHSentArchiveCounts',
								fieldLabel : '份数',
								value : 1
							}, {
								xtype : 'hidden',
								name : 'archives.issuerId',
								value : curUserInfo.userId
							}, {
								xtype : 'hidden',
								name : 'archives.archType',
								id : 'archivesArchType',
								value : 0
							}]
						}]
			}, {
				xtype : 'textfield',
				name : 'archives.subject',
				id:'ZSGHSentArchiveStart.subject',
				allowBlank : false,
				width : 670,
				fieldLabel : '标题',
				listeners: {
							'change' : function(t){
						       if(t.getValue()!=""){
						       		Ext.getCmp('SearchSubject').setValue(t.getValue());
						       		Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
										'subject' : Ext.getCmp('SearchSubject').getValue(),
										'archType': "0",
										'docName' : Ext.getCmp('SearchDocNames').getValue(),
										'fileName': Ext.getCmp('SearchFileNames').getValue()
									}
							        Ext.Ajax.request({
										url : __ctxPath + '/archive/oaSearchListArchives.do',
										params : {
											'subject' : t.getValue(),
											'archType': "0",
											'docName' : Ext.getCmp('SearchDocNames').getValue(),
											'fileName': Ext.getCmp('SearchFileNames').getValue()
										},
										method:'post',
										success : function(response, options) {
											var data=Ext.util.JSON.decode(response.responseText)
											Ext.getCmp('ProcessStartOASearchGrid').getStore().loadData(data);
										}
									});
						       }
						     }
						}
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style : 'padding:0px 0px 0px 0px;',
							text : '主送:',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.sendTo',
							width : 560,
							id : 'ZSGHSentDoc.sendTo'
						}, {
							style : 'padding-left:20px;',
							xtype : 'button',
							iconCls : 'menu-department',
							text : '常用主送单位',
							handler : function() {
								UnitsSelector.getView(function(ids, names) {
									Ext.getCmp('ZSGHSentDoc.sendTo')
											.setValue(names);
								}, false, 1).show();
							}
						}]
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					border : false
				},
				items : [{
							xtype : 'label',
							style : 'padding:0px 0px 0px 0px;',
							text : '抄送:',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.ccTo',
							width : 560,
							id : 'ZSGHSentDoc.ccNames'
						}, {
							xtype : 'button',
							style : 'padding-left:20px;',
							iconCls : 'menu-department',
							text : '常用抄送单位',
							handler : function() {
								UnitsSelector.getView(function(ids, names) {
									Ext.getCmp('ZSGHSentDoc.ccNames')
											.setValue(names);
								}, false, 2).show();
							}
						}]
			}, {
				xtype : 'fieldset',
				style : 'padding-top:6px',
				border : false,
				defaults : {
					anchor : '98%,98%'
				},
				items : [this.docGridPanel]
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:5px;',
				defaults : {
					allowBlank : true,
					border : false
				},
				items : [{
							xtype : 'label',
							text : '附件：',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.enclosure',
							width : '85%',
							id : 'ZSGHSentDoc.enclosure'
						}]
			},{
				layout : 'column',
				border : false,
				defaults : {
					layout : 'form',
					padding : '5px',
					border : false
				},
				items : [{
							columnWidth : .8,
							items : [{
										fieldLabel : '公文附件',
										xtype : 'panel',
										id : 'ZSGHSentDoc.personFilePanel',
										frame : false,
										border : true,
										bodyStyle : 'padding:4px 4px 4px 4px;',
										height : 80,
										autoScroll : true,
										html : ''
									}]
						}, {
							columnWidth : .2,
							padding : '5px 0 0 20px',
							items : [{
								border : false,
								xtype : 'button',
								text : '添加文件',
								iconCls : 'menu-attachment',
								handler : function() {
									var dialog = App.createUploadDialog({
										file_cat : 'document',
										judge_size : 'no',
										upload_autostart : true,
										callback : function(data) {
											var fileIds = Ext
													.getCmp('ZSGHSentDoc.fileIds');
											var filePanel = Ext
													.getCmp('ZSGHSentDoc.personFilePanel');
											var fileNames="";
											for (var i = 0; i < data.length; i++) {
												if (fileIds.getValue() != '') {
													fileIds.setValue(fileIds
															.getValue()
															+ ',');
												}
												fileIds.setValue(fileIds
														.getValue()
														+ data[i].fileId);
												if(i>0){
													fileNames+=" ";
												}
												fileNames+=data[i].filename;
														
												Ext.DomHelper
														.append(
																filePanel.body,
																'<span><a href="#" onclick="FileAttachDetail.show('
																		+ data[i].fileId
																		+ ')">'
																		+ data[i].filename
																		+ '</a> <img class="img-delete" src="'
																		+ __ctxPath
																		+ '/images/system/delete.gif" onclick="removeFile(this,\'ZSGHSentDoc.fileIds\','
																		+ data[i].fileId
																		+ ')"/>&nbsp;|&nbsp;</span>');

											}
											Ext.getCmp('SearchFileNames').setValue(fileNames);
											Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
												'subject' : Ext.getCmp('SearchSubject').getValue(),
												'archType': "0",
												'docName' : Ext.getCmp('SearchDocNames').getValue(),
												'fileName': Ext.getCmp('SearchFileNames').getValue()
											}
											Ext.Ajax.request({
													url : __ctxPath + '/archive/oaSearchListArchives.do',
													params : {
														'subject' : Ext.getCmp('SearchSubject').getValue(),
														'archType': "0",
														'docName' : Ext.getCmp('SearchDocNames').getValue(),
														'fileName': fileNames
													},
													method:'post',
													success : function(response, options) {
														var data=Ext.util.JSON.decode(response.responseText)
														Ext.getCmp('ProcessStartOASearchGrid').getStore().loadData(data);
													}
											});
										}
									});
									dialog.show(this);
								}
							}, {
								xtype : 'button',
								text : '清除文件',
								iconCls : 'reset',
								handler : function() {
									var fileAttaches = Ext
											.getCmp('ZSGHSentDoc.fileIds');
									var filePanel = Ext
											.getCmp('ZSGHSentDoc.personFilePanel');

									filePanel.body.update('');
									fileAttaches.setValue('');
								}
							}, {
								xtype : 'hidden',
								id : 'ZSGHSentDoc.fileIds',
								name : 'fileIds'
							}]
						}]
			}, {
				id : 'ZSGHSentArchiveStart.isReserveNo',
				border : false,
				labelWidth : 105,
				layout : 'form',
				items : {
					xtype : 'radiogroup',
					id : 'ZSGHSentArchiveStart.radiogroup',
					fieldLabel : '是否使用预约编号',
					hideParent : true,
					// allowBlank : false,
					items : [{
								boxLabel : '是',
								name : 'archives.isReserveNo',
								inputValue : 1
							}, {
								boxLabel : '否',
								name : 'archives.isReserveNo',
								inputValue : 0
							}]
				}
			}, {
				border : false,
				labelWidth : 105,
				layout : 'form',
				items : {
					xtype : 'radiogroup',
					allowBlank : false,
					id : 'ZSGHSentArchiveRestart.isStandard',
					fieldLabel : '是否规范性文件',
					items : [{
								boxLabel : '是',
								name : 'archives.isStandard',
								id : 'ZSGHSentArchiveRestart.unStandard',
								inputValue : 1
							}, {
								boxLabel : '否',
								name : 'archives.isStandard',
								id : 'ZSGHSentArchiveRestart.standard',
								inputValue : 0
							}]
				}
			}]
		});
		// load date
		Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
			'subject' : Ext.getCmp('SearchSubject').getValue(),
			'archType': "0",
			'docName' : Ext.getCmp('SearchDocNames').getValue(),
			'fileName': Ext.getCmp('SearchFileNames').getValue()
		}
		if (this.archivesId) {
			this.formPanel.getForm().load({
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ this.archivesId,
				waitMsg : '正在载入数据...',
				success : function(form, action) {
					var isStandard = action.result.data['archives.isStandard'];
					var isReserveNo = action.result.data['archives.isReserveNo'];
					var privacyLevel = action.result.data['archives.privacyLevel'];
					Ext.getCmp('ZSGHSentArchiveRestart.archivesType')
							.getStore().load({
								callback : function() {
									// 等待数据加载完成才进行赋值，不然由于异步会出现先赋值后加载完成。
									Ext
											.getCmp('ZSGHSentArchiveRestart.archivesType')
											.setValue(Ext
													.decode(action.response.responseText).data[0].parentArchId);
								},
								scope : Ext
										.getCmp('ZSGHSentArchiveRestart.archivesType')
										.getStore(),// 表示作用范围
								add : false
									// 为false表示数据不累加
							});
					Ext.getCmp('ZSGHSentDoc.enclosure').setValue(Ext.decode(action.response.responseText).data[0].enclosure);		
					Ext.get('ZSGH_flowAssignId').dom.value = action.result.data['archives.reviewUserName'];
					if(isStandard==-1){
						Ext.getCmp('ZSGHSentArchiveRestart.standard')
								.setValue(null);
					}else
					if (isStandard == 0) {
						Ext.getCmp('ZSGHSentArchiveRestart.standard')
								.setValue(0);
					} else {
						Ext.getCmp('ZSGHSentArchiveRestart.standard')
								.setValue(1);
					}
					var data = Ext.decode(action.response.responseText).data[0];
					// Ext.getCmp('ZSGHSentArchiveRestart.archivesType').setValue(data.parentArchId);
					// Ext.getCmp('ZSGHSentArchiveRestart.flowAssignId').setValue(data.reviewUser);
					var filePanel = Ext.getCmp('ZSGHSentDoc.personFilePanel');
					var fileIds = Ext.getCmp("ZSGHSentDoc.fileIds");
					// Ext.Ajax.request({
					// url : __ctxPath + '/archive/getAttachFilesArchives.do',
					// params : {
					// 'fileIds' : '${fileIds}'
					// },
					// method:'post',
					// success : function(response, options) {
					var af = Ext.decode(action.response.responseText).data[0].archivesFiles;
					if (af != null) {
						for (var i = 0; i < af.length; i++) {
							if (fileIds.getValue() != '') {
								fileIds.setValue(fileIds.getValue() + ',');
							}
							fileIds.setValue(fileIds.getValue() + af[i].fileId);
							Ext.DomHelper
									.append(
											filePanel.body,
											'<span><a href="#" onclick="FileAttachDetail.show('
													+ af[i].fileId
													+ ')">'
													+ af[i].fileName
													+ '</a><img class="img-delete" src="'
													+ __ctxPath
													+ '/images/system/delete.gif" onclick="removeFile(this,\'ZSGHSentArchiveRestart.fileIds\','
													+ af[i].fileId
													+ ')"/>&nbsp;|&nbsp;</span>');
						}
					}
					// }
					// });
				},
				failure : function(form, action) {
					Ext.ux.Toast.msg('编辑', '载入失败');
				}
			});
		}
		var did = defId;
		Ext.Ajax.request({
			url : __ctxPath + '/snconfig/listByPageFileSnConfigOrder.do',
			params : {
				'flowId' : did,
				'userId' : curUserInfo.userId,
				'isUsed' : 0
			},
			method : 'post',
			success : function(response, options) {
				var af = Ext.util.JSON.decode(response.responseText).result;
				if (af == "") {
					Ext.getCmp('ZSGHSentArchiveStart.isReserveNo').hide();
					fp.getCmpByName('archives.isReserveNo').setValue(3);
					Ext.getCmp('ZSGHSentArchiveStart.radiogroup').allowBlank = true;
				} else {
					Ext.getCmp('ZSGHSentArchiveStart.isReserveNo').show();
					Ext.getCmp('ZSGHSentArchiveStart.radiogroup').allowBlank = false;
				}
			}
		});
	}
})
