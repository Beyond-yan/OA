infoCenterArchivesReceivePanel = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		// 必须先初始化组件  
		//编号办法请按照法规处收文登记中修改
			function createFileUpdateCmp(id_pre, label) {
			return [{
						columnWidth : .85,
						items : [{
									fieldLabel : label,
									xtype : 'panel',
									id : id_pre + '.personFilePanel',
									frame : false,
									border : true,
									bodyStyle : 'padding:4px 4px 4px 4px;',
									height : 80,
									autoScroll : true,
									html : ''
								}]
					}, {
						columnWidth : .14,
						items : [{
							border : false,
							xtype : 'button',
							text : '添加文件',
							iconCls : 'menu-attachment',
							handler : function() {
								var dialog = App.createUploadDialog({
									file_cat : 'document',
									judge_size : 'no',
									upload_autostart : true,
									callback : function(data) {
										var fileIds = Ext.getCmp(id_pre
												+ '.fileIds');
										var filePanel = Ext.getCmp(id_pre
												+ '.personFilePanel');

										for (var i = 0; i < data.length; i++) {
											if (fileIds.getValue() != '') {
												fileIds.setValue(fileIds
														.getValue()
														+ ',');
											}
											fileIds.setValue(fileIds.getValue()
													+ data[i].fileId);

											Ext.DomHelper
													.append(
															filePanel.body,
															'<span><a href="#" onclick="FileAttachDetail.show('
																	+ data[i].fileId
																	+ ')">'
																	+ data[i].filename
																	+ '</a> <img class="img-delete" src="'
																	+ __ctxPath
																	+ '/images/system/delete.gif" onclick="removeFile(this,\''+id_pre+'.fileIds\','
																	+ data[i].fileId
																	+ ')"/>&nbsp;|&nbsp;</span>');

										}
									}
								});
								dialog.show(this);
							}
						}, {
							xtype : 'button',
							text : '清除文件',
							iconCls : 'reset',
							handler : function() {
								var fileAttaches = Ext.getCmp(id_pre
										+ '.fileIds');
								var filePanel = Ext.getCmp(id_pre
										+ '.personFilePanel');

								filePanel.body.update('');
								fileAttaches.setValue('');
							}
						}, {
							xtype : 'hidden',
							id : id_pre + '.fileIds',
							name : 'fileIds'
						}]
					}];
		}
		this.archivesId=archivesId;
		this.docGridPanel = new ArchivesUtil({
			panelId : 'infoCenterArchivesReceivePanel',
			isStart : true,
			archivesId : this.archivesId
			}).getGridPanelWithFullTools();

		var initStore=new Ext.data.SimpleStore({
								url : __ctxPath
										+ '/system/getInnersByDepIdsAppUser.do',
								autoLoad : false,
								fields : ['userId', 'fullname']
							});
		
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			id : 'infoCenterArchivesReceiveForm',
			url : __ctxPath + '/archive/saveNormalArchives.do',
			frame : false,
			border : false,
			labelWidth:70,
			width : 800,
			padding : '5px',
				reader : new Ext.data.JsonReader({
						root : 'data'
			}, [ {
					name : 'archives.archivesId',
					mapping : 'archivesId'
				}, {
					name : 'archives.issueDate',
					mapping : 'issueDate'
				}, {
					name : 'archives.depSignNo',
					mapping : 'depSignNo'
				}, {
					name : 'archives.writtenDate',
					mapping : 'writtenDate'
				}, {
					name : 'archives.issueDep',
					mapping : 'issueDep'
				}, {
				    name:'archives.status',
				    mapping:'status'
				}, {
					name : 'archives.subject',
					mapping : 'subject'
				}, {
					name : 'archives.fileCounts',
					mapping : 'fileCounts'
				}, {
					name : 'archives.privacyLevel',
					mapping : 'privacyLevel'
				}, {
					name : 'archives.reviewUser',
					mapping : 'reviewUser'
				}, {
					name : 'archives.urgentLevel',
					mapping : 'urgentLevel'
				}, /*{
					name : 'archives.issuer',
					mapping : 'issuer'
				}, {
					name : 'archives.issuerId',
					mapping : 'issuerId'
				}, */{
					name:'archives.orgDepName',
					mapping:'orgDepName'
				}, {
					name:'archives.archType',
					mapping:'archType'
				}, {
					name:'archives.orgDepId',
					mapping:'orgDepId'
				}, {
					name:'archives.archivesFiles',
					mapping:'archivesFiles'
				}, {
					name:'archives.limitedDate',
					mapping:'limitedDate'
				},{
					name:'archives.handlerUnames',
					mapping:'handlerUnames'
				}]),
			items : [{
						border : false,
						layout : 'column',
						defaults : {
							border : false,
							columnWidth : .33,
							layout : 'form',
							defaults : {
								width : 150,
								xtype : 'textfield',
								allowBlank : false
							}
						},
						items:[{
								xtype : "hidden",
								name : "archives.recDepIds",
								value:defId,
								id : "infoCenterArchivesReceiveForm.recDepIds"
							},{
								xtype : "hidden",
								name : "archives.recDepNames",
								id : "infoCenterArchivesReceiveForm.recDepNames"
							},{
								items:[
							 {
								fieldLabel : '编号名称',
								xtype : "combo",
								id : "infoCenterArchivesReceiveForm.snName",
								hiddenName : 'archives.snConfigId',
								valueField : 'snId',
								displayField : 'snName',
								editable : false,
								allowBlank : true,
								triggerAction : 'all',
								forceSelection : true,
								width : 150,
								store : new Ext.data.SimpleStore({
									url :__ctxPath + '/snconfig/getReceiveSignsFlowSnConfig.do?archType=1',
									autoLoad : true,
									fields : ['snId', 'snName']
								}),
								listeners : {
									'select' : function(cbo, record, index) {
										Ext.getCmp('infoCenterArchivesReceiveForm.snId').setValue(cbo.getValue());
//										if (Ext.get('infoCenterArchivesReceiveForm.snName').dom.value != '督办件') {
//											Ext.getCmp('archivesArchType').setValue('1');
//											Ext.getCmp('infoCenterArchivesReceiveForm.limitedDate').hide();
//											Ext.getCmp('archives.limitedDate').allowBlank = true;
//										} else {
//											Ext.getCmp('archivesArchType').setValue('2');
//											Ext.getCmp('infoCenterArchivesReceiveForm.limitedDate').show();
//											Ext.getCmp('archives.limitedDate').allowBlank = false;
//										}
									}
								}
							}, {
								xtype:'hidden',
//								name:'archives.snConfigId',
								id:'infoCenterArchivesReceiveForm.snId'
							},{
								xtype : 'combo',
								fieldLabel : '密級',
								name : 'archives.privacyLevel',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								store : ['一般', '秘密', '机密','绝密'],
								listeners: {
									'select':function(combo){
										if(combo.getValue()!='一般'){
											Ext.getCmp('infoCenterArchivesReceivePanelCounts').show();
											Ext.getCmp('infoCenterArchivesReceiveForm.fileCounts').allowBlank = true;
										}else{
											Ext.getCmp('infoCenterArchivesReceivePanelCounts').hide();
											Ext.getCmp('infoCenterArchivesReceiveForm.fileCounts').allowBlank = true;
										}
									}
								}
							},{
								xtype : 'combo',
								width : 150,
								fieldLabel : '文种分类',
								id: 'infoCenterArchivesReceiveForm.archivesType',
								hiddenName : "archives.archivesType.typeId",
								valueField : 'typeId',
								displayField : 'typeName',
								allowBlank : true,
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/archive/comboArchivesType.do',
											autoLoad : true,
											fields : ['typeId', 'typeName']
										})
							}]
						},{
							items:[{
								fieldLabel : '收文日期',
								xtype : 'datefield',
								format : 'Y-m-d',
								editable : false,
								allowBlank : false,
								name : 'archives.issueDate',
								value:new Date()
							},{
								xtype : 'combo',
								fieldLabel : '缓急',
								name : 'archives.urgentLevel',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								store : ['特急', '急件', '加急','平急']
							},{
								xtype : 'container',
								id:'infoCenterArchivesReceiveForm.limitedDate',
								style : 'padding:0px 0px 5px 0px;',
								layout : 'column',
								width : 260,
								hidden : true,
								items : [{
										xtype : 'label',
										text : '限办日期',
										width : 75
									}, {
									name : 'archives.limitedDate',
									xtype : 'datefield',
									format : 'Y-m-d',
									mode : 'local',
									id : 'archives.limitedDate',
									editable : false,
									allowBlank : true,
									value: new Date().add(Date.MONTH,1),
									width : 150
								}]
										}]
						},{
							items:[{
								xtype : 'textfield',
								fieldLabel : '来文号',
								name : 'archives.depSignNo',
								allowBlank : true
							},{ 
							    fieldLabel : '成文日期',
							    name : 'archives.writtenDate',
								xtype : 'datefield',
								format : 'Y-m-d',
								editable : false,
								allowBlank : true	
						}]
					}, {
								xtype : 'container',
								style : 'padding:0px 0px 5px 0px;',
								id : 'infoCenterArchivesReceivePanelCounts',
								layout : 'column',
								width : 260,
								hidden : true,
								items : [
									{
										xtype : 'label',
										style:"padding-top:4px;",
										text : '份号：',
										width : 75
									},{
										xtype : 'numberfield',
										editable : false,
										allowBlank : true,
										value:1,
										id : 'infoCenterArchivesReceiveForm.fileCounts',
										mode : 'local',
										name : 'archives.fileCounts',
										width : 155
								}]
							}]
					}, {
						xtype : 'textfield',
						fieldLabel : '来文单位',
						name : 'archives.issueDep',
						id : 'infoCenterArchivesReceiveForm.issueDep',
						width:670,
						allowBlank : false
					},{
						xtype : 'textfield',
						fieldLabel : '标   题',
						name : 'archives.subject',
						id : 'infoCenterArchivesReceiveForm.subject',
						width:670,
						allowBlank : false
					} ,{
						name : "archives.reviewUser",
						id : 'infoCenterArchivesReceiveForm.userId',
						xtype : 'hidden'
					},/*{
					    id : 'infoCenterArchivesReceiveForm.viceLeaders',
						xtype : 'container',
						layout : 'column',
						style : 'padding:0px 0px 8px 0px;margin-left:0px;',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									style:'padding-top:4px;',
									text : '拟办负责人:',
									width : 74
								}, {
									id : 'infoCenterArchivesReceiveForm.LeaderNames',
									name : "archives.reviewUserName",
									xtype : 'textfield',
									width : '75%',
									allowBlank: false,
									readOnly : true
								}, {
									xtype : 'button',
									iconCls : 'menu-department',
									style : 'padding-left:5px;',
									text : '选择人员',
									handler : function() {
										var url  =  __ctxPath + '/system/depUsersTreeDepartment.do?depIds='+roleMap.get('DepartmentCommonId');
										DepLeaders.getView(
												function(userIds, fullnames) {
													Ext.getCmp('infoCenterArchivesReceiveForm.userId').setValue(userIds);
													Ext.getCmp('infoCenterArchivesReceiveForm.LeaderNames')
															.setValue(fullnames);
												},true, null,url).show();
										}
								}]
					} ,*/{
						name : 'archives.status',
						xtype : 'hidden',
						value :  1
					},{
					    name : "archives.issuer",
						value : curUserInfo.fullname,
						xtype : 'hidden'
					}, {
						name : 'archives.snConfigId',
						id : 'infoCenterArchivesReceiveForm.snConfigId',
						xtype : 'hidden'
					}, {
						name : 'archives.archivesId',
						xtype : 'hidden'
					}, {
						name : 'archives.issuerId',
						value : curUserInfo.userId,
						xtype : 'hidden'
					},{
						name : 'archives.archType',
						id : 'archivesArchType',
						value : 1,
						xtype : 'hidden'
					},{
						xtype : 'fieldset',
						border : false,
						defaults : {
							anchor : '96.3%,96%'
						},
						items : [this.docGridPanel]
					},{
						layout : 'column',
						border : false,
						defaults : {
							layout : 'form',
							border : false
						},
						items : createFileUpdateCmp('infoCenterFileAttachments', '公文附件')
					},{
					   layout:'column',
					   style:'padding:6px 0px 0px 0px',
					   border:false,
					   items:[{
					   		layout:'form',
					   		border:false,
					   		items:[{	
				   					fieldLabel : '备注',
				   					id:'infoCenterReceiveArchivesForm.leaderOpinion',
									//name : 'leaderOpinion',
									name : 'archives.handlerUnames',
									autoScroll:true,
									maxLength:500,
									height:40,
									xtype:'textarea',
									width:595
									}]
					     	 }]
					}]
			
		});	
		Ext.Ajax.request({
								url : __ctxPath + '/archive/getdefnameArchives.do',
								params : {
									'defId' : defId
								},
								method:'post',
								success : function(response, options) {
									var data=Ext.util.JSON.decode(response.responseText);
									Ext.getCmp('infoCenterArchivesReceiveForm.recDepNames').setValue(data.name);
								}
							});
		if (archivesId) {
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ archivesId,
				waitMsg : '正在载入数据...',
				method:'post',
				success : function(form, action) {
					var fileAttach=new Array();
					var af=action.result.data['archives.archivesFiles'];
					var filePanel = Ext.getCmp('infoCenterFileAttachments.personFilePanel');
				    var fileIds = Ext.getCmp("infoCenterFileAttachments.fileIds");
		    		//Ext.getCmp('infoCenterArchivesReceiveForm.LeaderNames').setValue(Ext.decode(action.response.responseText).data[0].reviewUserName);
					if(af!=null){
							for (var i = 0; i < af.length; i++) {
								if (fileIds.getValue() != '') {
									fileIds.setValue(fileIds.getValue() + ',');
								}
								fileIds.setValue(fileIds.getValue() + af[i].fileId);
								Ext.DomHelper
										.append(
												filePanel.body,
												'<span><a href="#" onclick="FileAttachDetail.show('
														+ af[i].fileId
														+ ')">'
														+ af[i].fileName
														+ '</a><img class="img-delete" src="'
														+ __ctxPath
														+ '/images/system/delete.gif" onclick="removeFile(this,\'infoCenterFileAttachments.fileIds\','
														+ af[i].fileId
														+ ')"/>&nbsp;|&nbsp;</span>');
							  }
				    }
					var privacyLevel=action.result.data['archives.privacyLevel'];
					if(privacyLevel!='一般'){
						Ext.getCmp('infoCenterArchivesReceivePanelCounts').show();
						Ext.getCmp('infoCenterArchivesReceiveForm.fileCounts').allowBlank = true;
					}
					if(privacyLevel=='一般'){
						Ext.getCmp('infoCenterArchivesReceivePanelCounts').hide();
						Ext.getCmp('infoCenterArchivesReceiveForm.fileCounts').allowBlank = true;
					}
					var data = Ext.decode(action.response.responseText).data[0];
					Ext.getCmp('infoCenterArchivesReceiveForm.archivesType').setValue(data.parentArchId);
				},
				failure : function(form, action) {
				}
			});
		}
		
		infoCenterArchivesReceivePanel.superclass.constructor.call(this, {
			id : 'infoCenterArchivesReceivePanel',
			layout : 'form',
			items : [this.formPanel],
			modal : true,
			maximizable : true,
			autoHeight : true,
			width : 800,
			bodyStyle : "center",
			iconCls : 'menu-archive-draft',
			title : '重庆市港航管理局收文处理笺',
			buttonAlign : 'center',
			buttons : [{
				text : '启动流程',
				id : 'archivesReceiveButtonSave',
				iconCls : 'btn-save',
				scope : this,
				handler : this.save
			},{
								text :'保存草稿',
								iconCls : 'btn-beready-save',
								scope : this,
								handler : this.savedraft
							}]
		});
		var jsArr = [__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocHistoryWin.js',
				__ctxPath + '/js/archive/ArchiveTypeTempView.js',
				__ctxPath + '/js/archive/ArchTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateForm.js',
				__ctxPath + '/js/archive/OfficeTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateSelector.js',
				__ctxPath + '/js/archive/ArchivesUtil.js'];
		$ImportSimpleJs(jsArr, null);
	},
	save : function() {
		Ext.getCmp('infoCenterArchivesReceiveForm.issueDep').allowBlank = false;//来文单位
		Ext.getCmp('infoCenterArchivesReceiveForm.subject').allowBlank = false;//标题
		Ext.getCmp('infoCenterArchivesReceiveForm.snName').allowBlank = false;//编号
			var defId = this.defId;
			// 获取要提交的表单
			var formPanel = Ext.getCmp('infoCenterArchivesReceiveForm');
			if (formPanel.getForm().isValid()) {				
				if(archivesId){
					Ext.Ajax.request({
						url : __ctxPath + '/archive/updateIsReceiveArchives.do',
						params : {
							'archivesId' : archivesId
						},
						method:'post',
						success : function(response, options) {
						}
					});
				}
				var docCount = this.store.getCount();
				// 发文的文档附件
				var docParams = [];
				for (var i = 0; i < docCount; i++) {
					docParams.push(this.store.getAt(i).data);
				}
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
				var param = {
					defId : defId,
					startFlow : true,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo: sendInfo,
					userId : curUserInfo.userId,
					comments: Ext.getCmp('infoCenterReceiveArchivesForm.leaderOpinion').getValue()
				};
					Ext.Ajax.request({
						url : __ctxPath + '/snconfig/getSnNoFileSnConfig.do',
									params : {
										defId : defId,
										snConfigId : Ext.getCmp("infoCenterArchivesReceiveForm.snId").getValue()
									},
									method : 'POST',
									waitMsg : "正在生成编号，请稍等",
									success : function(response, options) {
										var archivesNo = Ext.util.JSON.decode(response.responseText).data;
										var url1=__ctxPath + '/archive/saveNormalArchives.do';
									    var url2=__ctxPath + '/archive/saveArchives.do';
						formPanel.getForm().submit({
							method : 'POST',
							url:archivesId?url2:url1,
							waitMsg : '正在提交表单数据...',
							params : {
								'archives.isArchive' : 1,
								'archives.isdraft' : 0,
								'archives.archivesNo' : archivesNo,
								docs : Ext.encode(docParams)
							},
							success : function(fp, action) {
								var archivesId = action.result.archivesId;
								var fileIds = Ext.getCmp('infoCenterFileAttachments.fileIds').getValue();
								if(fileIds=="")fileIds=0;
								Ext.apply(param,{
									fileIds:fileIds,
									archivesId: archivesId
								});
								//启动流程
								formPanel.getForm().submit({
									url : __ctxPath + '/flow/saveProcessActivity.do',
									waitMsg : '正在发起流程...',
									method : 'post',
									params : param,
									success :  function(response,options) {
										var processInsId = options.result.runId;
										Ext.Ajax.request({
												url : __ctxPath + '/archive/updateRunIdArchives.do',
												params : {
													'archivesId' : archivesId,
													'runId' : processInsId
												},
												method:'post',
												success : function(response, options) {
													Ext.ux.Toast.msg('操作信息', '登记成功！');
													Ext.getCmp('centerTabPanel').remove(Ext
															.getCmp('ProcessRunStart' + defId));
													refreshTaskPanelView();
													var IncomingGrid = Ext.getCmp('IncomingGrid');
													if (IncomingGrid != null) {
														IncomingGrid.getStore().reload();
													}
												}
											});
									}
								});
							},
							failure : function(fp, action) {
								Ext.MessageBox.show({
									title : '操作信息',
									msg : '提交表单出错，请联系管理员！',
									buttons : Ext.MessageBox.OK,
									icon : Ext.MessageBox.ERROR
								});
							}
						});},
						failure : function(response, options) {
							Ext.ux.Toast.msg('操作信息', '生成编号出错，请联系管理员！');
						}
					});
			}
	},
	savedraft : function() {
		Ext.getCmp('infoCenterArchivesReceiveForm.issueDep').allowBlank = true;//来文单位
		Ext.getCmp('infoCenterArchivesReceiveForm.subject').allowBlank = true;//标题
		Ext.getCmp('infoCenterArchivesReceiveForm.snName').allowBlank = true;//编号
		
		var docCount = this.store.getCount();
			var defId = this.defId;
			// 获取要提交的表单
			var formPanel = Ext.getCmp('infoCenterArchivesReceiveForm');
			if (formPanel.getForm().isValid()) {
			/*	if(archivesId){
					Ext.Ajax.request({
						url : __ctxPath + '/archive/updateIsReceiveArchives.do',
						params : {
							'archives.isdraft':1,
							'archivesId' : archivesId
						},
						method:'post',
						success : function(response, options) {
						}
					});
				}*/
				// 发文的文档附件
				var docParams = [];

				for (var i = 0; i < docCount; i++) {
					docParams.push(this.store.getAt(i).data);
				}
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
				var param = {
					defId : defId,
					startFlow : true,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo : sendInfo,
					userId : curUserInfo.userId,
					startUserId:curUserInfo.userId
				};
				// alert(Ext.util.JSON.encode(param));return false;
	/*Ext.Ajax.request({
						url : __ctxPath + '/snconfig/getSnNoFileSnConfig.do',
									params : {
										defId : defId,
										snConfigId : Ext.getCmp("infoCenterArchivesReceiveForm.snId").getValue()
									},
									method : 'POST',
									waitMsg : "正在生成编号，请稍等",
									success : function(response, options) {
										var archivesNo = Ext.util.JSON.decode(response.responseText).data;*/
									var url1=__ctxPath + '/archive/saveNormalArchives.do';
									var url2=__ctxPath + '/archive/saveArchives.do';
				formPanel.getForm().submit({
					method : 'POST',
					url:archivesId?url2:url1,
					waitMsg : '正在提交表单数据...',
					params : {
						'archives.isArchive' : 1,
						'archives.isdraft':1,
//						'archives.archivesNo' : archivesNo,
						docs :docParams.length>0?Ext.encode(docParams):null
					},
					success : function(fp, action) {
						var archivesId = action.result.archivesId;
						var fileIds = Ext
								.getCmp('infoCenterFileAttachments.fileIds')
								.getValue();
						if (fileIds == "")
							fileIds = 0;
						Ext.apply(param, {
									fileIds : fileIds,
									archivesId : archivesId
								});
								Ext.ux.Toast.msg('操作信息', '登记成功！');
								var IncomingGrid = Ext.getCmp('IncomingGrid');
									if (IncomingGrid != null) {
										IncomingGrid.getStore().reload();
									}
										Ext.getCmp('centerTabPanel').remove(Ext
												.getCmp('ProcessRunStart'
														+ defId));
										refreshTaskPanelView();
						// 启动流程
				/*		formPanel.getForm().submit({
							url : __ctxPath + '/flow/saveProcessActivity.do',
							waitMsg : '正在发起流程...',
							method : 'post',
							params : param,
							success : function(response, options) {
								var processInsId = options.result.runId;
								Ext.Ajax.request({
									url : __ctxPath
											+ '/archive/updateRunIdArchives.do',
									params : {
										'archivesId' : archivesId,
										'runId' : processInsId
									},
									method : 'post',
									success : function(response, options) {
										Ext.ux.Toast.msg('操作信息', '登记成功！');
										Ext.getCmp('centerTabPanel').remove(Ext
												.getCmp('ProcessRunStart'
														+ defId));
										refreshTaskPanelView();
									}
								});
							}
						});*/
					},
					failure : function(fp, action) {
						Ext.MessageBox.show({
									title : '操作信息',
									msg : '提交表单出错，请联系管理员！',
									buttons : Ext.MessageBox.OK,
									icon : Ext.MessageBox.ERROR
								});
					}
				});/*},
						failure : function(response, options) {
							Ext.ux.Toast.msg('操作信息', '生成编号出错，请联系管理员！');
						}
					});*/
			}
		
	}
})