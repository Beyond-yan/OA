XZFYSentArchiveReStart = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		XZFYSentArchiveReStart.superclass.constructor.call(this, {
					id : 'XZFYSentArchiveReStart',
					title : '行政复议决定书处理笺',
					layout : 'form',
					iconCls : 'menu-archive-draft',
					modal : true,
					width : 900,
					maximizable : true,
					items : [this.formPanel],
					buttonAlign : 'center',
					buttons : [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end]
				});
		var jsArr = [__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocHistoryWin.js',
				__ctxPath + '/js/archive/ArchiveTypeTempView.js',
				__ctxPath + '/js/archive/ArchTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateForm.js',
				__ctxPath + '/js/archive/OfficeTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateSelector.js'];
		$ImportSimpleJs(jsArr, null);

	},
	save : function(formPanel, panel, signalName, activityName, destination) {
		Ext.getCmp('XZFYSentArchiveReStart.sources').allowBlank = false;//行文方向
		Ext.getCmp('XZFYSentArchiveForm.flowAssignId').allowBlank = false;//核稿
		Ext.getCmp('XZFYSentArchiveForm.flowAssignName').allowBlank = false;//核稿
		Ext.getCmp('XZFYSentArchiveForm.archives.sendTo').allowBlank = false;//主送
		Ext.getCmp('XZFYSentArchiveReStart.isStandard').allowBlank = false;//是否规范性文件
		Ext.getCmp('XZFYSentArchiveForm.issueDep').allowBlank = false;//发文单位
		Ext.getCmp('XZFYSentArchiveReStart.archivesType').allowBlank = false;//文种
		Ext.getCmp('XZFYSentArchiveForm.subject').allowBlank = false;//标题
		var defId = '${defId}';
		var archivesId='${archivesId}';
		var result = "呈部门负责人核稿";
		var flowAssignId = Ext.getCmp("XZFYSentArchiveForm.flowAssignId").getValue();
		if (formPanel.getForm().isValid()) {
			var docParams = [];
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
				docParams.push(panel.store.getAt(i).data);
			}
			var url1 = __ctxPath + '/archive/saveNormalArchives.do';
			var url2 = __ctxPath + '/archive/saveArchives.do';
			formPanel.getForm().submit({
				url : archivesId ? url2 : url1,
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					'archives.isdraft' : 0,
					docs : Ext.encode(docParams)
				},
				success : function(fp, action) {
					var archivesId = action.result.archivesId;
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					var isReserveNo=formPanel.getCmpByName('archives.isReserveNo').getGroupValue();
					var option=formPanel.getCmpByName('depOption').getGroupValue();
					var fileIds = Ext.getCmp('XZFYSentArchiveForm.sentAttachments.fileIds')
							.getValue();
					formPanel.getForm().submit({
						url : __ctxPath + '/flow/nextProcessActivity.do',
						method : 'post',
						waitMsg : '正在提交数据...',
						params : {
							taskId : panel.taskId,
							signalName : signalName,
							activityName : activityName,
							sendUserId : curUserInfo.userId,
							isReserveNo: isReserveNo,
							sendMail : sendMail,
							sendMsg : sendMsg,
							sendInfo : sendInfo,
							archivesId : archivesId,
							fileIds : fileIds ? fileIds : '_',
                            nigaoOption:option,
							flowAssignId : flowAssignId
						},
						success : function(result, action) {
							Ext.ux.Toast.msg('操作信息', '成功保存！');
							Ext.getCmp('centerTabPanel').remove(Ext
									.getCmp('ProcessForm' + panel.taskId));
							refreshTaskPanelView();
						},
						failure : function(fp, action) {
							Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
						}
					});
				}

			})
		}
	},
	initUIComponents : function() {
		this.archivesId = '${archivesId}';
		function createFileUpdateCmp(id_pre, label) {
			return [{
						columnWidth : .8,
						items : [{
									fieldLabel : label,
									xtype : 'panel',
									id : id_pre + '.personFilePanel',
									frame : false,
									border : true,
									bodyStyle : 'padding:4px 4px 4px 4px;',
									height : 80,
									autoScroll : true,
									html : ''
								}]
					}, {
						columnWidth : .2,
						padding : '0 0 0 20px',
						items : [{
							border : false,
							xtype : 'button',
							text : '添加文件',
							iconCls : 'menu-attachment',
							handler : function() {
								var dialog = App.createUploadDialog({
									file_cat : 'document',
									judge_size : 'no',
									upload_autostart : true,
									callback : function(data) {
										var fileIds = Ext.getCmp(id_pre
												+ '.fileIds');
										var filePanel = Ext.getCmp(id_pre
												+ '.personFilePanel');
										var fileNames="";
										for (var i = 0; i < data.length; i++) {
											if (fileIds.getValue() != '') {
												fileIds.setValue(fileIds
														.getValue()
														+ ',');
											}
											fileIds.setValue(fileIds.getValue()
													+ data[i].fileId);
											if(i>0){
												fileNames+=" ";
											}
											fileNames+=data[i].filename;
											Ext.DomHelper
													.append(
															filePanel.body,
															'<span><a href="#" onclick="FileAttachDetail.show('
																	+ data[i].fileId
																	+ ')">'
																	+ data[i].filename
																	+ '</a> <img class="img-delete" src="'
																	+ __ctxPath
																	+ '/images/system/delete.gif" onclick="removeFile(this,\''
																	+ id_pre
																	+ '.fileIds\','
																	+ data[i].fileId
																	+ ')"/>&nbsp;|&nbsp;</span>');

										}
									}
								});
								dialog.show(this);
							}
						}, {
							xtype : 'button',
							text : '清除文件',
							iconCls : 'reset',
							handler : function() {
								var fileAttaches = Ext.getCmp(id_pre
										+ '.fileIds');
								var filePanel = Ext.getCmp(id_pre
										+ '.personFilePanel');

								filePanel.body.update('');
								fileAttaches.setValue('');
							}
						}, {
							xtype : 'hidden',
							id : id_pre + '.fileIds',
							name : 'fileIds'
						}]
					}];
		}
		// 初始化附件文档
	 	this.docGridPanel = new ArchivesUtil({
			panelId :'XZFYSentArchiveReStart',
			isStart : true,
			archType: 0,
			archivesId : this.archivesId
		}).getGridPanelWithFullTools();
		this.formPanel = new Ext.FormPanel({
			id : 'XZFYSentArchiveForm',
			url : __ctxPath + '/archive/saveNormalArchives.do',
			frame : false,
			border : false,
			layout : 'form',
			labelWidth : 80,
			width : 900,
			padding : '5px',
			reader : new Ext.data.JsonReader({
						root : 'data'
					}, [{
								name : 'archives.archivesId',
								mapping : 'archivesId'
							}, {
								name : 'archives.issueDep',
								mapping : 'issueDep'
							}, {
								name : 'archives.subject',
								mapping : 'subject'
							}, {
								name : 'archives.isReserveNo',
								mapping : 'isReserveNo'
							}, {
								name : 'archives.fileCounts',
								mapping : 'fileCounts'
							}, {
								name : 'archives.privacyLevel',
								mapping : 'privacyLevel'
							}, {
								name : 'archives.urgentLevel',
								mapping : 'urgentLevel'
							}, {
								name : 'archives.issuer',
								mapping : 'issuer'
							}, {
								name : 'archives.sources',
								mapping : 'sources'
							}, {
								name : 'archives.isPublic',
								mapping : 'isPublic'
							}, {
								name : 'archives.reviewUser',
								mapping : 'reviewUser'
							}, {
								name : 'archives.reviewUserName',
								mapping : 'reviewUserName'
							}, {
								name : 'archives.sendTo',
								mapping : 'sendTo'
							}, {
								name : 'archives.ccTo',
								mapping : 'ccTo'
							}, {
								name : 'archives.isStandard',
								mapping : 'isStandard'
							}, {
								name : 'archives.unPublicReasons',
								mapping : 'unPublicReasons'
							}]),
			items : [{
				border : false,
				layout : 'column',
				defaults : {
					border : false,
					columnWidth : .33,
					layout : 'form',
					defaults : {
						width : 200,
						xtype : 'textfield',
						allowBlank : false
					}
				},
				items : [{

					items : [{
							name : 'archives.archivesId',
							xtype : 'hidden'
						}, {
							xtype : "hidden",
							name : "archives.recDepIds",
							id : "XZFYSentArchiveReStart.recDepIds"
						}, {
							xtype : "hidden",
							name : "archives.recDepNames",
							id : "XZFYSentArchiveReStart.recDepNames"
						},{
								xtype : 'hidden',
								name : 'archives.issuerId',
								value : curUserInfo.userId
							}, {
								xtype : 'hidden',
								name : 'archives.archType',
								id : 'archivesArchType',
								value : 0
							}, {
								fieldLabel : "拟稿部门",
								id : 'XZFYSentArchiveForm.orgDepName',
								name : 'archives.orgDepName',
								value : curUserInfo.depName,
								readOnly : true
							}, {
								xtype : 'combo',
								fieldLabel : "发文单位",
								name : 'archives.issueDep',
								id : 'XZFYSentArchiveForm.issueDep',
								triggerAction : 'all',
								lazyRender : true,
								editable : false,
								fieldLabel : '发文单位',
								store : ['重庆市交通委员会', 
										'中共重庆市交通委员会', '中共重庆市交通委员会机关党委',
										'中共重庆市交通纪律检查委员会', '共青团重庆市交通委员会',
										'重庆市交通委员会直属机关工会']

							},{
								xtype : 'combo',
								name : 'archives.sources',
								id:'XZFYSentArchiveReStart.sources',
								triggerAction : 'all',
								editable : false,
								fieldLabel : '行文方向',
								store : ['上行文', '平行文', '下行文']
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '缓急',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								name : 'archives.urgentLevel',
								emptyText : '急缓程度',
								store : ['特急', '急件', '加急', '平急']
							}, {
								fieldLabel : '拟稿',
								name : "archives.issuer",
								readOnly : true,
								value : curUserInfo.fullname
							}, {
								xtype : 'combo',
								fieldLabel : '文种',
								hiddenName : "archives.archivesType.typeId",
								id : 'XZFYSentArchiveReStart.archivesType',
								valueField : 'typeId',
								displayField : 'typeName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/archive/comboArchivesType.do',
											autoLoad : true,
											fields : ['typeId', 'typeName']
										})
							}]
				},  {
					items : [{
								xtype : "combo",
								fieldLabel : '密级',
								triggerAction : 'all',
								editable : false,
								allowBlank : true,
								name : 'archives.privacyLevel',
								emptyText : '一般',
								store : ['一般']
							},{
								xtype : 'numberfield',
								id : 'XZFYSentArchiveReStart.fileCounts',
								name : 'archives.fileCounts',
								fieldLabel : '份数',
								value : 1
							}]
						}]
					},{
						xtype : 'textfield',
						name : 'archives.subject',
						id : 'XZFYSentArchiveForm.subject',
						allowBlank : false,
						width : '96.5%',
						fieldLabel : '标题'
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style : 'padding:0px 0px 0px 0px;',
							text : '主送:',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.sendTo',
							width : '76.5%',
							// readOnly : true,
							id : 'XZFYSentArchiveForm.archives.sendTo'
						}, {
							style : 'padding-left:5px;',
							xtype : 'button',
							iconCls : 'btn-dep-sel',
							text : '常用主送单位',
							handler : function() {
								UnitsSelector.getView(
									function(ids, names) {
										Ext.getCmp('XZFYSentArchiveForm.archives.sendTo')
											.setValue(names);
										}, false,1).show();
							}
						}]
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					border : false
				},
				items : [{
							xtype : 'label',
							style : 'padding:0px 0px 0px 0px;',
							text : '抄送:',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.ccTo',
							width : '76.5%',
							// readOnly : true,
							id : 'XZFYSentArchiveForm.archives.ccTo'
						},{
							xtype : 'button',
							style : 'padding-left:5px;',
							iconCls : 'menu-department',
							text : '常用抄送单位',
							handler : function() {
								UnitsSelector.getView(
									function(ids, names) {
										Ext.getCmp('XZFYSentArchiveForm.archives.ccTo')
											.setValue(names);
										}, false,2).show();
							}
						}]
			},{
				xtype : 'radiogroup',
				allowBlank : false,
				width : 400,
				items : [{
					boxLabel : '处室初核',
					name : 'depOption',
					inputValue : 1,
					checked : true,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
							}
						}
					}
				}, {
					boxLabel : '处室复核',
					name : 'depOption',
					inputValue : 2,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
							}
						}
					}
				}],
				fieldLabel : '审批步骤'
			},{
				xtype : 'container',
				id : 'XZFYSentArchiveForm.leader',
				style:'padding:6px 0px 0px 0px',
				layout : 'column',
				height : 30,
				defaults : {
					border : false
				},
				items : [{
					xtype : 'label',
					text : '核稿人员:',
					width : 85
				}, {
					id : 'XZFYSentArchiveForm.flowAssignId',
					name:'archives.reviewUser',
					xtype : 'hidden',
				}, {
					id : 'XZFYSentArchiveForm.flowAssignName',
					name:'archives.reviewUserName',
					xtype : 'textfield',
					width : '76.5%',
					allowBlank: false,
					readOnly : true
				}, {
					xtype : 'button',
					iconCls : 'menu-department',
					style : 'padding-left:5px;',
					text : '选择人员',
					handler : function() {
						var url  = __ctxPath + '/system/depLeadersTreeDepartment.do?depIds='+curUserInfo.depId;
						DepLeaders.getView(
							function(userIds, fullnames) {
								Ext.getCmp('XZFYSentArchiveForm.flowAssignId').setValue(userIds);
								Ext.getCmp('XZFYSentArchiveForm.flowAssignName').setValue(fullnames);
						},true, null,url).show();
					}
				}]
			}, {
				xtype : 'fieldset',
				border : false,
				defaults : {
					anchor : '98%,98%'
				},
				items : [this.docGridPanel,{
				xtype : 'container',
				layout : 'column',
				style : 'padding:10px 0px 8px 0px;margin-left:5px;',
				defaults : {
					allowBlank : true,
					border : false
				},
				items : [{
							xtype : 'label',
							text : '附件：',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.enclosure',
							width : '89%',
							id : 'XZFYSentArchiveForm.enclosure'
						}]
			}, {
							layout : 'column',
							border : false,
							padding : '5px',
							defaults : {
								layout : 'form',
								border : false
							},
							items : createFileUpdateCmp('XZFYSentArchiveForm.sentAttachments',
									'公文附件')
						}]
			}, {
				id : 'XZFYSentArchiveForm.isReserveNo',
				border : false,
				labelWidth:105,
				layout : 'form',
				items : {
					xtype : 'radiogroup',
					id:'XZFYSentArchiveForm.radiogroup',
					fieldLabel : '是否使用预约编号',
					hideParent : true,
					items : [{
								boxLabel : '是',
								name : 'archives.isReserveNo',
								inputValue : 1
							}, {
								boxLabel : '否',
								name : 'archives.isReserveNo',
								inputValue : 0
							}]
				}
			}, {
				border:false,
				labelWidth:105,
				layout:'form',
				items:{
					xtype : 'radiogroup',
					id : 'XZFYSentArchiveReStart.isStandard',
					fieldLabel : '是否规范性文件',
					allowBlank : false,
					// value : 0,
					items : [{
						boxLabel : '是',
						name : 'archives.isStandard',
						//checked : true,
						inputValue : 1
					}, {
						boxLabel : '否',
						name : 'archives.isStandard',
						id : 'XZFYSentArchiveReStart.standard',
						inputValue : 0
					}]
				}
			}]
		});
		if (this.archivesId) {
			this.formPanel.getForm().load({
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ this.archivesId,
				waitMsg : '正在载入数据...',
				success : function(form, action) {
					var isStandard = action.result.data['archives.isStandard'];
					var isReserveNo = action.result.data['archives.isReserveNo'];
					var privacyLevel = action.result.data['archives.privacyLevel'];
					Ext.getCmp('XZFYSentArchiveReStart.archivesType')
							.getStore().load({
								callback : function() {
									// 等待数据加载完成才进行赋值，不然由于异步会出现先赋值后加载完成。
									Ext
											.getCmp('XZFYSentArchiveReStart.archivesType')
											.setValue(Ext
													.decode(action.response.responseText).data[0].parentArchId);
								},
								scope : Ext
										.getCmp('XZFYSentArchiveReStart.archivesType')
										.getStore(),// 表示作用范围
								add : false
									// 为false表示数据不累加
							});
					Ext.getCmp('XZFYSentArchiveForm.enclosure').setValue(Ext.decode(action.response.responseText).data[0].enclosure);		
					Ext.get('XZFYSentArchiveForm.flowAssignId').setValue = action.result.data['archives.reviewUser'];
					Ext.get('XZFYSentArchiveForm.flowAssignName').setValue = action.result.data['archives.reviewUserName'];
					if(isStandard==-1){
						Ext.getCmp('XZFYSentArchiveReStart.standard')
								.setValue(null);
					}else if (isStandard == 0) {
						Ext.getCmp('XZFYSentArchiveReStart.standard')
								.setValue(0);
					} else {
						Ext.getCmp('XZFYSentArchiveReStart.standard')
								.setValue(1);
					}if (null == isReserveNo || "" == (""+isReserveNo+"")){
					}else if (0 == isReserveNo){
						Ext.getCmp('XZFYSentArchiveForm.radiogroup').setValue(0);
					}else {
						Ext.getCmp('XZFYSentArchiveForm.radiogroup').setValue(1);
					}
					var data = Ext.decode(action.response.responseText).data[0];
					// Ext.getCmp('XZFYSentArchiveReStart.archivesType').setValue(data.parentArchId);
					// Ext.getCmp('ZSGHSentArchiveRestart.flowAssignId').setValue(data.reviewUser);
					var filePanel = Ext.getCmp('XZFYSentArchiveForm.sentAttachments.personFilePanel');
					var fileIds = Ext.getCmp("XZFYSentArchiveForm.sentAttachments.fileIds");
					// Ext.Ajax.request({
					// url : __ctxPath + '/archive/getAttachFilesArchives.do',
					// params : {
					// 'fileIds' : '${fileIds}'
					// },
					// method:'post',
					// success : function(response, options) {
					var af = Ext.decode(action.response.responseText).data[0].archivesFiles;
					if (af != null) {
						for (var i = 0; i < af.length; i++) {
							if (fileIds.getValue() != '') {
								fileIds.setValue(fileIds.getValue() + ',');
							}
							fileIds.setValue(fileIds.getValue() + af[i].fileId);
							Ext.DomHelper
									.append(
											filePanel.body,
											'<span><a href="#" onclick="FileAttachDetail.show('
													+ af[i].fileId
													+ ')">'
													+ af[i].fileName
													+ '</a><img class="img-delete" src="'
													+ __ctxPath
													+ '/images/system/delete.gif" onclick="removeFile(this,\'XZFYSentArchiveReStart.fileIds\','
													+ af[i].fileId
													+ ')"/>&nbsp;|&nbsp;</span>');
						}
					}
					// }
					// });
				},
				failure : function(form, action) {
					Ext.ux.Toast.msg('编辑', '载入失败');
				}
			});
		}	
	}
})
