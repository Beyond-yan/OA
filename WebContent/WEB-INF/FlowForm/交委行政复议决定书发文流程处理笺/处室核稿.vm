XZFYSentArchiveDepCheck = Ext.extend(Ext.Panel, {
	taskId : null,
	setTaskId : function(vId) {
		this.taskId = vId;
	},
	getTaskId : function() {
		return this.taskId;
	},
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		XZFYSentArchiveDepCheck.superclass.constructor.call(this, {
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					id : 'XZFYSentArchiveDepCheckWin',
					modal : true,
					height : 680,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : this.buttons
				});
	},
	initUIComponents : function() {

		this.displayPanel = new Ext.Panel({
			autoScroll : true,
			autoHeight : true,
			id :'XZFYSentArchiveDepCheck.displayPanel',
			border : false,
			autoLoad : {
				url : __ctxPath
				+ '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=${fileIds}&defId=${defId}&sentPanelId=XZFYSentArchiveDepCheck',
				nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			url : __ctxPath + '/archive/saveDepLeaderRead.do',
			id : 'XZFYSentArchiveDepCheckForm',
			defaults : {
				anchor : '98%,98%'
			},
			items : [new ArchivesUtil({
						panelId : 'XZFYSentArchiveDepCheckWin',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),{
						name : 'archives.archivesId',
						xtype : 'hidden',
						value : '${archivesId}'
					}, {
						xtype : 'radiogroup',
						allowBlank : false,
						width : 100,
						items : [{
							boxLabel : '办公室审核',
							name : 'depOption',
							inputValue : 2,
							checked : true,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('XZFYSentArchiveDepCheck.signDep').hide();
										Ext.getCmp('XZFYSentArchiveDepCheck.signerNames').allowBlank = true;
									}
								}
							}
						}, {
							boxLabel : '处室会签(部门发起)',
							name : 'depOption',
							inputValue : 1,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('XZFYSentArchiveDepCheck.signDep').show();
										Ext.getCmp('XZFYSentArchiveDepCheck.signerNames').allowBlank = false;
									}
								}
							}
						}],
						fieldLabel : '审批步骤'
					}, 
						{
						xtype : 'container',
						id : 'XZFYSentArchiveDepCheck.signDep',
						layout : 'column',
						hidden:true,
						style : 'padding-left:0px;margin-left:0px;',
						height : 30,
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '会签人员:',
									style : 'padding:0px 0px 0px 0px;',
									width : 104
								}, {
									id : 'XZFYSentArchiveDepCheck.signerNames',
									xtype : 'textfield',
									width : '70%',
									allowBlank : true,
									readOnly : true
								}, {
									id : 'XZFYSentArchiveDepCheck.signdepIds',
									xtype : 'hidden'
								}, {
									xtype : 'button',
									iconCls : 'menu-department',
									text : '选择人员',
									handler : function() {
										var url = __ctxPath + '/system/depLeadersTreeDepartment.do?roles='+roleMap.get('officeDirectorRoleID')+','+roleMap.get('officeDeputyDirectorRoleID');
										DepLeaders.getView(
												function(userIds, userNames) {
													Ext.getCmp('XZFYSentArchiveDepCheck.signdepIds').setValue(userIds);
													Ext.getCmp('XZFYSentArchiveDepCheck.signerNames')
															.setValue(userNames);
												}, false, null,url).show();
									}
								}]
					}, {
						layout:'column',
					   border:false,
					   items:[{
					   		layout:'form',
					   		border:false,
					   		items:[ {fieldLabel : '审批意见',
										name : 'leaderRead.leaderOpinion',
										id:'XZFYSentArchiveDepCheckForm.leaderOpinion',
										autoScroll:true,
										maxLength:500,
										xtype:'textarea',
										width:466,
										height:40
									}]
					      },{
					   		layout:'form',
					   		style:'padding-top:10px;padding-left:5px;',
					   		border:false,
					   		items:[{
									xtype : 'button',
									text : '常用批示语',
									iconCls : 'menu-new-document',
									handler : function() {
										OdCommentsSelector.getView(
											function(id, name) {
											var fm = Ext
												.getCmp('XZFYSentArchiveDepCheckForm');
												fm
												.getCmpByName('leaderRead.leaderOpinion')
												.setValue(name);
												}, true).show();
										}
									}]
					   }]
					}, {
						name : 'leaderRead.checkName',
						xtype : 'hidden',
						value : #foreach ($v in $nextTrans)
								'${v.source}'
							#end
					}, {
						name : 'leaderRead.depName',
						xtype : 'hidden',
						value : curUserInfo.depName
					}]
		});
		
		if(taskId){
			Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				if(prevDestName.toString().indexOf("会签")!=-1){
					Ext.getCmp('XZFYSentArchiveDepCheck.return').hide();
				}
			},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
		}
		
		this.buttons = [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								}),
								new Ext.Button({
								   iconCls:'btn-changeTask',
								   id:'XZFYSentArchiveDepCheck.return',
								   text:'退回',
								   handler:this.backsetp.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end];
	},
	
	backsetp:function(formPanel, panel, signalName, activityName, destination) {
		/*if (panel.store.getCount() == 0) {
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}*/
		Ext.getCmp('XZFYSentArchiveDepCheck.signerNames').allowBlank=true;
		if (formPanel.getForm().isValid()) {
			var sendMail = msgPanel.getCmpByName('sendMail').getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			var option ='return';
			result='呈重新发起';
			var params = {
					depLeaderOption:option,//部门下一步审核人
					checkId:curUserInfo.userId,
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo : sendInfo,
//					status: result,
					flowAssignId:'${sendUserId}',
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
			};
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
				method : 'post',
				waitMsg : '正在提交数据...',
                timeout : 120000,
				params : params,
				success : function(fp, action) {
					## Ext.ux.Toast.msg('操作信息', '退回上一步成功！');
                    // --无后续的错误友好提示开始
                    var jsonResult = action.result;
                    if (jsonResult) {
                        if (jsonResult && jsonResult.success == "true") {
                            Ext.ux.Toast.msg("操作信息", "操作成功！");
                        } else {
                            var resultMsg = "信息保存出错，请联系管理员！";
                            var resuIcon = Ext.MessageBox.ERROR;
                            if (jsonResult.message && jsonResult.message != null) {
                                resultMsg = jsonResult.message;
                                if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
                                    resuIcon= Ext.MessageBox.WARNING;
                                }
                            }
                            Ext.MessageBox.show({
                                title : '操作信息',
                                msg : resultMsg,
                                buttons : Ext.MessageBox.OK,
                                icon : resuIcon
                            });
                        }
                    }
                    // --无后续的错误友好提示结束
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
				},
				failure : function(fp, action) {
					## Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
                    Ext.MessageBox.show({
                        title : '操作信息',
                        msg : '当前系统繁忙，请稍后再处理！',
                        buttons : Ext.MessageBox.OK,
                        icon : Ext.MessageBox.WARNING
                    });
				}
			});
		}
	},
	
	save : function(formPanel, panel, signalName, activityName, destination) {
		/*if (panel.store.getCount() == 0) {
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}*/
		if (formPanel.getForm().isValid()) {
			var option = formPanel.getCmpByName('depOption').getGroupValue();
			var sendMail = msgPanel.getCmpByName('sendMail').getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			var depNext = option;// 部门下一步审核人
			var depLeaderOption = '';
			var result  = '';
			var params = {
					depExerId:curUserInfo.userId,
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					ccUserIds : ccPanel.getCmpByName('ccIds').getValue(),
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo : sendInfo,
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
			};
			
			if (1 == option ) {	// 会签
				depLeaderOption = 'sign';
				result = '呈处室会签(部门发起)';
				var signUserIds = Ext.getCmp('XZFYSentArchiveDepCheck.signdepIds').getValue();
				Ext.apply(params,{
					depLeaderOption : depLeaderOption,
					signUserIds : signUserIds,
//					status:result,
					destName : '处室会签(部门发起)'
					
				});
			} 
			else if(2 == option){ // 处室
				depLeaderOption = 'office';
				result = '呈办公室审核';
				Ext.apply(params,{
					depLeaderOption : depLeaderOption,
//					status : result,
					destName :  '办公室审核'// ,
					// flowAssignId : Ext.getCmp('officeSigner').getValue()
				});
			}
			else{
				depLeaderOption = 'return';
				result = '重新发起';
				Ext.apply(params,{
					depLeaderOption : depLeaderOption,
					destName : '重新发起',
//					status : result,
					flowAssignId : '${sendUserId}'
				});
			}
			//alert(Ext.util.JSON.encode(params)); return false;
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
				method : 'post',
				waitMsg : '正在提交数据...',
                timeout : 120000,
				params : params,
				success : function(fp, action) {
					## Ext.ux.Toast.msg('操作信息', '核稿成功！');
                    // --无后续的错误友好提示开始
                    var jsonResult = action.result;
                    if (jsonResult) {
                        if (jsonResult && jsonResult.success == "true") {
                            Ext.ux.Toast.msg("操作信息", "操作成功！");
                        } else {
                            var resultMsg = "信息保存出错，请联系管理员！";
                            var resuIcon = Ext.MessageBox.ERROR;
                            if (jsonResult.message && jsonResult.message != null) {
                                resultMsg = jsonResult.message;
                                if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
                                    resuIcon= Ext.MessageBox.WARNING;
                                }
                            }
                            Ext.MessageBox.show({
                                title : '操作信息',
                                msg : resultMsg,
                                buttons : Ext.MessageBox.OK,
                                icon : resuIcon
                            });
                        }
                    }
                    // --无后续的错误友好提示结束
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
				},
				failure : function(fp, action) {
					## Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
                    Ext.MessageBox.show({
                        title : '操作信息',
                        msg : '当前系统繁忙，请稍后再处理！',
                        buttons : Ext.MessageBox.OK,
                        icon : Ext.MessageBox.WARNING
                    });
				}
			});
		}
	}// end of save
})