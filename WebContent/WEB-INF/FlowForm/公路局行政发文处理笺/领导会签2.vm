GLJleaderSentArchiveCheck = Ext.extend(Ext.Panel, {
	taskId : null,
	setTaskId : function(vId) {
		this.taskId = vId;
	},
	getTaskId : function() {
		return this.taskId;
	},
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		GLJleaderSentArchiveCheck.superclass.constructor.call(this, {
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					id : 'GLJleaderSentArchiveCheckWin',
					modal : true,
					height : 650,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : this.buttons
				});
	},
	initUIComponents : function() {

		this.displayPanel = new Ext.Panel({
			id :'GLJleaderSentArchiveDepCheck.displayPanel',
			autoScroll : true,
			autoHeight : true,
			border : false,
			autoLoad : {
				url : __ctxPath
		        + '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=$!{fileIds}&defId=${defId}&sentPanelId=GLJleaderSentArchiveDepCheck',
				nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			url : __ctxPath + '/archive/saveDepLeaderRead.do',
			id : 'GLJleaderSentArchiveCheckForm',
			defaults : {
				anchor : '98%,98%'
			},
			items : [ new ArchivesUtil({
						panelId : 'GLJleaderSentArchiveCheckWin',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(), {
						xtype : 'container',
						id : 'GLJleaderSentArchiveCheck.signDep',
						layout : 'column',
				        style:'padding-top:10px;',
						height : 30,
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '签发人员：',
									style : 'padding:0px 0px 0px 0px;',
									width : 104
								}, {
									id : 'GLJleaderSentArchiveCheck.signerNames',
									xtype : 'textfield',
									width : 445,
									allowBlank : false,
									readOnly : true
								}, {
									id : 'GLJleaderSentArchiveCheck.signdepIds',
									xtype : 'hidden'
								}, {
									xtype : 'button',
									iconCls : 'menu-department',
									text : '选择人员',
									handler : function() {
										var url  =  __ctxPath + '/system/depUsersTreeDepartment.do?depIds=1247027';
										DepLeaders.getView(
											function(userIds, userNames) {
												Ext.getCmp('GLJleaderSentArchiveCheck.signdepIds').setValue(userIds);
												Ext.getCmp('GLJleaderSentArchiveCheck.signerNames')
														.setValue(userNames);
											}, false, null,url).show();
									}
								}]
					}, {
						xtype : 'container',
						layout : 'column',
						style:'padding-top:10px;',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '审批意见：',
									width : 105
								}, {
									name : 'leaderRead.leaderOpinion',
									xtype : 'textarea',
									maxLength :500,
									width : 440,
									height:40
								},{
									xtype : 'button',
									text : '常用批示语',
									style:'padding-top:10px;',
									iconCls : 'menu-new-document',
									handler : function() {
										OdCommentsSelector.getView(
											function(id, name) {
												Ext.getCmp('GLJleaderSentArchiveCheckForm')
													.getCmpByName('leaderRead.leaderOpinion')
													.setValue(name);
											}, true).show();
										}
								}]
					},{
						id : 'GLJleaderSentArchiveDepCheck.reFileId',
						xtype : 'hidden'
					}]
		});
		if(taskId){
			Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				if(prevDestName.toString().indexOf("会签")!=-1){
					Ext.getCmp('ZLGCJSDisciplineCheckSentArchiveDepCheck.return').hide();
				}
			},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
		}
		this.buttons = [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								}),
								new Ext.Button({
								   iconCls:'btn-changeTask',
								   text:'退回',
								   id:'ZLGCJSDisciplineCheckSentArchiveDepCheck.return',
								   handler:this.backsetp.createCallback(this.formPanel,this,'${v.source}')
								})
								#set ($count=$count+1)
						#end];
	},
	backsetp:function(formPanel,panel,activityName){
//		if (panel.store.getCount() == 0) {
//			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
//			return false;
//		}
		 Ext.getCmp('GLJleaderSentArchiveCheck.signerNames').allowBlank=true;
		 Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : panel.taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				var prevFlowAssignId =  processForm[0].creatorId;
				var docParams=Ext.getCmp("GLJleaderSentArchiveDepCheck.reFileId");
				for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
					if(panel.store.getAt(i).data.fileId!=''){
						if(docParams.getValue()!=""){
							docParams.setValue(docParams.getValue()+',');
						} 
					} 
					docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
				}
				formPanel.getForm().submit({
						url:__ctxPath+ "/flow/nextProcessActivity.do",
						method:'post',
						waitMsg:'正在提交处理，请稍等',
						scope:this,
						params:{
								taskId : panel.taskId,
								signalName : prevSignalName,
								activityName : activityName,
								comments : '退回',
								destName : prevDestName,
								status : '已办理',
								sendMail : msgPanel.getCmpByName('sendMail').getValue(),
								sendMsg : msgPanel.getCmpByName('sendMsg').getValue(),
								sendInfo : msgPanel.getCmpByName('sendInfo').getValue(),
								//看是否指定了执行人员
								flowAssignId : prevFlowAssignId
						},
						success : function(fp, action) {
//							Ext.Ajax.request({
//								url : __ctxPath + "/archive/updateArchDocsArchives.do",
//								params : {
//										  arcRecfileIds : Ext.getCmp('GLJleaderSentArchiveDepCheck.reFileId').getValue(),
//										  'archives.archivesId':'${archivesId}'
//										  },
//								method : 'POST',
//								success : function(fp, action) {
										 Ext.ux.Toast.msg('操作信息','退回上一步成功！');
										 AppUtil.removeTab('ProcessForm' + panel.taskId);
										 refreshTaskPanelView();
//		                        },
//								failure : function(fp, action) {
//									Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
//								}
//							});
						},
						failure : function(fp, action) {
							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
						}
					}
				
				);},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
//		if (panel.store.getCount() == 0) {
//			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
//			return false;
//		}
		if (formPanel.getForm().isValid()) {
			var docParams=Ext.getCmp("GLJleaderSentArchiveDepCheck.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}
			var params = {
					depExerId:curUserInfo.userId,
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					sendMail : msgPanel.getCmpByName('sendMail').getValue(),
					sendMsg : msgPanel.getCmpByName('sendMsg').getValue(),
					sendInfo : msgPanel.getCmpByName('sendInfo').getValue(),
					flowAssignId : Ext.getCmp('GLJleaderSentArchiveCheck.signdepIds').getValue(),
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
				};
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextProcessActivity.do",
				method : 'post',
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {
//					Ext.Ajax.request({
//						url : __ctxPath + "/archive/updateArchDocsArchives.do",
//						params : {
//								  arcRecfileIds : Ext.getCmp('GLJleaderSentArchiveDepCheck.reFileId').getValue(),
//								  'archives.archivesId':'${archivesId}'
//								  },
//						method : 'POST',
//						success : function(fp, action) {
								 Ext.ux.Toast.msg('操作信息', '成功保存！');
								 AppUtil.removeTab('ProcessForm' + panel.taskId);
								 refreshTaskPanelView();
//                        },
//						failure : function(fp, action) {
//							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
//						}
//					});
				},
				failure : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
				}
			});
		}
	}// end of save
})