ZGSentArchiveStart = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		ZGSentArchiveStart.superclass.constructor.call(this, {
					id : 'ZGSentArchiveStart',
					title : '中共重庆市交通委员会发文处理笺',
					layout : 'form',
					iconCls : 'menu-archive-draft',
					modal : true,
					width : 900,
					maximizable : true,
					items : [this.formPanel],
					buttonAlign : 'center',
					buttons : [{
								text : '启动流程',
								iconCls : 'btn-save',
								scope : this,
								handler : this.save
							}, {
								text : '保存草稿',
								iconCls : 'btn-beready-save',
								scope : this,
								handler : this.savedraft
							}]
				});
		var jsArr = [__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocForm.js',
				__ctxPath + '/js/archive/ArchivesDocHistoryWin.js',
				__ctxPath + '/js/archive/ArchiveTypeTempView.js',
				__ctxPath + '/js/archive/ArchTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateForm.js',
				__ctxPath + '/js/archive/OfficeTemplateView.js',
				__ctxPath + '/js/archive/ArchTemplateSelector.js'];
		$ImportSimpleJs(jsArr, null);

	},
	save : function() {
		Ext.getCmp('ZGSentArchiveStart.sources').allowBlank = false;//行文方向
		Ext.getCmp('ZGSentArchiveForm.flowAssignId').allowBlank = false;//核稿
		##必填
		##Ext.getCmp('ZGSentArchiveStart.isStandard').allowBlank = false;//是否规范性文件
		Ext.getCmp('ZGSentArchiveForm.depName').allowBlank = false;//发文单位
		Ext.getCmp('ZGSentArchiveStart.archivesType').allowBlank = false;//文种
		Ext.getCmp('ZGSentArchiveForm.subject').allowBlank = false;//标题
		
		var defId = this.defId;
		var result = "呈部门负责人核稿";
		var reviewUserName = Ext.get("ZGSentArchiveForm.flowAssignId").dom.value;
		Ext.getCmp("archives.reviewUserName").setValue(reviewUserName);
		var flowAssignId = Ext.getCmp("ZGSentArchiveForm.flowAssignId")
				.getValue();
		if (this.formPanel.getForm().isValid()) {
			var formPanel = this.formPanel;

			var docParams = [];
			for (var i = 0, cnt = this.store.getCount(); i < cnt; i++) {
				docParams.push(this.store.getAt(i).data);
			}
			 var url1 = __ctxPath + '/archive/saveNormalArchives.do';
				var url2 = __ctxPath + '/archive/saveArchives.do';
			formPanel.getForm().submit({
				url : archivesId ? url2 : url1,
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					'archives.isdraft' : 0,
					docs : Ext.encode(docParams)
				},
				success : function(fp, action) {
					var archivesId = action.result.archivesId;
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					var fileIds = Ext
							.getCmp('JTWYHNGSentArchiveForm.sentAttachments.fileIds')
							.getValue();
					var isReserveNo=formPanel.getCmpByName('archives.isReserveNo').getGroupValue();
					formPanel.getForm().submit({
						url : __ctxPath + '/flow/saveProcessActivity.do',
						method : 'post',
							waitMsg : '正在发起流程...',
							timeout:'300',
						params : {
							isReserveNo:isReserveNo,
							defId : defId,
							sendUserId : curUserInfo.userId,
							sendMail : sendMail,
							sendMsg : sendMsg,
							sendInfo:sendInfo,
							archivesId : archivesId,
							fileIds : fileIds ? fileIds : '_',
							// destName:'部门负责人核稿',
//							status : result,
							flowAssignId : flowAssignId,
							startFlow : true
						},
						success : function(result, action) {
							var runId = action.result.runId;
							Ext.Ajax.request({
								url : __ctxPath
										+ '/archive/updateRunIdArchives.do',
								params : {
									archivesId : archivesId,
									runId : runId
								},
								method : 'POST',
								waitMsg : "正在保存流程信息，请稍等",
								success : function(fp, action) {
									Ext.ux.Toast.msg('操作信息', '成功保存！');
									Ext.getCmp('centerTabPanel').remove(Ext
											.getCmp('ProcessRunStart' + defId));
									refreshTaskPanelView();
									var ArchivesGrid = Ext.getCmp('ArchivesGrid');
									if (ArchivesGrid != null) {
										ArchivesGrid.getStore().reload();
									}
								},
								failure : function(fp, action) {
									Ext.MessageBox.show({
												title : '操作信息',
												msg : '信息保存出错，请联系管理员！',
												buttons : Ext.MessageBox.OK,
												icon : Ext.MessageBox.ERROR
											});
								}
							});
						},
						failure : function(fp, action) {
							Ext.MessageBox.show({
										title : '操作信息',
										msg : '信息保存出错，请联系管理员！',
										buttons : Ext.MessageBox.OK,
										icon : Ext.MessageBox.ERROR
									});
						}
					});
				}

			})
		}
	},
	/* 保存草稿 */
	savedraft : function() {
		Ext.getCmp('ZGSentArchiveStart.sources').allowBlank = true;//行文方向
		Ext.getCmp('ZGSentArchiveForm.flowAssignId').allowBlank = true;//核稿
		Ext.getCmp('ZGSentArchiveForm.archives.sendTo').allowBlank = true;//主送
		##必填
		##Ext.getCmp('ZGSentArchiveStart.isStandard').allowBlank = true;//是否规范性文件
		Ext.getCmp('ZGSentArchiveForm.depName').allowBlank = true;//发文单位
		Ext.getCmp('ZGSentArchiveStart.archivesType').allowBlank = true;//文种
		Ext.getCmp('ZGSentArchiveForm.subject').allowBlank = true;//标题
		Ext.getCmp('ZGSentArchiveForm.radiogroup').allowBlank = true;//是否使用预约编号
		
		var defId = this.defId;
		if (this.formPanel.getForm().isValid()) {
			var formPanel = this.formPanel;
			var reviewUserName = Ext.get("ZGSentArchiveForm.flowAssignId").dom.value;
			Ext.getCmp("archives.reviewUserName")
					.setValue(reviewUserName);
			var flowAssignId = Ext.getCmp('ZGSentArchiveForm.flowAssignId').getValue();
			var docParams = [];
			for (var i = 0, cnt = this.store.getCount(); i < cnt; i++) {
				docParams.push(this.store.getAt(i).data);
			}
			var url1 = __ctxPath + '/archive/saveNormalArchives.do';
			var url2 = __ctxPath + '/archive/saveArchives.do';
			formPanel.getForm().submit({
				url : archivesId ? url2 : url1,
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					'archives.isdraft' : 1,
					docs : Ext.encode(docParams)
				},
				success : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '成功保存！');
					var ArchivesGrid = Ext.getCmp('ArchivesGrid');
									if (ArchivesGrid != null) {
										ArchivesGrid.getStore().reload();
									}
					Ext.getCmp('centerTabPanel').remove(Ext
							.getCmp('ProcessRunStart' + defId));
					refreshTaskPanelView();
					},
				failure : function(fp, action) {
					Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
				}
			});
		}

	},
	initUIComponents : function() {
		this.archivesId = archivesId;
		Ext.Ajax.request({
			url : __ctxPath + '/archive/getdefnameArchives.do',
			params : {
				'defId' : defId
			},
			method : 'post',
			success : function(response, options) {
				var data = Ext.util.JSON.decode(response.responseText);
				Ext.getCmp('JTWYHSentArchiveStart.recDepNames')
						.setValue(data.name);
			}
		});
		function createFileUpdateCmp(id_pre, label) {
			return [{
						columnWidth : .8,
						items : [{
									fieldLabel : label,
									xtype : 'panel',
									id : id_pre + '.personFilePanel',
									frame : false,
									border : true,
									bodyStyle : 'padding:4px 4px 4px 4px;',
									height : 80,
									autoScroll : true,
									html : ''
								}]
					}, {
						columnWidth : .2,
						padding : '0 0 0 20px',
						items : [{
							border : false,
							xtype : 'button',
							text : '添加文件',
							iconCls : 'menu-attachment',
							handler : function() {
								var dialog = App.createUploadDialog({
									file_cat : 'document',
									judge_size : 'no',
									upload_autostart : true,
									callback : function(data) {
										var fileIds = Ext.getCmp(id_pre
												+ '.fileIds');
										var filePanel = Ext.getCmp(id_pre
												+ '.personFilePanel');
										var fileNames="";
										for (var i = 0; i < data.length; i++) {
											if (fileIds.getValue() != '') {
												fileIds.setValue(fileIds
														.getValue()
														+ ',');
											}
											fileIds.setValue(fileIds.getValue()
													+ data[i].fileId);
											if(i>0){
												fileNames+=" ";
											}
											fileNames+=data[i].filename;
											Ext.DomHelper
													.append(
															filePanel.body,
															'<span><a href="#" onclick="FileAttachDetail.show('
																	+ data[i].fileId
																	+ ')">'
																	+ data[i].filename
																	+ '</a> <img class="img-delete" src="'
																	+ __ctxPath
																	+ '/images/system/delete.gif" onclick="removeFile(this,\''
																	+ id_pre
																	+ '.fileIds\','
																	+ data[i].fileId
																	+ ')"/>&nbsp;|&nbsp;</span>');

										}
										Ext.getCmp('SearchFileNames').setValue(fileNames);
										Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
											'subject' : Ext.getCmp('SearchSubject').getValue(),
											'archType': "0",
											'docName' : Ext.getCmp('SearchDocNames').getValue(),
											'fileName': Ext.getCmp('SearchFileNames').getValue()
										}
										Ext.Ajax.request({
												url : __ctxPath + '/archive/oaSearchListArchives.do',
												params : {
													'subject' : Ext.getCmp('SearchSubject').getValue(),
													'archType': "0",
													'docName' : Ext.getCmp('SearchDocNames').getValue(),
													'fileName': fileNames
												},
												method:'post',
												success : function(response, options) {
													var data=Ext.util.JSON.decode(response.responseText)
													Ext.getCmp('ProcessStartOASearchGrid').getStore().loadData(data);
												}
										});
									}
								});
								dialog.show(this);
							}
						}, {
							xtype : 'button',
							text : '清除文件',
							iconCls : 'reset',
							handler : function() {
								var fileAttaches = Ext.getCmp(id_pre
										+ '.fileIds');
								var filePanel = Ext.getCmp(id_pre
										+ '.personFilePanel');

								filePanel.body.update('');
								fileAttaches.setValue('');
							}
						}, {
							xtype : 'hidden',
							id : id_pre + '.fileIds',
							name : 'fileIds'
						}]
					}];
		}
		// 初始化附件文档
	 	this.docGridPanel = new ArchivesUtil({
					panelId : 'ZGSentArchiveStart',
					isStart : true,
					archType: 0,
					archivesId : this.archivesId
					}).getGridPanelWithFullTools();
		var fp =this.formPanel = new Ext.FormPanel({
			id : 'ZGSentArchiveForm',
			url : __ctxPath + '/archive/saveNormalArchives.do',
			frame : false,
			border : false,
			layout : 'form',
			labelWidth : 80,
			width : 900,
			padding : '5px',
			reader : new Ext.data.JsonReader({
				root : 'data'
			}, [{
						name : 'archives.archivesId',
						mapping : 'archivesId'
					}, {
						name : 'archives.issueDep',
						mapping : 'issueDep'
					}, {
						name : 'archives.subject',
						mapping : 'subject'
					}, {
						name : 'archives.isReserveNo',
						mapping : 'isReserveNo'
					}, {
						name : 'archives.fileCounts',
						mapping : 'fileCounts'
					}, {
						name : 'archives.privacyLevel',
						mapping : 'privacyLevel'
					}, {
						name : 'archives.urgentLevel',
						mapping : 'urgentLevel'
					}, {
						name : 'archives.issuer',
						mapping : 'issuer'
					}, {
						name : 'archives.sources',
						mapping : 'sources'
					}, {
						name : 'archives.isPublic',
						mapping : 'isPublic'
					}, {
						name : 'archives.reviewUser',
						mapping : 'reviewUser'
					}, {
						name : 'archives.reviewUserName',
						mapping : 'reviewUserName'
					}, {
						name : 'archives.sendTo',
						mapping : 'sendTo'
					}, {
						name : 'archives.ccTo',
						mapping : 'ccTo'
					}, {
						name : 'archives.isStandard',
						mapping : 'isStandard'
					}, {
						name : 'archives.unPublicReasons',
						mapping : 'unPublicReasons'
					}, {
						name : 'archives.isComSetting',
						mapping : 'isComSetting'
					}, {
						// 标记是"行政规范性文件"还是"党委规范性文件"
						// 10:行政规范性文件，11:党委规范性文件
						name:'archives.keywords',
						mapping:'keywords'
					}]),
			items : [{
				border : false,
				layout : 'column',
				defaults : {
					border : false,
					columnWidth : .33,
					layout : 'form',
					defaults : {
						width : 200,
						xtype : 'textfield',
						allowBlank : false
					}
				},
				items : [{

					items : [{
						name : 'archives.archivesId',
						xtype : 'hidden'
					}, {
						xtype : "hidden",
						name : "archives.recDepIds",
						value : defId
					}, {
						xtype : "hidden",
						name : "archives.recDepNames",
						id : "JTWYHSentArchiveStart.recDepNames"
					},{
								xtype : 'hidden',
								name : 'archives.issuerId',
								value : curUserInfo.userId
							}, {
								xtype : 'hidden',
								name : 'archives.archType',
								id : 'archivesArchType',
								value : 0
							}, {
								xtype : 'hidden',
								name : 'archives.keywords',
								value : 11
							}, {
								fieldLabel : "拟稿部门",
								id : 'ZGSentArchiveForm.issueDep',
								value : curUserInfo.depName,
								readOnly : true
							}, {
								xtype : 'combo',
								fieldLabel : "发文单位",
								name : 'archives.issueDep',
								id : 'ZGSentArchiveForm.depName',
								triggerAction : 'all',
								lazyRender : true,
								editable : false,
								fieldLabel : '发文单位',
								store : ['重庆市交通委员会', '中共重庆市交通委员会',
										'中共重庆市交通委员会机关党委', '中共重庆市交通纪律检查委员会',
										'共青团重庆市交通委员会', '重庆市交通委员会直属机关工会']

							}, {
								xtype : 'combo',
								fieldLabel : '文种',
								id:'ZGSentArchiveStart.archivesType',
								hiddenName : "archives.archivesType.typeId",
								valueField : 'typeId',
								displayField : 'typeName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/archive/comboArchivesType.do',
											autoLoad : true,
											fields : ['typeId', 'typeName']
										})
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '缓急',
								triggerAction : 'all',
								allowBlank : true,
								editable : false,
								name : 'archives.urgentLevel',
								emptyText : '急缓程度',
								store : ['特急', '急件', '加急', '平急']
							}, {
								fieldLabel : '拟稿',
								name : "archives.issuer",
								readOnly : true,
								value : curUserInfo.fullname
							}, {
								xtype : 'combo',
								name : 'archives.sources',
								id:'ZGSentArchiveStart.sources',
								triggerAction : 'all',
								editable : false,
								fieldLabel : '行文方向',
								store : ['上行文', '平行文', '下行文']
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '密级',
								triggerAction : 'all',
								allowBlank : true,
								editable : false,
								name : 'archives.privacyLevel',
								emptyText : '一般',
								store : ['一般']
							}, {
								xtype : "hidden",
								name : "archives.reviewUserName",
								id : "archives.reviewUserName"
							}, {
								xtype : "combo",
								hiddenName : "archives.reviewUser",
								id : 'ZGSentArchiveForm.flowAssignId',
								fieldLabel : "核稿",
								valueField : 'flowAssignId',
								displayField : 'flowAssignName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
									url : __ctxPath
											+ '/system/arrLeadersAppUser.do?roles='+roleMap.get('officeDeputyDirectorRoleID')+','+roleMap.get('officeDirectorRoleID'),//roles=100156,100152',
									autoLoad : true,
									fields : ['flowAssignId', 'flowAssignName']
								})
							}, {
								xtype : 'numberfield',
								name : 'archives.fileCounts',
								fieldLabel : '份数',
								value : 1
							}]
				}]
			}, {
				xtype : 'textfield',
				name : 'archives.subject',
				id : 'ZGSentArchiveForm.subject',
				allowBlank : false,
				width : '96.5%',
				fieldLabel : '标题',
				listeners: {
							'change' : function(t){
						       if(t.getValue()!=""){
						       		Ext.getCmp('SearchSubject').setValue(t.getValue());
						       		Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
										'subject' : Ext.getCmp('SearchSubject').getValue(),
										'archType': "0",
										'docName' : Ext.getCmp('SearchDocNames').getValue(),
										'fileName': Ext.getCmp('SearchFileNames').getValue()
									}
							        Ext.Ajax.request({
										url : __ctxPath + '/archive/oaSearchListArchives.do',
										params : {
											'subject' : t.getValue(),
											'archType': "0",
											'docName' : Ext.getCmp('SearchDocNames').getValue(),
											'fileName': Ext.getCmp('SearchFileNames').getValue()
										},
										method:'post',
										success : function(response, options) {
											var data=Ext.util.JSON.decode(response.responseText)
											Ext.getCmp('ProcessStartOASearchGrid').getStore().loadData(data);
										}
									});
						       }
						     }
						}
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					border : false
				},
				items : [{
							xtype : 'label',
							style : 'padding:0px 0px 0px 0px;',
							text : '主送:',
							width : 85
						}, {
							xtype : 'textfield',
							name : 'archives.sendTo',
							width : '76.5%',
							// readOnly : true,
							id : 'ZGSentArchiveForm.archives.sendTo'
						}, {
							style : 'padding-left:5px;',
							xtype : 'button',
							iconCls : 'btn-dep-sel',
							text : '常用主送单位',
							handler : function() {
								UnitsSelector.getView(function(ids, names) {
									var fm = Ext.getCmp('ZGSentArchiveForm');
									fm.getCmpByName('archives.sendTo')
											.setValue(names);
								}, false, 1).show();
							}
						}]
			}, {
				xtype : 'container',
				layout : 'column',
				style : 'padding:0px 0px 8px 0px;margin-left:0px;',
				defaults : {
					//allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style : 'padding:0px 0px 0px 0px;',
							text : '抄送:',
							width : 85
						}, {
							xtype : 'textfield',
							name : 'archives.ccTo',
							width : '76.5%',
							allowBlank : true,
							// readOnly : true,
							id : 'ZGSentArchiveForm.archives.ccTo'
						}, {
							xtype : 'button',
							style : 'padding-left:5px;',
							iconCls : 'menu-department',
							text : '常用抄送单位',
							handler : function() {
								UnitsSelector.getView(function(ids, names) {
									var fm = Ext.getCmp('ZGSentArchiveForm');
									fm.getCmpByName('archives.ccTo')
											.setValue(names);
								}, false, 2).show();
							}
						}]
			}, {
				xtype : 'fieldset',
				border : false,
				defaults : {
					anchor : '98%,98%'
				},
				items : [this.docGridPanel,{
				xtype : 'container',
				layout : 'column',
				style : 'padding:10px 0px 8px 0px;margin-left:5px;',
				defaults : {
					allowBlank : true,
					border : false
				},
				items : [{
							xtype : 'label',
							text : '附件：',
							width : 84
						}, {
							xtype : 'textarea',
							name : 'archives.enclosure',
							width : '74.5%',
							id : 'JTWYHNGSentArchiveForm.enclosure'
						}]
			}, {
					layout : 'column',
					border : false,
					padding : '5px',
					defaults : {
						layout : 'form',
						border : false
					},
					items : createFileUpdateCmp(
							'JTWYHNGSentArchiveForm.sentAttachments', '公文附件')
				}]
			},

			{
				id : 'ZGSentArchiveForm.isReserveNo',
				border : false,
				labelWidth: 105,
				layout : 'form',
				items : {
					xtype : 'radiogroup',
					fieldLabel : '是否使用预约编号',
					id : 'ZGSentArchiveForm.radiogroup',
					hideParent : true,
					items : [{
								boxLabel : '是',
								name : 'archives.isReserveNo',
								inputValue : 1
							}, {
								boxLabel : '否',
								name : 'archives.isReserveNo',
								inputValue : 0
							}]
				}
			}, { 
				border : false,
				labelWidth: 105,
				layout : 'form',
				items : {
				xtype : 'radiogroup',
				allowBlank : false,
				id:'ZGSentArchiveStart.isStandard',
				fieldLabel : '是否规范性文件',
				items : [{
							boxLabel : '是',
							name : 'archives.isStandard',
							//checked : true,
							inputValue : 1,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('ZGSentArchiveStart.isComSetting.form').show();
										Ext.getCmp('ZGSentArchiveStart.isComSetting.form').allowBlank = false;
									}
								}
							}
						}, {
							boxLabel : '否',
							name : 'archives.isStandard',
							inputValue : 0,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('ZGSentArchiveStart.isComSetting.form').hide();
										Ext.getCmp('ZGSentArchiveStart.isComSetting.form').allowBlank = true;
									}
								}
							}
						}]
			}}, {	
				border:false,
				layout:'form',
				labelWidth:180,
				hidden : true,
				id : 'ZGSentArchiveStart.isComSetting.form',
				items:{
    				xtype : 'radiogroup',
    				allowBlank : false,
    				fieldLabel : '是否是暂行或试行规范性文件',
					id : 'ZGSentArchiveStart.isComSetting',
    				items : [{
    							boxLabel : '是',
    							name : 'archives.isComSetting',
    							inputValue : 1
    						}, {
    							boxLabel : '否',
    							name : 'archives.isComSetting',
    							inputValue : 0
    						}]
				}
			}]
		});
		Ext.getCmp('ProcessStartOASearchGrid').getStore().baseParams = {
			'subject' : Ext.getCmp('SearchSubject').getValue(),
			'archType': "0",
			'docName' : Ext.getCmp('SearchDocNames').getValue(),
			'fileName': Ext.getCmp('SearchFileNames').getValue()
		}
		if (this.archivesId) {
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ this.archivesId,
				waitMsg : '正在载入数据...',
				method:'post',
				success : function(form, action) {
					var isStandard=action.result.data['archives.isStandard'];
					var isReserveNo=action.result.data['archives.isReserveNo'];
					var privacyLevel=action.result.data['archives.privacyLevel'];
					var isComSetting = action.result.data['archives.isComSetting'];
					Ext.getCmp('ZGSentArchiveStart.archivesType').getStore().load({ 
					callback: function () { 
					//等待数据加载完成才进行赋值，不然由于异步会出现先赋值后加载完成。 
					Ext.getCmp('ZGSentArchiveStart.archivesType').setValue(Ext.decode(action.response.responseText).data[0].parentArchId);
					}, 
					scope: Ext.getCmp('ZGSentArchiveStart.archivesType').getStore(),//表示作用范围 
					add: false //为false表示数据不累加 
					});
					Ext.getCmp('JTWYHNGSentArchiveForm.enclosure').setValue(Ext.decode(action.response.responseText).data[0].enclosure);
					Ext.getCmp('ZGSentArchiveStart.isComSetting').setValue(isComSetting);
					if (isStandard == 1) {
						Ext.getCmp('ZGSentArchiveStart.isComSetting.form').show();
					} else {
						Ext.getCmp('ZGSentArchiveStart.isComSetting.form').hide();
					}
					Ext.get('ZGSentArchiveForm.flowAssignId').dom.value=action.result.data['archives.reviewUserName'];
					if(isStandard==-1){
						Ext.getCmp('ZGSentArchiveStart.standard')
								.setValue(null);
					}else if(isStandard==0){
						Ext.getCmp("ZGSentArchiveStart.isStandard").setValue(0);
					}else{
						Ext.getCmp("ZGSentArchiveStart.isStandard").setValue(1);
					}
					if (null == isReserveNo || "" == (""+isReserveNo+"")){
					}else if (0 == isReserveNo){
						Ext.getCmp('ZGSentArchiveForm.radiogroup').setValue(0);
					}else {
						Ext.getCmp('ZGSentArchiveForm.radiogroup').setValue(1);
					}
					var fileIds = Ext.getCmp('JTWYHNGSentArchiveForm.sentAttachments.fileIds');
					var filePanel = Ext.getCmp('JTWYHNGSentArchiveForm.sentAttachments.personFilePanel');
										var af=Ext.decode(action.response.responseText).data[0].archivesFiles;
										if(af!=null){
											for (var i = 0; i < af.length; i++) {
											if (fileIds.getValue() != '') {
												fileIds.setValue(fileIds
														.getValue()
														+ ',');
											}
											fileIds.setValue(fileIds.getValue()
													+ af[i].fileId);
											Ext.DomHelper
													.append(
															filePanel.body,
															'<span><a href="#" onclick="FileAttachDetail.show('
																	+ af[i].fileId
																	+ ')">'
																	+ af[i].fileName
																	+ '</a> <img class="img-delete" src="'
																	+ __ctxPath
																	+ '/images/system/delete.gif" onclick="removeFile(this,\'ZGSentArchiveStart.fileIds\','
																	+ af[i].fileId
																	+ ')"/>&nbsp;|&nbsp;</span>');

										}}
				
				},
				failure : function(form, action) {
				}
			});
		}
		var did=defId;
		Ext.Ajax.request({
			url : __ctxPath + '/snconfig/listByPageFileSnConfigOrder.do',
			params : {
				'flowId' : did,
				'userId':curUserInfo.userId,
				'isUsed':0
			},
			method:'post',
			success : function(response, options) {
				var af=Ext.util.JSON.decode(response.responseText).result;
				if(af==""){
					  Ext.getCmp('ZGSentArchiveForm.isReserveNo').hide();
					  fp.getCmpByName('archives.isReserveNo').setValue(3);
					  Ext.getCmp('ZGSentArchiveForm.isReserveNo').allowBlank=true;
				}else{
					  Ext.getCmp('ZGSentArchiveForm.isReserveNo').show();
					  Ext.getCmp('ZGSentArchiveForm.isReserveNo').allowBlank=false;
				}
			}
			});
	}
})
