SentArchiveDepCheck = Ext.extend(Ext.Panel, {
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		SentArchiveDepCheck.superclass.constructor.call(this, {
					id:'JWBHCSCHSentArchiveDepCheck',
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					modal : true,
					height : 580,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : this.buttons
				});
	},
	initUIComponents : function() {
		this.displayPanel = new Ext.Panel({
			autoScroll : true,
			autoHeight : true,
			id : 'JWBHSentArchiveDisp.displayPanel',
			border : false,
			autoLoad : {
				url : __ctxPath
				+ '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=${fileIds}&defId=${defId}&sentPanelId=JWBHSentArchiveDisp',
				nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			url : __ctxPath + '/archive/saveDepLeaderRead.do',
			defaults : {
				anchor : '98%,98%'
			},
			items : [new ArchivesUtil({
						panelId : 'JWBHCSCHSentArchiveDepCheck',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),{
				xtype : 'container',
				layout : 'form',
				style : 'padding:10px 0px 8px 0px;margin-left:0px;',
				defaults : {
					border : false
				},
				items : [{
				   layout:'form',
				   items:[{
						xtype : 'radiogroup',
						allowBlank : false,
						columns :[.3,.3,.3],//表示该元素的子组件所占宽度比例，此处0.3=.3=30%。
						items : [{
							boxLabel : '办公室审核',
							width :80,
							name : 'depOption',
							checked:true,
							inputValue : 3,
							listeners:{
							 check:function(checkbox,checked){
							 	 if(checked){
								   Ext.getCmp('JWBHCSFZRContainer').hide();
								   Ext.getCmp('BHArchiveDepCheck.LeaderNames').allowBlank=true;
								   Ext.getCmp('BHArchiveDepCheck.oneChoice').hide();
								   Ext.getCmp('BHArchiveDepCheck.oneLeaderNames').allowBlank=true;
							 	 }
							 }
							}
						},{
							width :100,
							boxLabel : '处室复核',
							name : 'depOption',
							inputValue : 2,
							listeners:{
							 check:function(checkbox,checked){
							  if(checked){
							   Ext.getCmp('JWBHCSFZRContainer').show();
							   Ext.getCmp('BHArchiveDepCheck.LeaderNames').allowBlank=false;
							   Ext.getCmp('BHArchiveDepCheck.oneChoice').hide();
							   Ext.getCmp('BHArchiveDepCheck.oneLeaderNames').allowBlank=true;
							  }
							 }
							}
						},{
							width :100,
							boxLabel : '处室会签',
							name : 'depOption',
							inputValue : 4,
							listeners:{
							 check:function(checkbox,checked){
							  if(checked){
							   Ext.getCmp('JWBHCSFZRContainer').hide();
							   Ext.getCmp('BHArchiveDepCheck.LeaderNames').allowBlank=true;
							   Ext.getCmp('BHArchiveDepCheck.oneChoice').show();
							   Ext.getCmp('BHArchiveDepCheck.oneLeaderNames').allowBlank=false;
							  }
							 }
							}
						}],
						fieldLabel : '审批步骤'
					}]
				},{//xtype:'container',
				layout:'column',
				hidden:true,
				id:'JWBHCSFZRContainer',
				items:[{
							xtype : 'label',
							text : '处室负责人:',
							hideParent:true,
							width:105
						}, {
							xtype : 'textfield',
							width : 445,
							allowBlank:true,
							hideParent:true,
							readOnly : true,
							id : 'BHArchiveDepCheck.LeaderNames'
						}, {
							xtype : 'hidden',
							id : 'BHArchiveDepCheck.BHLeaderIds'
						}, {
							xtype : 'button',
							hideParent:true,
							iconCls : 'menu-department',
							text : '选择人员',
							handler : function() {
								//到发起人所在处室
								var url = __ctxPath +"/system/depLeadersTreeDepartment.do";
								url+= '?roles='+ArchivesUtil.Role_Leaders+'&depIds='+curUserInfo.depId;
//								var url = __ctxPath + '/system/depLeadersTreeDepartment.do?roles='+roleMap.get('officeDirectorRoleID')+','+roleMap.get('officeDeputyDirectorRoleID');
								DepLeaders.getView(
										function(userIds, fullnames) {
											Ext.getCmp('BHArchiveDepCheck.BHLeaderIds').setValue(userIds);
											Ext.getCmp('BHArchiveDepCheck.LeaderNames')
													.setValue(fullnames);
										}, true, null,url).show();
							}
						}]}]
					},{
						xtype : 'container',
						layout : 'column',
						hidden : true,
						id : 'BHArchiveDepCheck.oneChoice',
						style : 'padding-bottom:5px;padding-top:10px;',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '处室会签人员:',
									width : 105
								}, {
									xtype : 'textfield',
									width : '66%',
									readOnly : true,
									allowBlank:true,
									id : 'BHArchiveDepCheck.oneLeaderNames'
								}, {
									xtype : 'hidden',
									id : 'BHArchiveDepCheck.oneUserIds'
								}, {
									xtype : 'button',
									iconCls : 'menu-department',
									style:'padding-left:5px;',
									text : '选择人员',
									handler : function() {
										var url= __ctxPath + '/system/depLeadersTreeDepartment.do?roles='+roleMap.get('officeDirectorRoleID')+','+roleMap.get('officeDeputyDirectorRoleID')+',1272407';
										DepLeaders.getView(
										function(userIds, fullnames) {
											Ext.getCmp('BHArchiveDepCheck.oneUserIds').setValue(userIds);
											Ext.getCmp('BHArchiveDepCheck.oneLeaderNames').setValue(fullnames);
										},false, null,url).show();
									}
								}]
					}, {
						xtype : 'container',
						layout : 'column',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '审批意见:',
									width : 105
								}, {
									name : 'leaderRead.leaderOpinion',
									id:'leaderRead_leaderOpinion',
									xtype : 'textarea',
									maxLength :500,
									allowBlank:false,
									width : 440,
									height:40
								},{
									xtype : 'button',
									text : '常用批示语',
									style:'padding-top:10px;',
									iconCls : 'menu-new-document',
									handler : function() {
										OdCommentsSelector.getView(
											function(id, name) {
												Ext.getCmp('leaderRead_leaderOpinion')
													.setValue(name);
											}, true).show();
										}
								}]
					
					}]
		});
		if(taskId){
			Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				if(prevDestName.toString().indexOf("会签")!=-1){
					Ext.getCmp('BHArchiveDepCheck.return').hide();
				}
			},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
		}
		this.buttons = [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								}),
								new Ext.Button({
								   iconCls:'btn-changeTask',
								   text:'退回',
								   id : 'BHArchiveDepCheck.return',
								   handler:this.backsetp.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end];
	},
	
	backsetp:function(formPanel, panel, signalName, activityName, destination) {
		Ext.getCmp('BHArchiveDepCheck.LeaderNames').allowBlank=true;
        Ext.getCmp('BHArchiveDepCheck.oneLeaderNames').allowBlank=true;
		if (formPanel.getForm().isValid()) {
			var sendMail = msgPanel.getCmpByName('sendMail').getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			var option =1;
			result='已办理';
			var params = {
					examineSend:option,//部门下一步审核人
					checkId:curUserInfo.userId,
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo:sendInfo,
 					status: result,
					flowAssignId:'${sendUserId}',
					comments : '退回'
			};
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
				method : 'post',
				timeout:120000,
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {
					// --无后续的错误友好提示开始
					var jsonResult = action.result;
					if (jsonResult) {
						if (jsonResult && jsonResult.success == "true") {
							Ext.ux.Toast.msg("操作信息", "操作成功！");
						} else {
							var resultMsg = "信息保存出错，请联系管理员！";
							var resuIcon = Ext.MessageBox.ERROR;
							if (jsonResult.message && jsonResult.message != null) {
								resultMsg = jsonResult.message;
								if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
									resuIcon= Ext.MessageBox.WARNING;
								}
							}
							Ext.MessageBox.show({
								title : '操作信息',
								msg : resultMsg,
								buttons : Ext.MessageBox.OK,
								icon : resuIcon
							});
						}
					}
					// --无后续的错误友好提示结束
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
						title : '操作信息',
						msg : '当前系统繁忙，请稍后再处理！',
						buttons : Ext.MessageBox.OK,
						icon : Ext.MessageBox.WARNING
					});
				}
			});
		}
	},
	
	save : function(formPanel, panel, signalName, activityName, destination) {
	    var optionPre = formPanel.getCmpByName('depOption').getGroupValue();
	    if (optionPre == 3) {
            Ext.getCmp('BHArchiveDepCheck.LeaderNames').allowBlank=true;
            Ext.getCmp('BHArchiveDepCheck.oneLeaderNames').allowBlank=true;
		} else if (optionPre == 2) {
            Ext.getCmp('BHArchiveDepCheck.LeaderNames').allowBlank=false;
            Ext.getCmp('BHArchiveDepCheck.oneLeaderNames').allowBlank=true;
		} else if (optionPre == 4) {
            Ext.getCmp('BHArchiveDepCheck.LeaderNames').allowBlank=true;
            Ext.getCmp('BHArchiveDepCheck.oneLeaderNames').allowBlank=false;
		}
		if (formPanel.getForm().isValid()) {
			var option = formPanel.getCmpByName('depOption').getGroupValue();
			var sendMail = msgPanel.getCmpByName('sendMail').getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg')
					.getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();		
			var params={
					examineSend:option,
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo:sendInfo,
					firstCheckUserId :curUserInfo.userId,
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue(),
					depLeaderOption : '同意'
				};
				if(option==2){
				 Ext.apply(params,{
				 	flowAssignId : Ext.getCmp('BHArchiveDepCheck.BHLeaderIds').getValue()
				 });
				}else if(option==4){
					Ext.apply(params,{
						destName : '处室会签1',
						signUserIds : Ext.getCmp('BHArchiveDepCheck.oneUserIds').getValue()
					 });
				}
			
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextForSyncProcessActivity.do",
				method : 'post',
				timeout:120000,
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {
					// --无后续的错误友好提示开始
					var jsonResult = action.result;
					if (jsonResult) {
						if (jsonResult && jsonResult.success == "true") {
							Ext.ux.Toast.msg("操作信息", "操作成功！");
						} else {
							var resultMsg = "信息保存出错，请联系管理员！";
							var resuIcon = Ext.MessageBox.ERROR;
							if (jsonResult.message && jsonResult.message != null) {
								resultMsg = jsonResult.message;
								if (jsonResult.code && (jsonResult.code == '2' || jsonResult.code == '3')) {
									resuIcon= Ext.MessageBox.WARNING;
								}
							}
							Ext.MessageBox.show({
								title : '操作信息',
								msg : resultMsg,
								buttons : Ext.MessageBox.OK,
								icon : resuIcon
							});
						}
					}
					// --无后续的错误友好提示结束
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
						title : '操作信息',
						msg : '当前系统繁忙，请稍后再处理！',
						buttons : Ext.MessageBox.OK,
						icon : Ext.MessageBox.WARNING
					});
				}
			});
		}
	}// end of save
})