GSentArchiveDepCheck = Ext.extend(Ext.Panel, {
	taskId : null,
	setTaskId : function(vId) {
		this.taskId = vId;
	},
	getTaskId : function() {
		return this.taskId;
	},
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		GSentArchiveDepCheck.superclass.constructor.call(this, {
					id:'GGJDZGWGSentArchiveDepCheck',
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					modal : true,
					height : 675,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : this.buttons
				});
	},
	initUIComponents : function() {

		this.displayPanel = new Ext.Panel({
			id :'GGJDZGWGSentArchiveDepCheck.displayPanel',
			autoScroll : true,
			autoHeight : true,
			border : false,
			autoLoad : {
				url : __ctxPath
				+ '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=$!{fileIds}&defId=${defId}&sentPanelId=GGJDZGWGSentArchiveDepCheck',
				nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			url : __ctxPath + '/archive/saveDepLeaderRead.do',
			id : 'GSentArchiveDepCheckForm',
			defaults : {
				anchor : '98%,98%'
			},
			items : [new ArchivesUtil({
						panelId : 'GGJDZGWGSentArchiveDepCheck',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),{
						name : 'archives.archivesId',
						xtype : 'hidden',
						value : '${archivesId}'
					}, {
						xtype : 'radiogroup',
						allowBlank : false,
						items : [{
							boxLabel : '签发',
							name : 'depOption',
							inputValue : 1,
							checked : true,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('GSentArchiveDepCheck.Leaders').show();
										Ext.getCmp('GSentArchiveDepCheck.LeaderNames').allowBlank = false;
									}
								}
							}
						},{
							boxLabel : '分发',
							name : 'depOption',
							inputValue : 2,
							listeners : {
								'check' : function(checkbox, checked) {
									if (checked) {
										Ext.getCmp('GSentArchiveDepCheck.Leaders').hide();
										Ext.getCmp('GSentArchiveDepCheck.LeaderNames').allowBlank = true;
									}
								}
							}
						}],
						fieldLabel : '会签步骤'
					}, {
						id : 'GSentArchiveDepCheck.Leaders',
						xtype : 'container',
						layout : 'column',
						style : 'padding-bottom:5px;',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '选择人员：',
									width : 105
								}, {
									xtype : 'textfield',
									width : 445,
									allowBlank:false,
									readOnly : true,
									id : 'GSentArchiveDepCheck.LeaderNames'
								}, {
									xtype : 'hidden',
									id : 'GSentArchiveDepCheck.viceLeaderIds'
								}, {
									xtype : 'button',
									iconCls : 'menu-department',
									text : '选择人员',
									handler : function() {
										var url = __ctxPath + '/system/depLeadersTreeDepartment.do?roles=100175';
										DepLeaders.getView(
											function(userIds, userNames) {
												Ext.getCmp('GSentArchiveDepCheck.viceLeaderIds').setValue(userIds);
												Ext.getCmp('GSentArchiveDepCheck.LeaderNames')
														.setValue(userNames);
											}, true, null,url).show();
									}
								}]
					}, {
						xtype : 'container',
						layout : 'column',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '备注：',
									width : 105
								}, {
									name : 'leaderRead.leaderOpinion',
									xtype : 'textarea',
									maxLength :500,
									width : 440,
									height:40
								}/*,{
			   id : 'GGJDZGWSentArchiveDepCheckForm.reFileId',
			   xtype : 'hidden'
					}*/]
					
					}]
		});
		this.buttons = [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end];
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
		if(panel.store.getCount() == 0){
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}
		if (formPanel.getForm().isValid()) {
		/*	var docParams=Ext.getCmp("GGJDZGWSentArchiveDepCheckForm.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) 
              {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}*/
			var option = formPanel.getCmpByName('depOption').getGroupValue();
			var sendMail = msgPanel.getCmpByName('sendMail')
					.getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg')
					.getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
			var depLeaderOption = 'sent';
			var params = {
					createNext : option,
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					ccUserIds : ccPanel.getCmpByName('ccIds').getValue(),
					depLeaderOption : depLeaderOption,
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo:sendInfo,
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
				};
			
			if (1 == option ) {	//fenda
				Ext.apply(params,{
					status : '呈签发',
					depLeaderOption : '签发',
					flowAssignId : Ext.getCmp('GSentArchiveDepCheck.viceLeaderIds').getValue()
				});
			}
			
			//alert(Ext.util.JSON.encode(params));
				formPanel.getForm().submit({
				url : __ctxPath + '/archive/updateElecArchStatusArchives.do',
				method:'post',
				waitMsg : '正在提交数据...',
				params : {
						'archivesId' : '${archivesId}'
				},
				success : function(response, options) {
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextProcessActivity.do",
				method : 'post',
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {
				/*	Ext.Ajax.request({
						url : __ctxPath + "/archive/updateArchDocsArchives.do",
						params : {
								  arcRecfileIds : Ext.getCmp('GGJDZGWSentArchiveDepCheckForm.reFileId').getValue(),
								  'archives.archivesId':'${archivesId}'
								  },
						method : 'POST',
						success : function(fp, action) {
								Ext.ux.Toast.msg('操作信息', '生成电子公文成功！');
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
                        },
						failure : function(fp, action) {
							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
						}
					});
								Ext.ux.Toast.msg('操作信息', '生成电子公文成功！');
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();*/
                        Ext.ux.Toast.msg('操作信息', '生成电子公文成功！');
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
					
				},
				
				failure : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
				}
			});}});
		}
	}// end of save
})