GSentArchiveDepCheck = Ext.extend(Ext.Panel, {
	formPanel : null,
	displayPanel : null,
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		GSentArchiveDepCheck.superclass.constructor.call(this, {
					id:'GGJQFGSentArchiveDepCheck',
					layout : 'form',
					items : [this.displayPanel, this.formPanel],
					modal : true,
					height : 620,
					width : 700,
					autoHeight : true,
					maximizable : true,
					buttonAlign : 'center',
					buttons : this.buttons
				});
	},
	initUIComponents : function() {
		this.displayPanel = new Ext.Panel({
			autoScroll : true,
			id :'GGJDZGWGSentArchiveDepCheck.displayPanel',
			autoHeight : true,
			border : false,
			autoLoad : {
				url : __ctxPath
						+ '/pages/flowPath/dispatchFlow.jsp?archiveId=${archivesId}&fileIds=$!{fileIds}&defId=${defId}&sentPanelId=GGJDZGWGSentArchiveDepCheck',
						nocache : true
			}
		});
		this.formPanel = new Ext.FormPanel({
			layout : 'form',
			id:'GSentArchiveDepCheckForm',
			bodyStyle : 'padding:10px 10px 10px 10px',
			border : false,
			//url : __ctxPath + '/archive/saveDepLeaderRead.do',
			defaults : {
				anchor : '98%,98%'
			},
			items : [new ArchivesUtil({
						panelId : 'GGJQFGSentArchiveDepCheck',
						archivesId : '${archivesId}'
					}).getGridPanelWithFullTools(),{
						name : 'archives.archivesId',
						xtype : 'hidden',
						value : '${archivesId}'
					}, {
						xtype : 'container',
						layout : 'column',
						style:'padding-top:10px;',
						defaults : {
							border : false
						},
						items : [{
									xtype : 'label',
									text : '审批意见：',
									width : 105
								}, {
									name : 'leaderRead.leaderOpinion',
									xtype : 'textarea',
									width : 440,
									height:40
								},{
									xtype : 'button',
									iconCls : 'menu-flowWait',
									text : '常用批示语',
									style:'margin-top:10px;margin-left:5px;',
									handler : function() {
										OdCommentsSelector.getView(
											function(id, name) {
												Ext.getCmp('GSentArchiveDepCheckForm')
													.getCmpByName('leaderRead.leaderOpinion')
													.setValue(name);
											}, true).show();
										}
								}/*,{
			   id : 'GGJQFSentArchiveDepCheckForm.reFileId',
			   xtype : 'hidden'
					}*/]
					
					}]
		});
		this.buttons = [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								}),
								new Ext.Button({
								   iconCls:'btn-changeTask',
								   text:'退回',
								   handler:this.backsetp.createCallback(this.formPanel,this,'${v.source}')
								})
								#set ($count=$count+1)
						#end];
	},
		backsetp:function(formPanel,panel,activityName){
			if(panel.store.getCount() == 0){
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}
		if (!formPanel.getForm().isValid()){return false;}
		/*var docParams=Ext.getCmp("GGJQFSentArchiveDepCheckForm.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) 
              {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}*/
		 Ext.Ajax.request({
			url : __ctxPath + '/flow/getPreviousStepProcessRun.do',
			params : {
				'taskId' : panel.taskId
			},
			method:'post',
			success : function(response, options) {
				var processForm = Ext.util.JSON.decode(response.responseText).data;
				var prevSignalName  = processForm[0].signalName;
				var prevDestName  = processForm[0].activityName;
				var prevFlowAssignId =  processForm[0].creatorId;
				var sendMail = msgPanel.getCmpByName('sendMail').getValue();
				var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
				var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
				//alert(processForm[0].activityName + " " + processForm[0].creatorId  +" " + activityName + " " + "to"+processForm[0].activityName); 
				formPanel.getForm().submit({
						url:__ctxPath+ "/flow/nextProcessActivity.do",
						method:'post',
						waitMsg:'正在提交处理，请稍等',
						scope:this,
						params:{
								taskId : panel.taskId,
								signalName : prevSignalName,
								activityName : activityName,
								comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue(),
								destName : prevDestName,
								status : '退回',
								sendMail : sendMail,
								sendMsg : sendMsg,
								sendInfo:sendInfo,
								//看是否指定了执行人员
								flowAssignId : prevFlowAssignId
						},
						success : function(fp, action) {/*
							Ext.Ajax.request({
						url : __ctxPath + "/archive/updateArchDocsArchives.do",
						params : {
								  arcRecfileIds : Ext.getCmp('GGJQFSentArchiveDepCheckForm.reFileId').getValue(),
								  'archives.archivesId':'${archivesId}'
								  },
						method : 'POST',
						success : function(fp, action) {
								Ext.ux.Toast.msg('操作信息','退回上一步成功！');
							AppUtil.removeTab('ProcessForm' + panel.taskId);
							refreshTaskPanelView();
                        },
						failure : function(fp, action) {
							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
						}
					});
							
						*/Ext.ux.Toast.msg('操作信息','退回上一步成功！');
							AppUtil.removeTab('ProcessForm' + panel.taskId);
							refreshTaskPanelView();},
						failure : function(fp, action) {
							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
						}
					}
				
				);},
			failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '撤回出错，请联系管理员！');
				}
			});
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
		if(panel.store.getCount() == 0){
			Ext.ux.Toast.msg('操作信息', '请添加公文正文!');
			return false;
		}
		if (formPanel.getForm().isValid()) {
		/*	var docParams=Ext.getCmp("GGJQFSentArchiveDepCheckForm.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) 
              {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}*/
			var sendMail = msgPanel.getCmpByName('sendMail')
					.getValue();
			var sendMsg = msgPanel.getCmpByName('sendMsg')
					.getValue();
			var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();		
			var params = {
					taskId : panel.taskId,
					signalName : signalName,
					activityName : activityName,
					ccUserIds : ccPanel.getCmpByName('ccIds').getValue(),
					sendMail : sendMail,
					sendMsg : sendMsg,
					sendInfo:sendInfo,
					depLeaderOption : '同意',
					//flowAssignId : ${depExerId}
					comments : formPanel.getCmpByName('leaderRead.leaderOpinion').getValue()
				};
			
			//alert(Ext.util.JSON.encode(params));
	formPanel.getForm().submit({
				url : __ctxPath + '/archive/updateArchSignDateArchives.do',
				params : {
					'archivesId' : '${archivesId}'
				},
				method:'post',
				waitMsg : '正在提交数据...',
				success : function(response, options) {
			formPanel.getForm().submit({
				url : __ctxPath + "/flow/nextProcessActivity.do",
				method : 'post',
				waitMsg : '正在提交数据...',
				params : params,
				success : function(fp, action) {/*
					Ext.Ajax.request({
						url : __ctxPath + "/archive/updateArchDocsArchives.do",
						params : {
								  arcRecfileIds : Ext.getCmp('GGJQFSentArchiveDepCheckForm.reFileId').getValue(),
								  'archives.archivesId':'${archivesId}'
								  },
						method : 'POST',
						success : function(fp, action) {
								Ext.ux.Toast.msg('操作信息', '签发成功！');
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();
                        },
						failure : function(fp, action) {
							Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
						}
					});
					
				*/Ext.ux.Toast.msg('操作信息', '签发成功！');
					AppUtil.removeTab('ProcessForm' + panel.taskId);
					refreshTaskPanelView();},
				failure : function(fp, action) {
					Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
				}
			});},
				failure : function(response, options) {
					Ext.ux.Toast.msg('操作信息', '操作出错，请联系管理员！');
				}});
		}
	}// end of save
})