GGJSentArchiveReStart = Ext.extend(Ext.Panel, {
	constructor : function(_cfg) {
		Ext.applyIf(this, _cfg);
		this.initUIComponents();
		GGJSentArchiveReStart.superclass.constructor.call(this, {
					id : 'GGJSentArchiveReStart',
					title : '高管局发文处理笺-重新发起',
					layout : 'form',
					modal : true,
					width : 800,
//					height:770,
					// autoScroll:true,
					maximizable : true,
					iconCls : 'menu-archive-draft',
					maximizable : true,
					items : [this.formPanel],
					buttonAlign : 'center',
					buttons : [ #set ($count=0)
							#foreach ($v in $nextTrans)
								#if($count>0)
								,
								#end
								new Ext.Button({
								   iconCls:'btn-transition',
								   text:'确认',
								   handler:this.save.createCallback(this.formPanel,this,'${v.name}','${v.source}','${v.destination}')
								})
								#set ($count=$count+1)
						#end]
				});
		var jsArr = [__ctxPath + '/js/archive/ArchivesDocForm.js',
		__ctxPath + '/js/archive/ArchivesDocForm.js',
		__ctxPath + '/js/archive/ArchivesDocHistoryWin.js',
		__ctxPath + '/js/archive/ArchiveTypeTempView.js',
		__ctxPath + '/js/archive/ArchTemplateView.js',
		__ctxPath + '/js/archive/ArchTemplateForm.js',
		__ctxPath + '/js/archive/OfficeTemplateView.js',
		__ctxPath + '/js/archive/ArchTemplateSelector.js',
		__ctxPath + '/js/archive/ArchivesUtil.js'];
		$ImportSimpleJs(jsArr, null);
	},
	save : function(formPanel, panel, signalName, activityName, destination) {
		var fileIds = Ext.getCmp('GGJReFiles.fileIds').getValue();
		if (panel.store.getCount() == 0) {// 公文正文附件为空
			Ext.ux.Toast.msg('操作信息', '请添加公文正文附件!');
			return false;
		}
		if (formPanel.getForm().isValid()) {
			var docParams=Ext.getCmp("GGJSentArchiveReStart.reFileId");
			for (var i = 0, cnt = panel.store.getCount(); i < cnt; i++) {
				if(panel.store.getAt(i).data.fileId!=''){
					if(docParams.getValue()!=""){
						docParams.setValue(docParams.getValue()+',');
					} 
				} 
				docParams.setValue(docParams.getValue()+panel.store.getAt(i).data.fileId);
			}
			var test=Ext.getCmp("GGJSentArchiveReStart.reFileId").getValue();
			formPanel.getForm().submit({
				method : 'POST',
				waitMsg : '正在提交数据...',
				params : {
					archivesRecfileIds : Ext.getCmp("GGJSentArchiveReStart.reFileId").getValue()
				},
				success : function(fp, action) {
					var sendMail = msgPanel.getCmpByName('sendMail').getValue();
					var sendMsg = msgPanel.getCmpByName('sendMsg').getValue();
					var sendInfo = msgPanel.getCmpByName('sendInfo').getValue();
					var flowAssignId = Ext.getCmp("GGJSentArchiveReStart.flowAssignId").getValue();
					var isReserveNo=formPanel.getCmpByName('archives.isReserveNo').getGroupValue();
					formPanel.getForm().submit({
						url : __ctxPath + '/flow/nextProcessActivity.do',
						method : 'post',
						waitMsg : '正在提交数据...',
						params : {
							isReserveNo:isReserveNo,
							taskId : panel.taskId,
							signalName : signalName,
							activityName : activityName,
							sendMail : sendMail,
							sendMsg : sendMsg,
							sendInfo:sendInfo,
//							status:'呈处室初核',
							flowAssignId : flowAssignId,
							fileIds : fileIds?fileIds:'_'
						},
						success : function(response, options) {
							Ext.ux.Toast.msg('操作信息', '重新发起成功！');
							Ext.getCmp('centerTabPanel').remove(Ext
									.getCmp('ProcessForm' + panel.taskId));
							refreshTaskPanelView();
						}
					});
				},
				failure : function(fp, action) {
					Ext.MessageBox.show({
								title : '操作信息',
								msg : '信息保存出错，请联系管理员！',
								buttons : Ext.MessageBox.OK,
								icon : Ext.MessageBox.ERROR
							});
				}
			});
		}

	},
	initUIComponents : function() {
		this.archivesId='${archivesId}'; 
		this.docGridPanel = new ArchivesUtil({
					panelId : 'GGJSentArchiveReStart',
					isStart : true,
					archivesId : this.archivesId
					}).getGridPanelWithFullTools();
					
		var fp=this.formPanel = new Ext.FormPanel({
			url : __ctxPath + '/archive/saveArchives.do',
			frame : false,
			border : false,
			layout : 'form',
			labelWidth : 80,
			width : 800,
			padding : '5px',
			reader : new Ext.data.JsonReader({
						root : 'data'
					}, [	{
								name : 'archives.archivesId',
								mapping : 'archivesId'
							}, {
								name : 'archives.archivesType.typeId',
								mapping : 'parentArchId'
							}, {
								name : 'archives.issueDep',
								mapping : 'issueDep'
							}, {
							    name:'archives.status',
							    mapping:'status'
							}, {
								name : 'archives.subject',
								mapping : 'subject'
							}, {
								name : 'archives.fileCounts',
								mapping : 'fileCounts'
							}, {
								name : 'archives.privacyLevel',
								mapping : 'privacyLevel'
							}, {
								name : 'archives.urgentLevel',
								mapping : 'urgentLevel'
							}, {
								name : 'archives.issuer',
								mapping : 'issuer'
							}, {
								name : 'archives.issuerId',
								mapping : 'issuerId'
							}, {
								name:'archives.sources',
								mapping:'sources'
							}, {
								name:'archives.archType',
								mapping:'archType'
							}, {
								name:'archives.isPublic',
								mapping:'isPublic'
							}, {
								name:'archives.isReserveNo',
								mapping:'isReserveNo'
							},{
								name : 'archives.reviewUser',
								mapping : 'reviewUser'
							}, {
								name : 'archives.reviewUserName',
								mapping : 'reviewUserName'
							}, {
								name : 'archives.sendTo',
								mapping : 'sendTo'
							}, {
								name : 'archives.ccTo',
								mapping : 'ccTo'
							},{
								name:'archives.isStandard',
								mapping:'isStandard'
							},{
								name:'archives.unPublicReasons',
								mapping:'unPublicReasons'
							}]),
			items : [{
				border : false,
				layout : 'column',
				defaults : {
					border : false,
					columnWidth : .33,
					layout : 'form',
					defaults : {
						width : 150,
						xtype : 'textfield',
						allowBlank : false
					}
				},
				items : [{
					items : [{
								fieldLabel : "拟稿部门",
								value : curUserInfo.depName,
								readOnly : true
							}, {
								xtype : 'combo',
								fieldLabel : "发文单位",
								name : 'archives.issueDep',
								triggerAction : 'all',
								listWidth:200,
								lazyRender : true,
								editable : false,
								fieldLabel : '发文单位',
								store : ['重庆市交通委员会', 
										'中共重庆市交通委员会', '中共重庆市交通委员会机关党委',
										'中共重庆市交通纪律检查委员会', '共青团重庆市交通委员会',
										'重庆市交通委员会直属机关工会','高管局']
							}, {
								xtype : 'combo',
								fieldLabel : '文种',
								hiddenName : "archives.archivesType.typeId",
								id : 'GGJSentArchiveReStart.archivesType',
								valueField : 'typeId',
								displayField : 'typeName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/archive/comboArchivesType.do',
											autoLoad : true,
											fields : ['typeId', 'typeName']
										})
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '缓急',
								triggerAction : 'all',
								editable : false,
								allowBlank:true,
								name : 'archives.urgentLevel',
								emptyText : '急缓程度',
								store : ['特急', '急件', '加急', '平急']
							}, {
								fieldLabel : '拟稿',
								name : "archives.issuer",
								readOnly : true,
								value : curUserInfo.fullname
							}, {
								xtype : 'combo',
								name : 'archives.sources',
								triggerAction : 'all',
								editable : false,
								fieldLabel : '行文方向',
								store : ['上行文', '平行文', '下行文']
							}]
				}, {
					items : [{
								xtype : "combo",
								fieldLabel : '密级',
								triggerAction : 'all',
								editable : false,
								allowBlank:true,
								name : 'archives.privacyLevel',
								id:'GGJqarchives.privacyLevel',
								emptyText : '密级程度',
								store : ['一般', '秘密', '机密', '绝密'],
								listeners: {
									'select':function(combo){
										if(combo.getValue()!='一般'){
											Ext.getCmp('GGJSentArchiveStart.public').disable();
											Ext.getCmp('GGJSentArchiveStart.public').allowBlank=true;
											Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').allowBlank=true,
											Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').disable();
											Ext.getCmp('GGJRestarthiddeIsPublic').setValue(0);
			                                Ext.getCmp('GGJRestarthiddeUnPublicReasons').setValue(null);
			                                Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').setValue(null);
			                                //Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').allowBlank = true;
			                                Ext.getCmp('GGJRestarthiddeIsPublic').setDisabled(false);
		                                    Ext.getCmp('GGJRestarthiddeUnPublicReasons').setDisabled(false);
		                                    
		                                   // Ext.getCmp('GGJSentArchiveReCounts').show();
											//Ext.getCmp('GGJSentArchiveReCounts').el.parent().parent().show();
											//Ext.getCmp('GGJSentArchiveReCounts').allowBlank = false;
										}else{
											Ext.getCmp('GGJSentArchiveStart.public').reset();
											Ext.getCmp('GGJSentArchiveStart.public').setDisabled(false);
											Ext.getCmp('GGJSentArchiveStart.public').allowBlank=false;
											Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').allowBlank=false,
											Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').setDisabled(false);
										    Ext.getCmp('GGJRestarthiddeIsPublic').disable();
		                                    Ext.getCmp('GGJRestarthiddeUnPublicReasons').disable();
		                                    
		                                    //Ext.getCmp('GGJSentArchiveReCounts').hide();
											//Ext.getCmp('GGJSentArchiveReCounts').el.parent().parent().hide();
											//Ext.getCmp('GGJSentArchiveReCounts').allowBlank = true;
										}
									}
								}
							}, 
								{
								xtype : "hidden",
								name : "archives.reviewUserName",
								id : "GGJSentArchiveReStart.reviewUserName"
							},
								 {
								xtype : "combo",
								hiddenName : "archives.reviewUser",
								fieldLabel : "核稿",
								id : 'GGJSentArchiveReStart.flowAssignId',
								valueField : 'flowAssignId',
								displayField : 'flowAssignName',
								editable : false,
								triggerAction : 'all',
								forceSelection : true,
								store : new Ext.data.SimpleStore({
											url : __ctxPath
													+ '/system/arrLeadersAppUser.do?roles='+roleMap.get('officeDeputyDirectorRoleID')+','+roleMap.get('officeDirectorRoleID'),
											autoLoad : true,
											fields : ['flowAssignId',
													'flowAssignName']
										}),
								listeners:{'select':function(){
								Ext.getCmp('GGJSentArchiveReStart.reviewUserName').setValue(Ext
				.get('GGJSentArchiveReStart.flowAssignId').dom.value);
								//alert(Ext.getCmp('GGJSentArchiveReStart.reviewUserName').getValue());
								}}
							}, {
								xtype : 'textfield',
								name : 'archives.fileCounts',
								id : 'GGJSentArchiveReCounts',
								fieldLabel : '份数',
								value : 1
							}]
				}]
			},{
				xtype : 'textfield',
				name : 'archives.subject',
				allowBlank : false,
				width : '92.7%',
				fieldLabel : '标题'
			}, {
				xtype : 'container',
				layout : 'hbox',
				style : 'padding:0px 0px 5px 0px;margin-left:0px;',
				defaults : {
					allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style:'padding-top:4px;',
							text : '主送：',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.sendTo',
							width : '71.5%',
							id : 'GGJReGridSentArchiveReStart.sendTo'
						}, {
							style : 'padding-left:5px;',
							xtype : 'button',
							iconCls : 'btn-dep-sel',
							text : '常用主送单位',
							handler : function() {
										UnitsSelector.getView(
											function(ids, names) {
												Ext.getCmp('GGJReGridSentArchiveReStart.sendTo')
													.setValue(names);
												}, false,1).show();
										}
						}]
			}, {
				xtype : 'container',
				layout : 'hbox',
				defaults : {
					allowBlank : false,
					border : false
				},
				items : [{
							xtype : 'label',
							style:'padding-top:4px;',
							text : '抄送：',
							width : 84
						}, {
							xtype : 'textfield',
							name : 'archives.ccTo',
							allowBlank : true,
							id : 'GGJSentArchiveReStart.ccTo',
							width : '71.5%'
						}, {
							xtype : 'button',
							style : 'padding-left:5px;',
							iconCls : 'menu-department',
							text : '常用抄送单位',
							handler : function() {
										UnitsSelector.getView(
											function(ids, names) {
												Ext.getCmp('GGJSentArchiveReStart.ccTo')
													.setValue(names);
												}, false,2).show();
										}
						}]
			}, {
				xtype : 'fieldset',
				style:'padding-top:6px',
				border : false,
				defaults : {
					anchor : '96%,90%'
				},
				items : [this.docGridPanel]
			}, {
				layout : 'column',
				border : false,
				defaults : {
					layout : 'form',
					border : false
				},
				items : [{
							columnWidth : .85,
							items : [{
										fieldLabel : '公文附件',
										xtype : 'panel',
										id : 'GGJReFiles.personFilePanel',
										frame : false,
										border : true,
										bodyStyle : 'padding:4px 4px 4px 4px;',
										height : 80,
										autoScroll : true,
										html : ''
									}]
						}, {
							columnWidth : .12,
							items : [{
								border : false,
								xtype : 'button',
								text : '添加文件',
								iconCls : 'menu-attachment',
								handler : function() {
									var dialog = App.createUploadDialog({
										file_cat : 'document',
										judge_size : 'no',
										upload_autostart : true,
										callback : function(data) {
											var fileIds = Ext.getCmp('GGJReFiles.fileIds');
											var filePanel = Ext.getCmp('GGJReFiles.personFilePanel');

											for (var i = 0; i < data.length; i++) {
												if (fileIds.getValue() != '') {
													fileIds.setValue(fileIds
															.getValue()
															+ ',');
												}
												fileIds.setValue(fileIds
														.getValue()
														+ data[i].fileId);

												Ext.DomHelper
														.append(
																filePanel.body,
																'<span><a href="#" onclick="FileAttachDetail.show('
																		+ data[i].fileId
																		+ ')">'
																		+ data[i].filename
																		+ '</a> <img class="img-delete" src="'
																		+ __ctxPath
																		+ '/images/system/delete.gif" onclick="removeFile(this,\'GGJReFiles.fileIds\','
																		+ data[i].fileId
																		+ ')"/>&nbsp;|&nbsp;</span>');

											}
										}
									});
									dialog.show(this);
								}
							}, {
								xtype : 'button',
								text : '清除文件',
								iconCls : 'reset',
								handler : function() {
									var fileAttaches = Ext.getCmp('GGJReFiles.fileIds');
									var filePanel = Ext.getCmp('GGJReFiles.personFilePanel');

									filePanel.body.update('');
									fileAttaches.setValue('');
								}
							}, {
								xtype : 'hidden',
								id : 'GGJReFiles.fileIds',
								name : 'fileIds'
							}]
						}]
			},{id : '_GGJ_isReserveNoReStart_',
				border : false,
				layout : 'form',
				labelWidth:105,
				items : {
				xtype : 'radiogroup',
				hideParent:true,
				id:'_GGJAllBl_isReserveNoReStart_',
				allowBlank:true,
				fieldLabel : '是否使用预约编号',
				items : [{
							boxLabel : '是',
							id:'GGJSentArchiveReStart.reserveNo',
							name : 'archives.isReserveNo',
							inputValue : 1
						}, {
							boxLabel : '否',
							id:'GGJSentArchiveReStart.unreserveNo',
							name : 'archives.isReserveNo',
							inputValue : 0
						}]}
			}, {border:false,
				layout:'form',
				labelWidth:105,
				items:{
				xtype : 'radiogroup',
				fieldLabel : '是否规范性文件',
				items : [{
							boxLabel : '是',
							id:'GGJSentArchiveReStart.standard',
							name : 'archives.isStandard',
							inputValue : 1
						}, {
							boxLabel : '否',
							id:'GGJSentArchiveReStart.unStandard',
							name : 'archives.isStandard',
							inputValue : 0
						}]
			}}, {border:false,
			layout:'form',
			labelWidth:105,
			items:{
				xtype : 'radiogroup',
				fieldLabel : '是否公开到外网',
				id:'GGJSentArchiveStart.public',
				items : [{
					boxLabel : '是',
					id:'GGJSentArchiveReStart.public',
					name : 'archives.isPublic',
					inputValue : 1,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
								Ext.getCmp('GGJRestarthiddeIsPublic').disable();
		                        Ext.getCmp('GGJRestarthiddeUnPublicReasons').disable();
								Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').setValue(null);
								Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').allowBlank = true;
								Ext.getCmp('_GGJSentArchiveReStart.unPublicReasons').hide();
							}
						}
					}
				}, {
					boxLabel : '否',
					id:'GGJSentArchiveReStart.unPublic',
					name : 'archives.isPublic',
					inputValue : 0,
					listeners : {
						'check' : function(checkbox, checked) {
							if (checked) {
								Ext.getCmp('GGJRestarthiddeIsPublic').disable();
		                        Ext.getCmp('GGJRestarthiddeUnPublicReasons').disable();
								Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').allowBlank = false;
								Ext.getCmp('_GGJSentArchiveReStart.unPublicReasons').show();
							}
						}
					}
				}]
			}}, {
				id : '_GGJSentArchiveReStart.unPublicReasons',
				border : false,
				layout : 'form',
				items:[{
					fieldLabel : '不公开原因',
					xtype : 'textarea',
					hideParent : true,
					name : 'archives.unPublicReasons',
					id : 'GGJSentArchiveReStart.unPublicReasons',
					width : '93%'
				}]
			},{
				xtype:'hidden',
				disabled:true,
				name:'archives.isPublic',
				id:'GGJRestarthiddeIsPublic'
			},{
				xtype:'hidden',
				disabled:true,
				name:'archives.unPublicReasons',
				id:'GGJRestarthiddeUnPublicReasons'
			}, {
				xtype:'hidden',
				name:'archives.issuerId',
				value:curUserInfo.userId
			},{
				xtype:'hidden',
				name:'archives.archType',
				value:0
			},{
				xtype:'hidden',
				name:'archives.archivesId'
			},{
				xtype:'hidden',
				name:'archives.status'
			},{
				xtype:'hidden',
				id:'GGJSentArchiveReStart.reFileId'
			}]
		});
		if (this.archivesId) {
			this.formPanel.getForm().load({
				deferredRender : false,
				url : __ctxPath + '/archive/getArchDataArchives.do?archivesId='
						+ this.archivesId,
				waitMsg : '正在载入数据...',
				method:'post',
				success : function(form, action) {
					var isStandard=action.result.data['archives.isStandard'];
					var isPublic=action.result.data['archives.isPublic']; 
					var isReserveNo=action.result.data['archives.isReserveNo'];
					Ext.get('GGJSentArchiveReStart.flowAssignId').dom.value=action.result.data['archives.reviewUserName'];
					var privacyLevel=action.result.data['archives.privacyLevel'];
					Ext.getCmp('GGJSentArchiveReStart.archivesType').getStore().load({
						callback: function () {
							Ext.getCmp('GGJSentArchiveReStart.archivesType').setValue(Ext.decode(action.response.responseText).data[0].parentArchId);
						},
						scope: Ext.getCmp('GGJSentArchiveReStart.archivesType').getStore(),
						add: false
					});
					var did='${defId}';
					Ext.Ajax.request({
									url : __ctxPath + '/snconfig/listByPageFileSnConfigOrder.do',
									params : {
										'flowId' : did,
										'userId':curUserInfo.userId,
										'isUsed':0
									},
									method:'post',
									success : function(response, options) {
										var af=Ext.util.JSON.decode(response.responseText).result;
										if(af==""){
										  Ext.getCmp('_GGJ_isReserveNoReStart_').hide();
										  fp.getCmpByName('archives.isReserveNo').setValue(0);
										  Ext.getCmp('_GGJAllBl_isReserveNoReStart_').allowBlank=true;
										}else{
										Ext.getCmp('_GGJ_isReserveNoReStart_').show();
										if("${isReserveNo}"==0){
									 Ext.get('GGJSentArchiveReStart.unreserveNo').dom.checked=true;
											}else{					
									Ext.get('GGJSentArchiveReStart.reserveNo').dom.checked=true;
									}
													}
												}
					});
					if(privacyLevel!='一般'&&privacyLevel!='密级程度'){
						//Ext.getCmp('GGJSentArchiveReCounts').show();
						//Ext.getCmp('GGJSentArchiveReCounts').el.parent().parent().show();
						Ext.getCmp('GGJSentArchiveStart.public').disable();
						Ext.getCmp('GGJSentArchiveStart.public').allowBlank = true;
						Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').setValue(null);
						Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').allowBlank = true;
						Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').disable();
					    Ext.getCmp('GGJRestarthiddeIsPublic').setDisabled(false);
		                Ext.getCmp('GGJRestarthiddeUnPublicReasons').setDisabled(false);
					}else {
					
					  // Ext.getCmp('GGJSentArchiveReCounts').hide();
						//Ext.getCmp('GGJSentArchiveReCounts').el.parent().parent().hide();
					}
					if(privacyLevel=='一般'||privacyLevel=='密级程度'){
						Ext.getCmp('GGJRestarthiddeIsPublic').disable();
		                Ext.getCmp('GGJRestarthiddeUnPublicReasons').disable();
					if(isPublic==0){
						Ext.get("GGJSentArchiveReStart.unPublic").dom.checked=true;
					}else{
						Ext.get("GGJSentArchiveReStart.public").dom.checked=true;
						Ext.getCmp('GGJSentArchiveReStart.unPublicReasons').allowBlank = true;
						Ext.getCmp('_GGJSentArchiveReStart.unPublicReasons').hide();
					}
					}
					if(isStandard==0){
						Ext.get("GGJSentArchiveReStart.unStandard").dom.checked=true;
					}else{
						Ext.get("GGJSentArchiveReStart.standard").dom.checked=true;
					}
					var filePanel = Ext.getCmp('GGJReFiles.personFilePanel');
					var fileIds = Ext.getCmp("GGJReFiles.fileIds");
					/*Ext.Ajax.request({
									url : __ctxPath + '/archive/getAttachFilesArchives.do',
									params : {
										'fileIds' : '${fileIds}'
									},
									method:'post',
									success : function(response, options) {*/
										var af=Ext.decode(action.response.responseText).data[0].archivesFiles;
										if(af!=null){
										for (var i = 0; i < af.length; i++) {
											if (fileIds.getValue() != '') {
												fileIds.setValue(fileIds.getValue() + ',');
											}
											fileIds.setValue(fileIds.getValue() + af[i].fileId);
											Ext.DomHelper
													.append(
															filePanel.body,
															'<span><a href="#" onclick="FileAttachDetail.show('
																	+ af[i].fileId
																	+ ')">'
																	+ af[i].fileName
																	+ '</a><img class="img-delete" src="'
																	+ __ctxPath
																	+ '/images/system/delete.gif" onclick="removeFile(this,\'GGJReFiles.fileIds\','
																	+ af[i].fileId
																	+ ')"/>&nbsp;|&nbsp;</span>');
										}
									}
				/*					}
						});*/
				},
				failure : function(form, action) {
				}
			});
		}
	}
})
